{"ast":null,"code":"var _jsxFileName = \"/Users/nicholaspatrikeos/Sites/Gallifrey4.0/gallifrey-frontend/src/pages/TaskgroupProgressPage.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Layout from '../components/Layout';\nimport '../App.css';\nimport AuthContext from '../AuthContext';\nimport { useStep } from '../utils/update';\n\nfunction TaskgroupProgressPage(props) {\n  var class_id;\n\n  if (props.location.class_id != undefined) {\n    class_id = props.location.class_id;\n    localStorage.setItem('currentClass', class_id);\n  } else {\n    class_id = localStorage.getItem('currentClass');\n  }\n\n  var taskgroup_id;\n\n  if (props.location.taskgroup_id != undefined) {\n    taskgroup_id = props.location.taskgroup_id;\n    localStorage.setItem('currentTaskgroup', taskgroup_id);\n  } else {\n    taskgroup_id = localStorage.getItem('currentTaskgroup');\n  }\n\n  const [cls, setClass] = React.useState({\n    class_id: 0,\n    name: \"\",\n    course: {\n      topics: []\n    },\n    teachers: [],\n    students: [],\n    progress: []\n  });\n  const [taskgroup, setTaskgroup] = React.useState({\n    name: '',\n    taskgroup_id: 0,\n    tasks: []\n  });\n  const token = React.useContext(AuthContext);\n\n  const fetchClassData = topic_id => {\n    const getCourse = axios.get('/classes/taskgroup/details', {\n      params: {\n        token,\n        class_id,\n        taskgroup_id\n      }\n    }).then(classResponse => {\n      const classData = classResponse.data.class;\n      console.log(classData);\n      setClass(classData);\n    }).catch(err => {});\n  };\n\n  const fetchTaskgroupData = () => {\n    const getTaskgroup = axios.get('/taskgroups/details', {\n      params: {\n        token,\n        taskgroup_id\n      }\n    }).then(taskgroupResponse => {\n      const taskgroupData = taskgroupResponse.data.taskgroup;\n      console.log(taskgroupData);\n      setTaskgroup(taskgroupData);\n    });\n  };\n\n  const step1 = useStep(fetchClassData, [], 1);\n  const step2 = useStep(fetchTaskgroupData, [], 1);\n  return /*#__PURE__*/React.createElement(Layout, {\n    navtype: \"teacher\",\n    body: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"headerSection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"Progress Report\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"Class\"), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: '/classes/manage',\n        class_id: cls.class_id\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, cls.name), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"Course\"), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: '/courses/manage',\n        course_id: cls.course.course_id\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, cls.course.name), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, \"Topic\"), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: '/classes/progress',\n        topic_id: taskgroup.topic.topic_id,\n        class_id: cls.class_id\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, taskgroup.topic.name), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"Task Group\"), taskgroup.name, /*#__PURE__*/React.createElement(\"table\", {\n      id: \"taskProgress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, \"Student\")), taskgroups.tasks.map(({\n      taskgroup_id,\n      name\n    }, index) => /*#__PURE__*/React.createElement(\"td\", {\n      class: \"topicName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: '/classes/topics/taskgroups/progress',\n        class_id: cls.class_id,\n        taskgroup_id: taskgroup_id\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 37\n      }\n    }, name)))), cls.students.map(({\n      username,\n      name,\n      progress\n    }, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, progress.map(({\n      taskgroup,\n      progress\n    }, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progressDash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"unmarkedDash\",\n      style: {\n        width: progress.unmarked + '%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"correctDash\",\n      style: {\n        width: progress.correct + '%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"incorrectDash\",\n      style: {\n        width: progress.incorrect + '%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    })))))))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default TaskgroupProgressPage;","map":{"version":3,"sources":["/Users/nicholaspatrikeos/Sites/Gallifrey4.0/gallifrey-frontend/src/pages/TaskgroupProgressPage.js"],"names":["React","axios","Link","Layout","AuthContext","useStep","TaskgroupProgressPage","props","class_id","location","undefined","localStorage","setItem","getItem","taskgroup_id","cls","setClass","useState","name","course","topics","teachers","students","progress","taskgroup","setTaskgroup","tasks","token","useContext","fetchClassData","topic_id","getCourse","get","params","then","classResponse","classData","data","class","console","log","catch","err","fetchTaskgroupData","getTaskgroup","taskgroupResponse","taskgroupData","step1","step2","pathname","course_id","topic","taskgroups","map","index","username","width","unmarked","correct","incorrect"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom';\nimport Layout from '../components/Layout'\nimport '../App.css'\nimport AuthContext from '../AuthContext'\nimport { useStep } from '../utils/update'\n\nfunction TaskgroupProgressPage(props) {\n\n  var class_id\n  if (props.location.class_id != undefined) {\n    class_id = props.location.class_id\n    localStorage.setItem('currentClass', class_id)\n  } else {\n    class_id = localStorage.getItem('currentClass')\n  }\n\n  var taskgroup_id\n  if (props.location.taskgroup_id != undefined) {\n    taskgroup_id = props.location.taskgroup_id\n    localStorage.setItem('currentTaskgroup', taskgroup_id)\n  } else {\n    taskgroup_id = localStorage.getItem('currentTaskgroup')\n  }\n\n  const [cls, setClass] = React.useState({\n    class_id: 0,\n    name: \"\",\n    course: {\n      topics: []\n    },\n    teachers: [],\n    students: [],\n    progress: [],\n  })\n\n  const [taskgroup, setTaskgroup] = React.useState({\n    name: '',\n    taskgroup_id: 0,\n    tasks: []\n  })\n\n  const token = React.useContext(AuthContext)\n\n  const fetchClassData = (topic_id) => {\n    const getCourse = axios.get('/classes/taskgroup/details', {params: { token, class_id, taskgroup_id }})\n      .then((classResponse) => {\n        const classData = classResponse.data.class\n        console.log(classData)\n        setClass(classData)\n      })\n      .catch((err) => {})\n  }\n\n  const fetchTaskgroupData = () => {\n    const getTaskgroup = axios.get('/taskgroups/details', {params: { token, taskgroup_id }})\n    .then((taskgroupResponse) => {\n      const taskgroupData = taskgroupResponse.data.taskgroup\n      console.log(taskgroupData)\n      setTaskgroup(taskgroupData)\n    })\n  }\n\n  const step1 = useStep(fetchClassData, [], 1)\n  const step2 = useStep(fetchTaskgroupData, [], 1)\n\n  return (\n    <Layout navtype='teacher' body={\n      <>\n        <div class='headerSection'>\n            <h1>Progress Report</h1>\n        </div>\n\n        <hr/>\n\n        <h4>Class</h4>\n        <Link to={{\n          pathname: '/classes/manage',\n          class_id: cls.class_id\n        }}>{cls.name}</Link>\n        <h4>Course</h4>\n        <Link to={{\n          pathname: '/courses/manage',\n          course_id: cls.course.course_id\n        }}>{cls.course.name}</Link>\n        <h4>Topic</h4>\n        <Link to={{\n          pathname: '/classes/progress',\n          topic_id: taskgroup.topic.topic_id,\n          class_id: cls.class_id\n        }}>{taskgroup.topic.name}</Link>\n        <h4>Task Group</h4>\n        {taskgroup.name}\n\n        <table id=\"taskProgress\">\n          <thead>\n            <td><h4>Student</h4></td>\n            {taskgroups.tasks.map(({ taskgroup_id, name }, index) => (\n              <td class='topicName'><Link to={{\n                pathname: '/classes/topics/taskgroups/progress',\n                class_id: cls.class_id,\n                taskgroup_id: taskgroup_id\n              }}>{name}</Link></td>\n            ))}\n          </thead>\n          {cls.students.map(({ username, name, progress }, index) => (\n            <tr>\n              <td>{name}</td>\n              <td>\n                {progress.map(({ taskgroup, progress }, index) => (\n                  <div className='progressDash'>\n                    <div className='unmarkedDash' style={{width: progress.unmarked + '%'}}></div>\n                    <div className='correctDash' style={{width: progress.correct + '%'}}></div>\n                    <div className='incorrectDash' style={{width: progress.incorrect + '%'}}></div>\n                  </div>\n                ))}\n              </td>\n            </tr>\n          ))}\n        </table>\n      </>\n    }/>\n  )\n\n}\n\nexport default TaskgroupProgressPage\n"]},"metadata":{},"sourceType":"module"}