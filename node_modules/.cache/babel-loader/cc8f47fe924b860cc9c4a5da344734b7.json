{"ast":null,"code":"var _jsxFileName = \"/Users/nicholaspatrikeos/Sites/Gallifrey4.0/gallifrey-frontend/src/pages/QuizAddPage.js\";\nimport React from 'react';\nimport Layout from '../components/Layout';\nimport '../App.css';\nimport AuthContext from '../AuthContext';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction QuizAddPage(props) {\n  const token = React.useContext(AuthContext);\n  const [questions, setQuestions] = React.useState();\n  var taskgroup_id;\n\n  if (props.location.taskgroup_id != undefined) {\n    localStorage.setItem('currentTaskgroup', props.location.taskgroup_id);\n    taskgroup_id = props.location.taskgroup_id;\n  } else {\n    taskgroup_id = localStorage.getItem('currentTaskgroup');\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  function createQuestion() {\n    const description = document.getElementById('description').value;\n    const type = document.getElementById('newQuestionType').value;\n    questions.push({\n      description: description,\n      type: type,\n      choices: []\n    });\n    console.log(questions);\n    setQuestions(questions);\n  }\n\n  function questionContent(type, choices, questionNo) {\n    if (type == 'multiple choice single') {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, [...Array(choices)].map((element, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        value: index,\n        id: 'question' + questionNo + '-' + index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        for: 'question' + questionNo + '-' + index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 23\n        }\n      }, element), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"minusButton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 23\n        }\n      }, \"-\"))), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"multichoicenew\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"plusButton\",\n        onClick: () => addChoice(questionNo),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, \"+\"));\n    }\n  }\n\n  function addChoice(q) {\n    var choice = document.getElementById('multichoicenew').value;\n    console.log(choice);\n    questions[q - 1].choices.push(choice);\n    console.log(questions);\n    setQuestions(questions);\n  }\n\n  console.log('questions', questions);\n  return /*#__PURE__*/React.createElement(Layout, {\n    navtype: \"teacher\",\n    body: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"headerSection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, \"Tasks\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Topic: \", props.location.topic_name), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"Task Group: \", props.location.taskgroup_name)), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      name: \"addTask\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"*Title\",\n      name: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 65\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 70\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \"*Difficulty\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"difficulty\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Bronze\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, \"Bronze\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Silver\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, \"Silver\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Gold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, \"Gold\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Platinum\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, \"Platinum\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Kryptonite\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, \"Kryptonite\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"quizQuestions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 14\n      }\n    }, \"Questions\"), questions.map(({\n      description,\n      type,\n      choices\n    }, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 22\n      }\n    }, \"Question \", index + 1), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 51\n      }\n    }), \"Type: \", type, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"description\",\n      defaultValue: description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 80\n      }\n    }), questionContent(type, choices, index + 1), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"redTeacherButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 22\n      }\n    }, \"Remove Question\"))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"questionCreate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 18\n      }\n    }, \"New Question\"), /*#__PURE__*/React.createElement(\"form\", {\n      name: \"questionCreate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"description\",\n      placeholder: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 77\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"newQuestionType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"multiple choice single\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 26\n      }\n    }, \"Multiple Choice (Single Answer)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"multiple choice multi\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 26\n      }\n    }, \"Multiple Choice (Multiple Answers)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"short answer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 26\n      }\n    }, \"Short Answer\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Create Question\",\n      onClick: () => createQuestion(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 22\n      }\n    }))), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 14\n      }\n    }, \"End of Questions\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Create Task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/topics/manage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, \"Cancel\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default QuizAddPage;","map":{"version":3,"sources":["/Users/nicholaspatrikeos/Sites/Gallifrey4.0/gallifrey-frontend/src/pages/QuizAddPage.js"],"names":["React","Layout","AuthContext","Link","axios","QuizAddPage","props","token","useContext","questions","setQuestions","useState","taskgroup_id","location","undefined","localStorage","setItem","getItem","handleSubmit","event","preventDefault","createQuestion","description","document","getElementById","value","type","push","choices","console","log","questionContent","questionNo","Array","map","element","index","addChoice","q","choice","topic_name","taskgroup_name"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Layout from '../components/Layout'\nimport '../App.css'\nimport AuthContext from '../AuthContext'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\nfunction QuizAddPage(props) {\n\n  const token = React.useContext(AuthContext)\n  const [questions, setQuestions] = React.useState()\n\n  var taskgroup_id;\n  if (props.location.taskgroup_id != undefined) {\n    localStorage.setItem('currentTaskgroup', props.location.taskgroup_id)\n    taskgroup_id = props.location.taskgroup_id\n  } else {\n    taskgroup_id = localStorage.getItem('currentTaskgroup')\n  }\n\n  function handleSubmit(event) {\n      event.preventDefault()\n\n  }\n\n  function createQuestion() {\n    const description = document.getElementById('description').value\n    const type = document.getElementById('newQuestionType').value\n\n    questions.push({description: description, type: type, choices: []})\n    console.log(questions)\n    setQuestions(questions)\n  }\n\n\n  function questionContent(type, choices, questionNo) {\n\n      if (type == 'multiple choice single') {\n          return (<>\n              {[...Array(choices)].map((element, index) => (\n                  <>\n                      <input type='radio' value={index} id={'question' + questionNo + '-' + index} />\n                      <label for={'question' + questionNo + '-' + index}>{element}</label>\n                      <div className='minusButton'>-</div>\n                  </>\n              ))}\n              <input type='text' id='multichoicenew' />\n              <div className='plusButton' onClick={() => addChoice(questionNo)}>+</div>\n          </>)\n      }\n  }\n\n  function addChoice(q) {\n      var choice = document.getElementById('multichoicenew').value\n      console.log(choice)\n      questions[q - 1].choices.push(choice)\n      console.log(questions)\n      setQuestions(questions)\n  }\n\n  console.log('questions', questions)\n\n\n  return (\n    <Layout navtype='teacher' body={\n      <>\n        <div class='headerSection'>\n            <h1>Tasks</h1>\n            <h2>Topic: {props.location.topic_name}</h2>\n            <h2>Task Group: {props.location.taskgroup_name}</h2>\n        </div>\n        <hr/>\n\n        <form name='addTask' onSubmit={handleSubmit}>\n          <input type='text' placeholder='*Title' name='name' /><br/><br/>\n\n          <h4>*Difficulty</h4><br/>\n\n          <select id=\"difficulty\">\n              <option value=\"Bronze\">Bronze</option>\n              <option value=\"Silver\">Silver</option>\n              <option value=\"Gold\">Gold</option>\n              <option value='Platinum'>Platinum</option>\n              <option value='Kryptonite'>Kryptonite</option>\n          </select><br/><br/>\n\n          <div id='quizQuestions'>\n             <h4>Questions</h4>\n             {questions.map(({description, type, choices}, index) => (\n                 <div className='question'>\n                     <h4>Question {index + 1}</h4><br/>\n                     Type: {type}<br/>\n                     <textarea name='description' defaultValue={description} /><br/>\n                     {questionContent(type, choices, index + 1)}\n                     <div className='redTeacherButton'>Remove Question</div>\n                 </div>\n             ))}\n\n             <div id='questionCreate'>\n                 <h4>New Question</h4>\n                 <form name='questionCreate'>\n                     <textarea id='description' placeholder='Description' /><br/>\n                     <select id='newQuestionType'>\n                         <option value='multiple choice single'>Multiple Choice (Single Answer)</option>\n                         <option value='multiple choice multi'>Multiple Choice (Multiple Answers)</option>\n                         <option value='short answer'>Short Answer</option>\n                     </select>\n                     <input type='button' value='Create Question' onClick={() => createQuestion()} />\n                 </form>\n             </div>\n\n             <h4>End of Questions</h4>\n          </div>\n\n          <input type='submit' value='Create Task' />\n          <Link to='/topics/manage'>Cancel</Link>\n        </form>\n      </>\n    }/>\n  )\n}\n\nexport default QuizAddPage;\n"]},"metadata":{},"sourceType":"module"}