{"ast":null,"code":"var _jsxFileName = \"/Users/nicholaspatrikeos/Sites/Gallifrey4.0/gallifrey-frontend/src/components/ViewCourse.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\nimport AuthContext from '../AuthContext';\nimport { useStep } from '../utils/update';\nimport { Converter } from 'showdown';\nimport ReactHTMLParser from 'react-html-parser';\nimport { getTimeDifference } from '../utils/helperFunctions';\n\nfunction ViewCourse({\n  course_id,\n  user_type\n}, ...props) {\n  const [course, setCourse] = React.useState({\n    course_id: 0,\n    name: \"\",\n    modules: []\n  });\n  const [currentTopic, setCurrentTopic] = React.useState({\n    topic_id: 0,\n    module_id: 0,\n    module_name: '',\n    taskgroups: []\n  });\n  const [currentTask, setCurrentTask] = React.useState({\n    task_id: 0,\n    taskgroup: \"\",\n    name: \"\",\n    difficulty: \"\",\n    description: \"\",\n    hint: \"\",\n    solution: \"\",\n    attachments: []\n  });\n  const [submissions, setSubmissions] = React.useState([]);\n  const [progress, setProgress] = React.useState([]); // var [submissionsFetched, setSubmissionsFetched] = React.useState(false)\n\n  const [numFiles, setNumFiles] = React.useState();\n  const token = React.useContext(AuthContext);\n  var files = [];\n\n  const fetchCourseData = () => {\n    const getCourse = axios.get('/courses/details', {\n      params: {\n        token,\n        course_id\n      }\n    }).then(courseResponse => {\n      const courseData = courseResponse.data.course;\n      console.log(courseData);\n      setCourse(courseData);\n    }).catch(err => {});\n  };\n\n  const fetchSubmissionData = () => {\n    const task_id = currentTask.task_id;\n    const getSubmissions = axios.get('/courses/submissions', {\n      params: {\n        token,\n        course_id\n      }\n    }).then(submissionsResponse => {\n      const submissionData = submissionsResponse.data.submissions;\n      const progressData = submissionsResponse.data.progress;\n      console.log(submissionData);\n      console.log(progressData);\n      setSubmissions(submissionData);\n      setProgress(progressData);\n    }).catch(err => {});\n  };\n\n  function getTopic(module_id) {\n    for (var t = 0; t < course.modules.length; t++) {\n      if (course.modules[t].module_id == module_id) {\n        return course.modules[t];\n      }\n    }\n  }\n\n  function getTask(module_id, taskgroup_id, task_id) {\n    for (var t = 0; t < course.modules.length; t++) {\n      if (course.modules[t].module_id == module_id) {\n        for (var tg = 0; tg < course.modules[t].taskgroups.length; tg++) {\n          if (course.modules[t].taskgroups[tg].taskgroup_id == taskgroup_id) {\n            for (var tk = 0; tk < course.modules[t].taskgroups[tg].tasks.length; tk++) {\n              if (course.modules[t].taskgroups[tg].tasks[tk].task_id == task_id) {\n                return course.modules[t].taskgroups[tg].tasks[tk];\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function showTopic(module_id) {\n    var elements = document.getElementById('topicTabs').childNodes;\n\n    for (var e = 0; e < elements.length; e++) {\n      if (elements[e].id == 'md' + module_id) {\n        elements[e].style.borderTop = '1px solid lightgray';\n        elements[e].style.borderLeft = '1px solid lightgray';\n        elements[e].style.borderRight = '1px solid lightgray';\n      } else {\n        elements[e].style.border = '0px';\n      }\n    }\n\n    var topic = getTopic(module_id);\n    setCurrentTopic(topic);\n  }\n\n  function displayTaskgroup(taskgroup_id) {\n    var element = document.getElementById('tg' + taskgroup_id);\n    var elements = element.childNodes;\n    console.log(element.name);\n\n    if (element.name == 'undisplayed' || element.name == undefined) {\n      for (var e = 1; e < elements.length; e++) {\n        elements[e].style.display = 'block';\n        console.log(elements[e].style.display);\n      }\n\n      element.name = 'displayed';\n    } else if (element.name == 'displayed') {\n      for (var e = 1; e < elements.length; e++) {\n        elements[e].style.display = 'none';\n      }\n\n      element.name = 'undisplayed';\n    }\n  }\n\n  function displayTask(module_id, taskgroup_id, task_id) {\n    var task = getTask(module_id, taskgroup_id, task_id);\n    console.log(task);\n    setCurrentTask(task);\n    setNumFiles(1);\n    files = [];\n    var element = document.getElementById('hint');\n    element.innerHTML = 'Show Hint';\n    element.name = 'hintHide';\n    element.style.width = 'auto';\n    var label = document.getElementById('0');\n\n    if (label != null) {\n      label.innerHTML = 'Choose File';\n    }\n  }\n\n  function showHint() {\n    var element = document.getElementById('hint');\n    element.innerHTML = converter.makeHtml(currentTask.hint);\n    element.name = 'hintShow';\n    element.style.width = '100%';\n  }\n\n  function setFile(event) {\n    files.push(event.target.files[0]);\n    document.getElementById(event.target.id.replace('submission', '')).innerHTML = event.target.files[0].name;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (!files) {\n      console.log('No files chosen');\n      return;\n    }\n\n    var form = new FormData();\n    form.append('token', token);\n    form.append('task_id', currentTask.task_id);\n\n    for (var i = 0; i < numFiles; i++) {\n      form.append('file' + i, files[i]);\n    }\n\n    console.log(files);\n    axios.post('/tasks/submit', form, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(response => {\n      const data = response.data;\n      console.log(data);\n      window.location.reload();\n    }).catch(err => {});\n  }\n\n  function taskSubmissions() {\n    var subs = [];\n\n    for (var sb = 0; sb < submissions.length; sb++) {\n      if (submissions[sb].task == currentTask.task_id) {\n        subs.push(submissions[sb]);\n      }\n    }\n\n    return subs;\n  }\n\n  function taskSubmissionState(task_id) {\n    var subs = [];\n\n    for (var sb = 0; sb < submissions.length; sb++) {\n      if (submissions[sb].task == task_id) {\n        subs.push(submissions[sb]);\n      }\n    }\n\n    console.log('subs', subs);\n\n    if (subs.length > 0) {\n      return subs[subs.length - 1].status;\n    } else {\n      return '';\n    }\n  }\n\n  function addFile() {\n    setNumFiles(numFiles + 1);\n  }\n\n  const step1 = useStep(fetchCourseData, [], 2);\n  const step2 = useStep(fetchSubmissionData, [], 2);\n  var converter = new Converter();\n  var hint;\n\n  if (currentTask.hint) {\n    hint = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"teacherButton\",\n      id: \"hint\",\n      name: \"hintHide\",\n      onClick: () => showHint(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }\n    }, \"Show Hint\");\n  } else {\n    hint = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"teacherButton\",\n      id: \"hint\",\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 12\n      }\n    });\n  }\n\n  var submissionBlock;\n\n  if (user_type == 'student' && currentTask.task_id != 0) {\n    const taskSubs = taskSubmissions();\n    console.log(taskSubs);\n    var existingSubmissions;\n\n    if (taskSubs.length > 0) {\n      existingSubmissions = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }\n      }, \"Submissions\"), taskSubs.map(({\n        time,\n        currentTime,\n        status,\n        comment,\n        files\n      }, index) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"submissionDisplay\",\n        name: status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }\n      }, comment, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }\n      }, \" \", status), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 41\n        }\n      }), files.map(({\n        cover_name,\n        url\n      }, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n        href: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }\n      }, cover_name), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 51\n        }\n      }))), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }\n      }, getTimeDifference(time, currentTime)))));\n    } else {\n      existingSubmissions = /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n\n    var fileboxes = [];\n\n    for (var i = 0; i < numFiles; i++) {\n      fileboxes.push( /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filebox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        name: 'submission' + i,\n        id: 'submission' + i,\n        onChange: setFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 111\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        for: 'submission' + i,\n        id: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }\n      }, \"Choose File\")));\n    }\n\n    submissionBlock = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"submissionBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }\n    }, \"Submit Your Solution\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }\n    }, \"Files\"), /*#__PURE__*/React.createElement(\"form\", {\n      name: \"submit_task_form\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }\n    }, fileboxes.map((element, index) => /*#__PURE__*/React.createElement(React.Fragment, null, element)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"greenTeacherButton\",\n      id: \"addFileButton\",\n      onClick: addFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }\n    }, \"Add File\"));\n  } else {\n    submissionBlock = /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"courseName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }, course.name)), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    id: \"topicProgress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }\n  }, course.modules.map(({\n    module_name\n  }, index) => /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 11\n    }\n  }, module_name))), /*#__PURE__*/React.createElement(\"tr\", {\n    id: \"progressDashRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }\n  }, progress.map(({\n    unmarked,\n    correct,\n    incorrect,\n    progress\n  }, index) => /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progressDash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"unmarkedDash\",\n    style: {\n      width: progress.unmarked + '%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"correctDash\",\n    style: {\n      width: progress.correct + '%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"incorrectDash\",\n    style: {\n      width: progress.incorrect + '%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"topicTabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }\n  }, course.modules.map(({\n    module_id,\n    module_name,\n    topic_id\n  }, index) => /*#__PURE__*/React.createElement(\"div\", {\n    class: \"topicTab\",\n    id: \"md\" + module_id,\n    onClick: () => showTopic(module_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }\n  }, module_name))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"taskGroupBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"taskgroupList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }\n  }, currentTopic.taskgroups.map(({\n    taskgroup_id,\n    name,\n    tasks\n  }, index) => /*#__PURE__*/React.createElement(\"span\", {\n    className: \"taskGroupList\",\n    name: \"undisplayed\",\n    id: \"tg\" + taskgroup_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"taskGroupName\",\n    onClick: () => displayTaskgroup(taskgroup_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 15\n    }\n  }, name), tasks.map(({\n    task_id,\n    name,\n    difficulty\n  }, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'none'\n    },\n    id: \"tk\" + task_id,\n    onClick: () => displayTask(currentTopic.module_id, taskgroup_id, task_id),\n    className: difficulty,\n    name: taskSubmissionState(task_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 19\n    }\n  }, name)))))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"taskBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  }, currentTask.name), ReactHTMLParser(converter.makeHtml(currentTask.description))), hint, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 11\n    }\n  }), submissionBlock, existingSubmissions)));\n}\n\nexport default ViewCourse;","map":{"version":3,"sources":["/Users/nicholaspatrikeos/Sites/Gallifrey4.0/gallifrey-frontend/src/components/ViewCourse.js"],"names":["React","axios","Link","AuthContext","useStep","Converter","ReactHTMLParser","getTimeDifference","ViewCourse","course_id","user_type","props","course","setCourse","useState","name","modules","currentTopic","setCurrentTopic","topic_id","module_id","module_name","taskgroups","currentTask","setCurrentTask","task_id","taskgroup","difficulty","description","hint","solution","attachments","submissions","setSubmissions","progress","setProgress","numFiles","setNumFiles","token","useContext","files","fetchCourseData","getCourse","get","params","then","courseResponse","courseData","data","console","log","catch","err","fetchSubmissionData","getSubmissions","submissionsResponse","submissionData","progressData","getTopic","t","length","getTask","taskgroup_id","tg","tk","tasks","showTopic","elements","document","getElementById","childNodes","e","id","style","borderTop","borderLeft","borderRight","border","topic","displayTaskgroup","element","undefined","display","displayTask","task","innerHTML","width","label","showHint","converter","makeHtml","setFile","event","push","target","replace","handleSubmit","preventDefault","form","FormData","append","i","post","headers","response","window","location","reload","taskSubmissions","subs","sb","taskSubmissionState","status","addFile","step1","step2","submissionBlock","taskSubs","existingSubmissions","map","time","currentTime","comment","index","cover_name","url","fileboxes","unmarked","correct","incorrect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,YAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,iBAAT,QAAkC,0BAAlC;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAApB,EAA8C,GAAGC,KAAjD,EAAwD;AAEtD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,KAAK,CAACc,QAAN,CAAe;AACzCL,IAAAA,SAAS,EAAE,CAD8B;AAEzCM,IAAAA,IAAI,EAAE,EAFmC;AAGzCC,IAAAA,OAAO,EAAE;AAHgC,GAAf,CAA5B;AAKA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkClB,KAAK,CAACc,QAAN,CAAe;AACrDK,IAAAA,QAAQ,EAAE,CAD2C;AAErDC,IAAAA,SAAS,EAAE,CAF0C;AAGrDC,IAAAA,WAAW,EAAE,EAHwC;AAIrDC,IAAAA,UAAU,EAAE;AAJyC,GAAf,CAAxC;AAMA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCxB,KAAK,CAACc,QAAN,CAAe;AACnDW,IAAAA,OAAO,EAAE,CAD0C;AAEnDC,IAAAA,SAAS,EAAE,EAFwC;AAGnDX,IAAAA,IAAI,EAAE,EAH6C;AAInDY,IAAAA,UAAU,EAAE,EAJuC;AAKnDC,IAAAA,WAAW,EAAE,EALsC;AAMnDC,IAAAA,IAAI,EAAE,EAN6C;AAOnDC,IAAAA,QAAQ,EAAE,EAPyC;AAQnDC,IAAAA,WAAW,EAAE;AARsC,GAAf,CAAtC;AAUA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCjC,KAAK,CAACc,QAAN,CAAe,EAAf,CAAtC;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BnC,KAAK,CAACc,QAAN,CAAe,EAAf,CAAhC,CAxBsD,CAyBtD;;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BrC,KAAK,CAACc,QAAN,EAAhC;AAEA,QAAMwB,KAAK,GAAGtC,KAAK,CAACuC,UAAN,CAAiBpC,WAAjB,CAAd;AACA,MAAIqC,KAAK,GAAG,EAAZ;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC5B,UAAMC,SAAS,GAAGzC,KAAK,CAAC0C,GAAN,CAAU,kBAAV,EAA8B;AAACC,MAAAA,MAAM,EAAE;AAAEN,QAAAA,KAAF;AAAS7B,QAAAA;AAAT;AAAT,KAA9B,EACfoC,IADe,CACTC,cAAD,IAAoB;AACxB,YAAMC,UAAU,GAAGD,cAAc,CAACE,IAAf,CAAoBpC,MAAvC;AACAqC,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACAlC,MAAAA,SAAS,CAACkC,UAAD,CAAT;AACD,KALe,EAMfI,KANe,CAMRC,GAAD,IAAS,CAAE,CANF,CAAlB;AAOD,GARD;;AAUA,QAAMC,mBAAmB,GAAG,MAAM;AAChC,UAAM5B,OAAO,GAAGF,WAAW,CAACE,OAA5B;AACA,UAAM6B,cAAc,GAAGrD,KAAK,CAAC0C,GAAN,CAAU,sBAAV,EAAkC;AAACC,MAAAA,MAAM,EAAE;AAAEN,QAAAA,KAAF;AAAS7B,QAAAA;AAAT;AAAT,KAAlC,EACpBoC,IADoB,CACdU,mBAAD,IAAyB;AAC7B,YAAMC,cAAc,GAAGD,mBAAmB,CAACP,IAApB,CAAyBhB,WAAhD;AACA,YAAMyB,YAAY,GAAGF,mBAAmB,CAACP,IAApB,CAAyBd,QAA9C;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYM,cAAZ;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYO,YAAZ;AACAxB,MAAAA,cAAc,CAACuB,cAAD,CAAd;AACArB,MAAAA,WAAW,CAACsB,YAAD,CAAX;AACD,KARoB,EASpBN,KAToB,CASbC,GAAD,IAAS,CAAE,CATG,CAAvB;AAUD,GAZD;;AAcA,WAASM,QAAT,CAAkBtC,SAAlB,EAA6B;AAC3B,SAAK,IAAIuC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG/C,MAAM,CAACI,OAAP,CAAe4C,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C,UAAI/C,MAAM,CAACI,OAAP,CAAe2C,CAAf,EAAkBvC,SAAlB,IAA+BA,SAAnC,EAA8C;AAC5C,eAAOR,MAAM,CAACI,OAAP,CAAe2C,CAAf,CAAP;AACD;AACF;AACF;;AAED,WAASE,OAAT,CAAiBzC,SAAjB,EAA4B0C,YAA5B,EAA0CrC,OAA1C,EAAmD;AACjD,SAAK,IAAIkC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG/C,MAAM,CAACI,OAAP,CAAe4C,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C,UAAI/C,MAAM,CAACI,OAAP,CAAe2C,CAAf,EAAkBvC,SAAlB,IAA+BA,SAAnC,EAA8C;AAC5C,aAAK,IAAI2C,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGnD,MAAM,CAACI,OAAP,CAAe2C,CAAf,EAAkBrC,UAAlB,CAA6BsC,MAAnD,EAA2DG,EAAE,EAA7D,EAAiE;AAC/D,cAAInD,MAAM,CAACI,OAAP,CAAe2C,CAAf,EAAkBrC,UAAlB,CAA6ByC,EAA7B,EAAiCD,YAAjC,IAAiDA,YAArD,EAAmE;AACjE,iBAAK,IAAIE,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGpD,MAAM,CAACI,OAAP,CAAe2C,CAAf,EAAkBrC,UAAlB,CAA6ByC,EAA7B,EAAiCE,KAAjC,CAAuCL,MAA7D,EAAqEI,EAAE,EAAvE,EAA2E;AACzE,kBAAIpD,MAAM,CAACI,OAAP,CAAe2C,CAAf,EAAkBrC,UAAlB,CAA6ByC,EAA7B,EAAiCE,KAAjC,CAAuCD,EAAvC,EAA2CvC,OAA3C,IAAsDA,OAA1D,EAAmE;AACjE,uBAAOb,MAAM,CAACI,OAAP,CAAe2C,CAAf,EAAkBrC,UAAlB,CAA6ByC,EAA7B,EAAiCE,KAAjC,CAAuCD,EAAvC,CAAP;AACD;AACF;AACF;AACF;AACF;AACF;AACF;;AAED,WAASE,SAAT,CAAmB9C,SAAnB,EAA8B;AAC5B,QAAI+C,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,UAApD;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,QAAQ,CAACP,MAA7B,EAAqCW,CAAC,EAAtC,EAA0C;AACxC,UAAIJ,QAAQ,CAACI,CAAD,CAAR,CAAYC,EAAZ,IAAkB,OAAOpD,SAA7B,EAAwC;AACtC+C,QAAAA,QAAQ,CAACI,CAAD,CAAR,CAAYE,KAAZ,CAAkBC,SAAlB,GAA8B,qBAA9B;AACAP,QAAAA,QAAQ,CAACI,CAAD,CAAR,CAAYE,KAAZ,CAAkBE,UAAlB,GAA+B,qBAA/B;AACAR,QAAAA,QAAQ,CAACI,CAAD,CAAR,CAAYE,KAAZ,CAAkBG,WAAlB,GAAgC,qBAAhC;AACD,OAJD,MAIO;AACLT,QAAAA,QAAQ,CAACI,CAAD,CAAR,CAAYE,KAAZ,CAAkBI,MAAlB,GAA2B,KAA3B;AACD;AACF;;AAED,QAAIC,KAAK,GAAGpB,QAAQ,CAACtC,SAAD,CAApB;AAEAF,IAAAA,eAAe,CAAC4D,KAAD,CAAf;AACD;;AAED,WAASC,gBAAT,CAA0BjB,YAA1B,EAAwC;AACtC,QAAIkB,OAAO,GAAGZ,QAAQ,CAACC,cAAT,CAAwB,OAAOP,YAA/B,CAAd;AACA,QAAIK,QAAQ,GAAGa,OAAO,CAACV,UAAvB;AAEArB,IAAAA,OAAO,CAACC,GAAR,CAAY8B,OAAO,CAACjE,IAApB;;AAEA,QAAIiE,OAAO,CAACjE,IAAR,IAAgB,aAAhB,IAAiCiE,OAAO,CAACjE,IAAR,IAAgBkE,SAArD,EAAgE;AAC9D,WAAK,IAAIV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,QAAQ,CAACP,MAA7B,EAAqCW,CAAC,EAAtC,EAA0C;AACxCJ,QAAAA,QAAQ,CAACI,CAAD,CAAR,CAAYE,KAAZ,CAAkBS,OAAlB,GAA4B,OAA5B;AACAjC,QAAAA,OAAO,CAACC,GAAR,CAAYiB,QAAQ,CAACI,CAAD,CAAR,CAAYE,KAAZ,CAAkBS,OAA9B;AACD;;AACDF,MAAAA,OAAO,CAACjE,IAAR,GAAe,WAAf;AAED,KAPD,MAOO,IAAIiE,OAAO,CAACjE,IAAR,IAAgB,WAApB,EAAiC;AACtC,WAAK,IAAIwD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,QAAQ,CAACP,MAA7B,EAAqCW,CAAC,EAAtC,EAA0C;AACxCJ,QAAAA,QAAQ,CAACI,CAAD,CAAR,CAAYE,KAAZ,CAAkBS,OAAlB,GAA4B,MAA5B;AACD;;AACDF,MAAAA,OAAO,CAACjE,IAAR,GAAe,aAAf;AACD;AACF;;AAED,WAASoE,WAAT,CAAqB/D,SAArB,EAAgC0C,YAAhC,EAA8CrC,OAA9C,EAAuD;AACrD,QAAI2D,IAAI,GAAGvB,OAAO,CAACzC,SAAD,EAAY0C,YAAZ,EAA0BrC,OAA1B,CAAlB;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAYkC,IAAZ;AACA5D,IAAAA,cAAc,CAAC4D,IAAD,CAAd;AACA/C,IAAAA,WAAW,CAAC,CAAD,CAAX;AACAG,IAAAA,KAAK,GAAG,EAAR;AAEA,QAAIwC,OAAO,GAAGZ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAd;AACAW,IAAAA,OAAO,CAACK,SAAR,GAAoB,WAApB;AACAL,IAAAA,OAAO,CAACjE,IAAR,GAAe,UAAf;AACAiE,IAAAA,OAAO,CAACP,KAAR,CAAca,KAAd,GAAsB,MAAtB;AAEA,QAAIC,KAAK,GAAGnB,QAAQ,CAACC,cAAT,CAAwB,GAAxB,CAAZ;;AACA,QAAIkB,KAAK,IAAI,IAAb,EAAmB;AACfA,MAAAA,KAAK,CAACF,SAAN,GAAkB,aAAlB;AACH;AACF;;AAED,WAASG,QAAT,GAAoB;AAClB,QAAIR,OAAO,GAAGZ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAd;AACAW,IAAAA,OAAO,CAACK,SAAR,GAAoBI,SAAS,CAACC,QAAV,CAAmBnE,WAAW,CAACM,IAA/B,CAApB;AACAmD,IAAAA,OAAO,CAACjE,IAAR,GAAe,UAAf;AACAiE,IAAAA,OAAO,CAACP,KAAR,CAAca,KAAd,GAAsB,MAAtB;AACD;;AAED,WAASK,OAAT,CAAiBC,KAAjB,EAAwB;AACtBpD,IAAAA,KAAK,CAACqD,IAAN,CAAWD,KAAK,CAACE,MAAN,CAAatD,KAAb,CAAmB,CAAnB,CAAX;AACA4B,IAAAA,QAAQ,CAACC,cAAT,CAAwBuB,KAAK,CAACE,MAAN,CAAatB,EAAb,CAAgBuB,OAAhB,CAAwB,YAAxB,EAAsC,EAAtC,CAAxB,EAAmEV,SAAnE,GAA+EO,KAAK,CAACE,MAAN,CAAatD,KAAb,CAAmB,CAAnB,EAAsBzB,IAArG;AACD;;AAED,WAASiF,YAAT,CAAsBJ,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACK,cAAN;;AAEA,QAAI,CAACzD,KAAL,EAAY;AACVS,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA;AACD;;AAED,QAAIgD,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqB9D,KAArB;AACA4D,IAAAA,IAAI,CAACE,MAAL,CAAY,SAAZ,EAAuB7E,WAAW,CAACE,OAAnC;;AACA,SAAK,IAAI4E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjE,QAApB,EAA8BiE,CAAC,EAA/B,EAAmC;AAC/BH,MAAAA,IAAI,CAACE,MAAL,CAAY,SAASC,CAArB,EAAwB7D,KAAK,CAAC6D,CAAD,CAA7B;AACH;;AAEDpD,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AAGAvC,IAAAA,KAAK,CAACqG,IAAN,CAAW,eAAX,EAA4BJ,IAA5B,EAAkC;AAAEK,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAAX,KAAlC,EACG1D,IADH,CACS2D,QAAD,IAAc;AAClB,YAAMxD,IAAI,GAAGwD,QAAQ,CAACxD,IAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAyD,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KALH,EAMGxD,KANH,CAMUC,GAAD,IAAS,CAAE,CANpB;AAOD;;AAED,WAASwD,eAAT,GAA2B;AACzB,QAAIC,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG9E,WAAW,CAAC4B,MAAlC,EAA0CkD,EAAE,EAA5C,EAAgD;AAC9C,UAAI9E,WAAW,CAAC8E,EAAD,CAAX,CAAgB1B,IAAhB,IAAwB7D,WAAW,CAACE,OAAxC,EAAiD;AAC/CoF,QAAAA,IAAI,CAAChB,IAAL,CAAU7D,WAAW,CAAC8E,EAAD,CAArB;AACD;AACF;;AACD,WAAOD,IAAP;AACD;;AAED,WAASE,mBAAT,CAA6BtF,OAA7B,EAAsC;AACpC,QAAIoF,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG9E,WAAW,CAAC4B,MAAlC,EAA0CkD,EAAE,EAA5C,EAAgD;AAC9C,UAAI9E,WAAW,CAAC8E,EAAD,CAAX,CAAgB1B,IAAhB,IAAwB3D,OAA5B,EAAqC;AACnCoF,QAAAA,IAAI,CAAChB,IAAL,CAAU7D,WAAW,CAAC8E,EAAD,CAArB;AACD;AACF;;AACD7D,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB2D,IAApB;;AACA,QAAIA,IAAI,CAACjD,MAAL,GAAc,CAAlB,EAAqB;AACnB,aAAOiD,IAAI,CAACA,IAAI,CAACjD,MAAL,GAAc,CAAf,CAAJ,CAAsBoD,MAA7B;AACD,KAFD,MAEO;AACL,aAAO,EAAP;AACD;AAEF;;AAED,WAASC,OAAT,GAAmB;AACf5E,IAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AACH;;AAGD,QAAM8E,KAAK,GAAG9G,OAAO,CAACqC,eAAD,EAAkB,EAAlB,EAAsB,CAAtB,CAArB;AACA,QAAM0E,KAAK,GAAG/G,OAAO,CAACiD,mBAAD,EAAsB,EAAtB,EAA0B,CAA1B,CAArB;AAEA,MAAIoC,SAAS,GAAG,IAAIpF,SAAJ,EAAhB;AAEA,MAAIwB,IAAJ;;AACA,MAAIN,WAAW,CAACM,IAAhB,EAAsB;AACpBA,IAAAA,IAAI,gBACF;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,EAAE,EAAC,MAAlC;AAAyC,MAAA,IAAI,EAAC,UAA9C;AAAyD,MAAA,OAAO,EAAE,MAAM2D,QAAQ,EAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF;AAGD,GAJD,MAIO;AACL3D,IAAAA,IAAI,gBAAG;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,EAAE,EAAC,MAAlC;AAAyC,MAAA,KAAK,EAAE;AAACqD,QAAAA,OAAO,EAAE;AAAV,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAIkC,eAAJ;;AACA,MAAI1G,SAAS,IAAI,SAAb,IAA0Ba,WAAW,CAACE,OAAZ,IAAuB,CAArD,EAAwD;AAEtD,UAAM4F,QAAQ,GAAGT,eAAe,EAAhC;AACA3D,IAAAA,OAAO,CAACC,GAAR,CAAYmE,QAAZ;AACA,QAAIC,mBAAJ;;AAEA,QAAID,QAAQ,CAACzD,MAAT,GAAkB,CAAtB,EAAyB;AAErB0D,MAAAA,mBAAmB,gBACnB,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEGD,QAAQ,CAACE,GAAT,CAAa,CAAC;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,WAAR;AAAqBT,QAAAA,MAArB;AAA6BU,QAAAA,OAA7B;AAAsClF,QAAAA;AAAtC,OAAD,EAAgDmF,KAAhD,kBACZ;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,IAAI,EAAEX,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkDU,OAAlD,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAUV,MAAV,CADF,eAC4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD5B,EAEGxE,KAAK,CAAC+E,GAAN,CAAU,CAAC;AAAEK,QAAAA,UAAF;AAAcC,QAAAA;AAAd,OAAD,EAAsBF,KAAtB,kBACP,uDAAE;AAAG,QAAA,IAAI,EAAEE,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAeD,UAAf,CAAF,eAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhC,CADH,CAFH,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOrH,iBAAiB,CAACiH,IAAD,EAAOC,WAAP,CAAxB,CALF,CADD,CAFH,CADA;AAcH,KAhBD,MAgBO;AACLH,MAAAA,mBAAmB,gBAAG,yCAAtB;AACD;;AAED,QAAIQ,SAAS,GAAG,EAAhB;;AACA,SAAK,IAAIzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjE,QAApB,EAA8BiE,CAAC,EAA/B,EAAmC;AAC/ByB,MAAAA,SAAS,CAACjC,IAAV,eAAe;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAE,eAAeQ,CAAxC;AAA2C,QAAA,EAAE,EAAE,eAAeA,CAA9D;AAAiE,QAAA,QAAQ,EAAEV,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,eACuF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADvF,eAEC;AAAO,QAAA,GAAG,EAAE,eAAeU,CAA3B;AAA8B,QAAA,EAAE,EAAEA,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFD,CAAf;AAIH;;AAEDe,IAAAA,eAAe,gBACb;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,eAIE;AAAM,MAAA,IAAI,EAAC,kBAAX;AAA8B,MAAA,QAAQ,EAAEpB,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG8B,SAAS,CAACP,GAAV,CAAc,CAACvC,OAAD,EAAU2C,KAAV,kBACX,0CAAG3C,OAAH,CADH,CADH,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAJF,eAWE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAoC,MAAA,EAAE,EAAC,eAAvC;AAAuD,MAAA,OAAO,EAAEiC,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,CADF;AAgBD,GAlDD,MAkDO;AACLG,IAAAA,eAAe,gBAAG,yCAAlB;AACD;;AAED,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,EAAE,EAAC,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBxG,MAAM,CAACG,IAA5B,CADJ,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAOE;AAAO,IAAA,EAAE,EAAC,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCH,MAAM,CAACI,OAAP,CAAeuG,GAAf,CAAmB,CAAC;AAAElG,IAAAA;AAAF,GAAD,EAAkBsG,KAAlB,kBAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKtG,WAAL,CADD,CADD,CADF,eAME;AAAI,IAAA,EAAE,EAAC,iBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCa,QAAQ,CAACqF,GAAT,CAAa,CAAC;AAAEQ,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,SAArB;AAAgC/F,IAAAA;AAAhC,GAAD,EAA6CyF,KAA7C,kBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAE;AAACrC,MAAAA,KAAK,EAAEpD,QAAQ,CAAC6F,QAAT,GAAoB;AAA5B,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,KAAK,EAAE;AAACzC,MAAAA,KAAK,EAAEpD,QAAQ,CAAC8F,OAAT,GAAmB;AAA3B,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,KAAK,EAAE;AAAC1C,MAAAA,KAAK,EAAEpD,QAAQ,CAAC+F,SAAT,GAAqB;AAA7B,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADD,CADD,CANF,CAPF,eA2BE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCrH,MAAM,CAACI,OAAP,CAAeuG,GAAf,CAAmB,CAAC;AAAEnG,IAAAA,SAAF;AAAaC,IAAAA,WAAb;AAA0BF,IAAAA;AAA1B,GAAD,EAAuCwG,KAAvC,kBAClB;AAAK,IAAA,KAAK,EAAC,UAAX;AAAsB,IAAA,EAAE,EAAE,OAAOvG,SAAjC;AAA4C,IAAA,OAAO,EAAE,MAAM8C,SAAS,CAAC9C,SAAD,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,WADH,CADD,CADD,CA3BF,eAmCE;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCJ,YAAY,CAACK,UAAb,CAAwBiG,GAAxB,CAA4B,CAAC;AAAEzD,IAAAA,YAAF;AAAgB/C,IAAAA,IAAhB;AAAsBkD,IAAAA;AAAtB,GAAD,EAAgC0D,KAAhC,kBAC3B;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAgC,IAAA,IAAI,EAAC,aAArC;AAAmD,IAAA,EAAE,EAAE,OAAO7D,YAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAgC,IAAA,OAAO,EAAE,MAAMiB,gBAAgB,CAACjB,YAAD,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC/C,IADD,CADF,EAIGkD,KAAK,CAACsD,GAAN,CAAU,CAAC;AAAE9F,IAAAA,OAAF;AAAWV,IAAAA,IAAX;AAAiBY,IAAAA;AAAjB,GAAD,EAAgCgG,KAAhC,kBACT,uDACE;AAAM,IAAA,KAAK,EAAE;AAACzC,MAAAA,OAAO,EAAE;AAAV,KAAb;AAAgC,IAAA,EAAE,EAAE,OAAOzD,OAA3C;AAAoD,IAAA,OAAO,EAAE,MAAM0D,WAAW,CAAClE,YAAY,CAACG,SAAd,EAAyB0C,YAAzB,EAAuCrC,OAAvC,CAA9E;AACA,IAAA,SAAS,EAAEE,UADX;AACuB,IAAA,IAAI,EAAEoF,mBAAmB,CAACtF,OAAD,CADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC4DV,IAD5D,CADF,CADD,CAJH,CADD,CADD,CADJ,eAiBI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKQ,WAAW,CAACR,IAAjB,CADF,EAEGT,eAAe,CAACmF,SAAS,CAACC,QAAV,CAAmBnE,WAAW,CAACK,WAA/B,CAAD,CAFlB,CAFF,EAOCC,IAPD,eAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARA,eASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATA,EAUCuF,eAVD,EAWCE,mBAXD,CAjBJ,CAnCF,CADF;AAsED;;AAED,eAAe9G,UAAf","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport '../App.css'\nimport AuthContext from '../AuthContext'\nimport { useStep } from '../utils/update'\nimport { Converter } from 'showdown'\nimport ReactHTMLParser from 'react-html-parser'\nimport { getTimeDifference } from '../utils/helperFunctions'\n\nfunction ViewCourse({ course_id, user_type }, ...props) {\n\n  const [course, setCourse] = React.useState({\n    course_id: 0,\n    name: \"\",\n    modules: []\n  })\n  const [currentTopic, setCurrentTopic] = React.useState({\n    topic_id: 0,\n    module_id: 0,\n    module_name: '',\n    taskgroups: [],\n  })\n  const [currentTask, setCurrentTask] = React.useState({\n    task_id: 0,\n    taskgroup: \"\",\n    name: \"\",\n    difficulty: \"\",\n    description: \"\",\n    hint: \"\",\n    solution: \"\",\n    attachments: []\n  })\n  const [submissions, setSubmissions] = React.useState([])\n  const [progress, setProgress] = React.useState([])\n  // var [submissionsFetched, setSubmissionsFetched] = React.useState(false)\n  const [numFiles, setNumFiles] = React.useState();\n\n  const token = React.useContext(AuthContext)\n  var files = [];\n\n  const fetchCourseData = () => {\n    const getCourse = axios.get('/courses/details', {params: { token, course_id }})\n      .then((courseResponse) => {\n        const courseData = courseResponse.data.course\n        console.log(courseData)\n        setCourse(courseData)\n      })\n      .catch((err) => {})\n  }\n\n  const fetchSubmissionData = () => {\n    const task_id = currentTask.task_id\n    const getSubmissions = axios.get('/courses/submissions', {params: { token, course_id }})\n      .then((submissionsResponse) => {\n        const submissionData = submissionsResponse.data.submissions\n        const progressData = submissionsResponse.data.progress\n        console.log(submissionData)\n        console.log(progressData)\n        setSubmissions(submissionData)\n        setProgress(progressData)\n      })\n      .catch((err) => {})\n  }\n\n  function getTopic(module_id) {\n    for (var t = 0; t < course.modules.length; t++) {\n      if (course.modules[t].module_id == module_id) {\n        return course.modules[t]\n      }\n    }\n  }\n\n  function getTask(module_id, taskgroup_id, task_id) {\n    for (var t = 0; t < course.modules.length; t++) {\n      if (course.modules[t].module_id == module_id) {\n        for (var tg = 0; tg < course.modules[t].taskgroups.length; tg++) {\n          if (course.modules[t].taskgroups[tg].taskgroup_id == taskgroup_id) {\n            for (var tk = 0; tk < course.modules[t].taskgroups[tg].tasks.length; tk++) {\n              if (course.modules[t].taskgroups[tg].tasks[tk].task_id == task_id) {\n                return course.modules[t].taskgroups[tg].tasks[tk]\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function showTopic(module_id) {\n    var elements = document.getElementById('topicTabs').childNodes\n    for (var e = 0; e < elements.length; e++) {\n      if (elements[e].id == 'md' + module_id) {\n        elements[e].style.borderTop = '1px solid lightgray'\n        elements[e].style.borderLeft = '1px solid lightgray'\n        elements[e].style.borderRight = '1px solid lightgray'\n      } else {\n        elements[e].style.border = '0px'\n      }\n    }\n\n    var topic = getTopic(module_id)\n\n    setCurrentTopic(topic)\n  }\n\n  function displayTaskgroup(taskgroup_id) {\n    var element = document.getElementById('tg' + taskgroup_id)\n    var elements = element.childNodes\n\n    console.log(element.name)\n\n    if (element.name == 'undisplayed' || element.name == undefined) {\n      for (var e = 1; e < elements.length; e++) {\n        elements[e].style.display = 'block'\n        console.log(elements[e].style.display)\n      }\n      element.name = 'displayed'\n\n    } else if (element.name == 'displayed') {\n      for (var e = 1; e < elements.length; e++) {\n        elements[e].style.display = 'none'\n      }\n      element.name = 'undisplayed'\n    }\n  }\n\n  function displayTask(module_id, taskgroup_id, task_id) {\n    var task = getTask(module_id, taskgroup_id, task_id)\n    console.log(task)\n    setCurrentTask(task)\n    setNumFiles(1)\n    files = []\n\n    var element = document.getElementById('hint')\n    element.innerHTML = 'Show Hint'\n    element.name = 'hintHide'\n    element.style.width = 'auto'\n\n    var label = document.getElementById('0')\n    if (label != null) {\n        label.innerHTML = 'Choose File'\n    }\n  }\n\n  function showHint() {\n    var element = document.getElementById('hint')\n    element.innerHTML = converter.makeHtml(currentTask.hint)\n    element.name = 'hintShow'\n    element.style.width = '100%'\n  }\n\n  function setFile(event) {\n    files.push(event.target.files[0])\n    document.getElementById(event.target.id.replace('submission', '')).innerHTML = event.target.files[0].name\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault()\n\n    if (!files) {\n      console.log('No files chosen')\n      return\n    }\n\n    var form = new FormData()\n    form.append('token', token)\n    form.append('task_id', currentTask.task_id)\n    for (var i = 0; i < numFiles; i++) {\n        form.append('file' + i, files[i])\n    }\n\n    console.log(files)\n\n\n    axios.post('/tasks/submit', form, { headers: { 'content-type': 'multipart/form-data' }})\n      .then((response) => {\n        const data = response.data\n        console.log(data)\n        window.location.reload()\n      })\n      .catch((err) => {})\n  }\n\n  function taskSubmissions() {\n    var subs = []\n    for (var sb = 0; sb < submissions.length; sb++) {\n      if (submissions[sb].task == currentTask.task_id) {\n        subs.push(submissions[sb])\n      }\n    }\n    return subs\n  }\n\n  function taskSubmissionState(task_id) {\n    var subs = []\n    for (var sb = 0; sb < submissions.length; sb++) {\n      if (submissions[sb].task == task_id) {\n        subs.push(submissions[sb])\n      }\n    }\n    console.log('subs', subs)\n    if (subs.length > 0) {\n      return subs[subs.length - 1].status\n    } else {\n      return ''\n    }\n\n  }\n\n  function addFile() {\n      setNumFiles(numFiles + 1)\n  }\n\n\n  const step1 = useStep(fetchCourseData, [], 2)\n  const step2 = useStep(fetchSubmissionData, [], 2)\n\n  var converter = new Converter()\n\n  var hint;\n  if (currentTask.hint) {\n    hint = (\n      <div className='teacherButton' id='hint' name='hintHide' onClick={() => showHint()}>Show Hint</div>\n    )\n  } else {\n    hint = <div className='teacherButton' id='hint' style={{display: 'none'}}></div>\n  }\n\n  var submissionBlock;\n  if (user_type == 'student' && currentTask.task_id != 0) {\n\n    const taskSubs = taskSubmissions()\n    console.log(taskSubs)\n    var existingSubmissions;\n\n    if (taskSubs.length > 0) {\n\n        existingSubmissions = (\n        <>\n          <h4>Submissions</h4>\n          {taskSubs.map(({ time, currentTime, status, comment, files }, index) => (\n            <div className='submissionDisplay' name={status}>{comment}\n              <strong> {status}</strong><br/>\n              {files.map(({ cover_name, url }, index) => (\n                  <><a href={url}>{cover_name}</a><br/></>\n              ))}\n              <span>{getTimeDifference(time, currentTime)}</span>\n            </div>\n          ))}\n        </>\n        )\n    } else {\n      existingSubmissions = <></>\n    }\n\n    var fileboxes = []\n    for (var i = 0; i < numFiles; i++) {\n        fileboxes.push(<div className='filebox'>\n                        <input type='file' name={'submission' + i} id={'submission' + i} onChange={setFile} /><br/>\n                        <label for={'submission' + i} id={i}>Choose File</label>\n                       </div>)\n    }\n\n    submissionBlock = (\n      <div className='submissionBox'>\n        <h4>Submit Your Solution</h4>\n        <hr/>\n        <p>Files</p>\n        <form name='submit_task_form' onSubmit={handleSubmit}>\n          {fileboxes.map((element, index) => (\n              <>{element}</>\n          ))}\n          <br/>\n          <input type='submit' value='Submit'/>\n        </form>\n        <div className='greenTeacherButton' id='addFileButton' onClick={addFile}>Add File</div>\n      </div>\n\n    )\n  } else {\n    submissionBlock = <></>\n  }\n\n  return (\n    <>\n      <div>\n          <h1 id='courseName'>{course.name}</h1>\n      </div>\n\n      <hr/>\n\n      <table id='topicProgress'>\n        <tr>\n        {course.modules.map(({ module_name }, index) => (\n          <td>{module_name}</td>\n        ))}\n        </tr>\n        <tr id='progressDashRow'>\n        {progress.map(({ unmarked, correct, incorrect, progress }, index) => (\n          <td>\n            <div className='progressDash'>\n              <div className='unmarkedDash' style={{width: progress.unmarked + '%'}}></div>\n              <div className='correctDash' style={{width: progress.correct + '%'}}></div>\n              <div className='incorrectDash' style={{width: progress.incorrect + '%'}}></div>\n            </div>\n          </td>\n        ))}\n        </tr>\n\n      </table>\n\n      <div id='topicTabs'>\n      {course.modules.map(({ module_id, module_name, topic_id }, index) => (\n        <div class='topicTab' id={\"md\" + module_id} onClick={() => showTopic(module_id)}>\n          {module_name}\n        </div>\n      ))}\n      </div>\n\n      <div id=\"taskGroupBox\">\n          <div id='taskgroupList'>\n          {currentTopic.taskgroups.map(({ taskgroup_id, name, tasks }, index) => (\n            <span className='taskGroupList' name='undisplayed' id={\"tg\" + taskgroup_id}>\n              <span className='taskGroupName' onClick={() => displayTaskgroup(taskgroup_id)}>\n              {name}\n              </span>\n              {tasks.map(({ task_id, name, difficulty }, index) => (\n                <>\n                  <span style={{display: 'none'}} id={\"tk\" + task_id} onClick={() => displayTask(currentTopic.module_id, taskgroup_id, task_id)}\n                  className={difficulty} name={taskSubmissionState(task_id)}>{name}</span>\n                </>\n              ))}\n            </span>\n          ))}\n          </div>\n\n          <div id='taskBox'>\n          {\n            <>\n              <h1>{currentTask.name}</h1>\n              {ReactHTMLParser(converter.makeHtml(currentTask.description))}\n            </>\n          }\n          {hint}\n          <br/>\n          <br/>\n          {submissionBlock}\n          {existingSubmissions}\n          </div>\n      </div>\n    </>\n  )\n\n}\n\nexport default ViewCourse\n"]},"metadata":{},"sourceType":"module"}