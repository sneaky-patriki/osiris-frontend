{"ast":null,"code":"\"use strict\";\n\nvar decodeHtml = require(\"html-encoder-decoder\").decode,\n    showdown = require(\"showdown\"),\n    hljs = require(\"highlight.js\"),\n    classAttr = 'class=\"';\n\nmodule.exports = function showdownHighlight() {\n  return [{\n    type: \"output\",\n    filter: function filter(text, converter, options) {\n      var left = \"<pre><code\\\\b[^>]*>\",\n          right = \"</code></pre>\",\n          flags = \"g\",\n          replacement = function replacement(wholeMatch, match, left, right) {\n        match = decodeHtml(match);\n        var lang = (left.match(/class=\\\"([^ \\\"]+)/) || [])[1];\n\n        if (left.includes(classAttr)) {\n          var attrIndex = left.indexOf(classAttr) + classAttr.length;\n          left = left.slice(0, attrIndex) + 'hljs ' + left.slice(attrIndex);\n        } else {\n          left = left.slice(0, -1) + ' class=\"hljs\">';\n        }\n\n        if (lang && hljs.getLanguage(lang)) {\n          return left + hljs.highlight(lang, match).value + right;\n        } else {\n          return left + hljs.highlightAuto(match).value + right;\n        }\n      };\n\n      return showdown.helper.replaceRecursiveRegExp(text, replacement, left, right, flags);\n    }\n  }];\n};","map":{"version":3,"sources":["/Users/nicholaspatrikeos/Sites/Gallifrey4.0/gallifrey-frontend/node_modules/showdown-highlight/lib/index.js"],"names":["decodeHtml","require","decode","showdown","hljs","classAttr","module","exports","showdownHighlight","type","filter","text","converter","options","left","right","flags","replacement","wholeMatch","match","lang","includes","attrIndex","indexOf","length","slice","getLanguage","highlight","value","highlightAuto","helper","replaceRecursiveRegExp"],"mappings":"AAAA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,sBAAD,CAAP,CAAgCC,MAAjD;AAAA,IACIC,QAAQ,GAAGF,OAAO,CAAC,UAAD,CADtB;AAAA,IAEIG,IAAI,GAAGH,OAAO,CAAC,cAAD,CAFlB;AAAA,IAGII,SAAS,GAAG,SAHhB;;AAKAC,MAAM,CAACC,OAAP,GAAiB,SAASC,iBAAT,GAA6B;AAC1C,SAAO,CAAC;AACJC,IAAAA,IAAI,EAAE,QADF;AAEJC,IAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,OAAjC,EAA0C;AAC9C,UAAIC,IAAI,GAAG,qBAAX;AAAA,UACIC,KAAK,GAAG,eADZ;AAAA,UAEIC,KAAK,GAAG,GAFZ;AAAA,UAGIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,UAArB,EAAiCC,KAAjC,EAAwCL,IAAxC,EAA8CC,KAA9C,EAAqD;AACnEI,QAAAA,KAAK,GAAGnB,UAAU,CAACmB,KAAD,CAAlB;AACA,YAAIC,IAAI,GAAG,CAACN,IAAI,CAACK,KAAL,CAAW,mBAAX,KAAmC,EAApC,EAAwC,CAAxC,CAAX;;AAEA,YAAIL,IAAI,CAACO,QAAL,CAAchB,SAAd,CAAJ,EAA8B;AAC1B,cAAIiB,SAAS,GAAGR,IAAI,CAACS,OAAL,CAAalB,SAAb,IAA0BA,SAAS,CAACmB,MAApD;AACAV,UAAAA,IAAI,GAAGA,IAAI,CAACW,KAAL,CAAW,CAAX,EAAcH,SAAd,IAA2B,OAA3B,GAAqCR,IAAI,CAACW,KAAL,CAAWH,SAAX,CAA5C;AACH,SAHD,MAGO;AACHR,UAAAA,IAAI,GAAGA,IAAI,CAACW,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,IAAoB,gBAA3B;AACH;;AAED,YAAIL,IAAI,IAAIhB,IAAI,CAACsB,WAAL,CAAiBN,IAAjB,CAAZ,EAAoC;AAChC,iBAAON,IAAI,GAAGV,IAAI,CAACuB,SAAL,CAAeP,IAAf,EAAqBD,KAArB,EAA4BS,KAAnC,GAA2Cb,KAAlD;AACH,SAFD,MAEO;AACH,iBAAOD,IAAI,GAAGV,IAAI,CAACyB,aAAL,CAAmBV,KAAnB,EAA0BS,KAAjC,GAAyCb,KAAhD;AACH;AACJ,OAnBD;;AAqBA,aAAOZ,QAAQ,CAAC2B,MAAT,CAAgBC,sBAAhB,CAAuCpB,IAAvC,EAA6CM,WAA7C,EAA0DH,IAA1D,EAAgEC,KAAhE,EAAuEC,KAAvE,CAAP;AACH;AAzBG,GAAD,CAAP;AA2BH,CA5BD","sourcesContent":["\"use strict\";\n\nvar decodeHtml = require(\"html-encoder-decoder\").decode,\n    showdown = require(\"showdown\"),\n    hljs = require(\"highlight.js\"),\n    classAttr = 'class=\"';\n\nmodule.exports = function showdownHighlight() {\n    return [{\n        type: \"output\",\n        filter: function filter(text, converter, options) {\n            var left = \"<pre><code\\\\b[^>]*>\",\n                right = \"</code></pre>\",\n                flags = \"g\",\n                replacement = function replacement(wholeMatch, match, left, right) {\n                match = decodeHtml(match);\n                var lang = (left.match(/class=\\\"([^ \\\"]+)/) || [])[1];\n\n                if (left.includes(classAttr)) {\n                    var attrIndex = left.indexOf(classAttr) + classAttr.length;\n                    left = left.slice(0, attrIndex) + 'hljs ' + left.slice(attrIndex);\n                } else {\n                    left = left.slice(0, -1) + ' class=\"hljs\">';\n                }\n\n                if (lang && hljs.getLanguage(lang)) {\n                    return left + hljs.highlight(lang, match).value + right;\n                } else {\n                    return left + hljs.highlightAuto(match).value + right;\n                }\n            };\n\n            return showdown.helper.replaceRecursiveRegExp(text, replacement, left, right, flags);\n        }\n    }];\n};"]},"metadata":{},"sourceType":"script"}