{"ast":null,"code":"import React, { isValidElement, cloneElement, useRef, useEffect, useReducer, useState } from 'react';\nimport { render } from 'react-dom';\nimport { Transition, TransitionGroup } from 'react-transition-group';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar eventManager = {\n  list: /*#__PURE__*/new Map(),\n  emitQueue: /*#__PURE__*/new Map(),\n  on: function on(event, callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event).push(callback);\n    return this;\n  },\n  off: function off(event, callback) {\n    if (callback) {\n      var cb = this.list.get(event).filter(function (cb) {\n        return cb !== callback;\n      });\n      this.list.set(event, cb);\n      return this;\n    }\n\n    this.list[\"delete\"](event);\n    return this;\n  },\n  cancelEmit: function cancelEmit(event) {\n    var timers = this.emitQueue.get(event);\n\n    if (timers) {\n      timers.forEach(function (timer) {\n        return clearTimeout(timer);\n      });\n      this.emitQueue[\"delete\"](event);\n    }\n\n    return this;\n  },\n\n  /**\r\n   * Enqueue the event at the end of the call stack\r\n   * Doing so let the user call toast as follow:\r\n   * toast('1')\r\n   * toast('2')\r\n   * toast('3')\r\n   * Without setTimemout the code above will not work\r\n   */\n  emit: function emit(event) {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    this.list.has(event) && this.list.get(event).forEach(function (callback) {\n      var timer = setTimeout(function () {\n        // @ts-ignore\n        callback.apply(void 0, args);\n      }, 0);\n      _this.emitQueue.has(event) || _this.emitQueue.set(event, []);\n\n      _this.emitQueue.get(event).push(timer);\n    });\n  }\n};\n\nfunction isNum(v) {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\n\nfunction isStr(v) {\n  return typeof v === 'string';\n}\n\nfunction isFn(v) {\n  return typeof v === 'function';\n}\n\nfunction parseClassName(v) {\n  return typeof v === 'string' ? v : null;\n}\n\nfunction objectValues(obj) {\n  return Object.keys(obj).map(function (key) {\n    return obj[key];\n  });\n}\n\nvar canUseDom = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nfunction canBeRendered(content) {\n  return isValidElement(content) || isStr(content) || isFn(content) || isNum(content);\n}\n\nvar POSITION = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\nvar TYPE = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default',\n  DARK: 'dark'\n};\nvar RT_NAMESPACE = 'Toastify';\n\nfunction cssTransition(_ref) {\n  var enter = _ref.enter,\n      exit = _ref.exit,\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? 750 : _ref$duration,\n      _ref$appendPosition = _ref.appendPosition,\n      appendPosition = _ref$appendPosition === void 0 ? false : _ref$appendPosition;\n  return function (_ref2) {\n    var children = _ref2.children,\n        position = _ref2.position,\n        preventExitTransition = _ref2.preventExitTransition,\n        props = _objectWithoutPropertiesLoose(_ref2, [\"children\", \"position\", \"preventExitTransition\"]);\n\n    var enterClassName = appendPosition ? enter + \"--\" + position : enter;\n    var exitClassName = appendPosition ? exit + \"--\" + position : exit;\n    var enterDuration, exitDuration;\n\n    if (Array.isArray(duration) && duration.length === 2) {\n      enterDuration = duration[0];\n      exitDuration = duration[1];\n    } else {\n      enterDuration = exitDuration = duration;\n    }\n\n    var onEnter = function onEnter() {\n      var node = props.nodeRef.current;\n\n      if (node) {\n        node.classList.add(enterClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = enterDuration * 0.001 + \"s\";\n      }\n    };\n\n    var onEntered = function onEntered() {\n      var node = props.nodeRef.current;\n\n      if (node) {\n        node.classList.remove(enterClassName);\n        node.style.cssText = '';\n      }\n    };\n\n    var onExit = function onExit() {\n      var node = props.nodeRef.current;\n\n      if (node) {\n        node.classList.add(exitClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = exitDuration * 0.001 + \"s\";\n      }\n    };\n\n    return React.createElement(Transition, Object.assign({}, props, {\n      timeout: preventExitTransition ? 0 : {\n        enter: enterDuration,\n        exit: exitDuration\n      },\n      onEnter: onEnter,\n      onEntered: onEntered,\n      onExit: preventExitTransition ? undefined : onExit\n    }), children);\n  };\n}\n\nfunction CloseButton(_ref) {\n  var closeToast = _ref.closeToast,\n      type = _ref.type,\n      ariaLabel = _ref.ariaLabel;\n  return React.createElement(\"button\", {\n    className: RT_NAMESPACE + \"__close-button \" + RT_NAMESPACE + \"__close-button--\" + type,\n    type: \"button\",\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      closeToast(e);\n    },\n    \"aria-label\": ariaLabel\n  }, React.createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 14 16\"\n  }, React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n  })));\n}\n\nCloseButton.defaultProps = {\n  ariaLabel: 'close'\n};\n\nfunction ProgressBar(_ref) {\n  var _cx, _animationEvent;\n\n  var delay = _ref.delay,\n      isRunning = _ref.isRunning,\n      closeToast = _ref.closeToast,\n      type = _ref.type,\n      hide = _ref.hide,\n      className = _ref.className,\n      userStyle = _ref.style,\n      controlledProgress = _ref.controlledProgress,\n      progress = _ref.progress,\n      rtl = _ref.rtl,\n      isIn = _ref.isIn;\n\n  var style = _extends({}, userStyle, {\n    animationDuration: delay + \"ms\",\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  });\n\n  if (controlledProgress) style.transform = \"scaleX(\" + progress + \")\";\n  var classNames = cx(RT_NAMESPACE + \"__progress-bar\", controlledProgress ? RT_NAMESPACE + \"__progress-bar--controlled\" : RT_NAMESPACE + \"__progress-bar--animated\", RT_NAMESPACE + \"__progress-bar--\" + type, (_cx = {}, _cx[RT_NAMESPACE + \"__progress-bar--rtl\"] = rtl, _cx), className); // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n\n  var animationEvent = (_animationEvent = {}, _animationEvent[controlledProgress && progress >= 1 ? 'onTransitionEnd' : 'onAnimationEnd'] = controlledProgress && progress < 1 ? null : function () {\n    isIn && closeToast();\n  }, _animationEvent);\n  return React.createElement(\"div\", Object.assign({\n    className: classNames,\n    style: style\n  }, animationEvent));\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n\nvar Toast = function Toast(props) {\n  var _cx;\n\n  var _useToast = useToast(props),\n      isRunning = _useToast.isRunning,\n      preventExitTransition = _useToast.preventExitTransition,\n      toastRef = _useToast.toastRef,\n      onExitTransitionEnd = _useToast.onExitTransitionEnd,\n      eventHandlers = _useToast.eventHandlers;\n\n  var closeButton = props.closeButton,\n      children = props.children,\n      autoClose = props.autoClose,\n      onClick = props.onClick,\n      type = props.type,\n      hideProgressBar = props.hideProgressBar,\n      closeToast = props.closeToast,\n      transition = props.transition,\n      position = props.position,\n      className = props.className,\n      style = props.style,\n      bodyClassName = props.bodyClassName,\n      bodyStyle = props.bodyStyle,\n      progressClassName = props.progressClassName,\n      progressStyle = props.progressStyle,\n      updateId = props.updateId,\n      role = props.role,\n      progress = props.progress,\n      rtl = props.rtl,\n      toastId = props.toastId;\n  var cssClasses = cx(RT_NAMESPACE + \"__toast\", RT_NAMESPACE + \"__toast--\" + type, (_cx = {}, _cx[RT_NAMESPACE + \"__toast--rtl\"] = rtl, _cx), className);\n  var controlledProgress = !!progress;\n  var Transition = transition;\n\n  function renderCloseButton(closeButton) {\n    if (!closeButton) return null;\n    var props = {\n      closeToast: closeToast,\n      type: type\n    };\n    if (isFn(closeButton)) return closeButton(props);\n    if (isValidElement(closeButton)) return cloneElement(closeButton, props);\n  }\n\n  return React.createElement(Transition, {\n    \"in\": props[\"in\"],\n    appear: true,\n    onExited: onExitTransitionEnd,\n    position: position,\n    preventExitTransition: preventExitTransition,\n    nodeRef: toastRef\n  }, React.createElement(\"div\", Object.assign({\n    id: toastId,\n    onClick: onClick,\n    className: cssClasses\n  }, eventHandlers, {\n    style: style,\n    ref: toastRef\n  }), React.createElement(\"div\", Object.assign({}, props[\"in\"] && {\n    role: role\n  }, {\n    className: cx(RT_NAMESPACE + \"__toast-body\", bodyClassName),\n    style: bodyStyle\n  }), children), renderCloseButton(closeButton), (autoClose || controlledProgress) && React.createElement(ProgressBar, Object.assign({}, updateId && !controlledProgress ? {\n    key: \"pb-\" + updateId\n  } : {}, {\n    rtl: rtl,\n    delay: autoClose,\n    isRunning: isRunning,\n    isIn: props[\"in\"],\n    closeToast: closeToast,\n    hide: hideProgressBar,\n    type: type,\n    style: progressStyle,\n    className: progressClassName,\n    controlledProgress: controlledProgress,\n    progress: progress\n  }))));\n};\n\nvar Bounce = /*#__PURE__*/cssTransition({\n  enter: RT_NAMESPACE + \"__bounce-enter\",\n  exit: RT_NAMESPACE + \"__bounce-exit\",\n  appendPosition: true\n});\nvar Slide = /*#__PURE__*/cssTransition({\n  enter: RT_NAMESPACE + \"__slide-enter\",\n  exit: RT_NAMESPACE + \"__slide-exit\",\n  duration: [450, 750],\n  appendPosition: true\n});\nvar Zoom = /*#__PURE__*/cssTransition({\n  enter: RT_NAMESPACE + \"__zoom-enter\",\n  exit: RT_NAMESPACE + \"__zoom-exit\"\n});\nvar Flip = /*#__PURE__*/cssTransition({\n  enter: RT_NAMESPACE + \"__flip-enter\",\n  exit: RT_NAMESPACE + \"__flip-exit\"\n});\n\nvar ToastPositioner = function ToastPositioner(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      style = _ref.style,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"children\", \"className\", \"style\"]); // Monkey patch react-transition-group\n  // As exit transition is broken with strict mode\n\n\n  delete rest[\"in\"];\n  return React.createElement(\"div\", {\n    className: className,\n    style: style\n  }, React.Children.map(children, function (child) {\n    return React.cloneElement(child, rest);\n  }));\n};\n\nvar ToastContainer = function ToastContainer(props) {\n  var _useToastContainer = useToastContainer(props),\n      getToastToRender = _useToastContainer.getToastToRender,\n      containerRef = _useToastContainer.containerRef,\n      isToastActive = _useToastContainer.isToastActive,\n      unmountToast = _useToastContainer.unmountToast;\n\n  var className = props.className,\n      style = props.style,\n      rtl = props.rtl,\n      containerId = props.containerId;\n  return React.createElement(\"div\", {\n    ref: containerRef,\n    className: RT_NAMESPACE,\n    id: containerId\n  }, React.createElement(TransitionGroup, {\n    component: null\n  }, getToastToRender(function (position, toastList) {\n    var _cx;\n\n    var swag = {\n      className: cx(RT_NAMESPACE + \"__toast-container\", RT_NAMESPACE + \"__toast-container--\" + position, (_cx = {}, _cx[RT_NAMESPACE + \"__toast-container--rtl\"] = rtl, _cx), parseClassName(className)),\n      style: toastList.length === 0 ? _extends({}, style, {\n        pointerEvents: 'none'\n      }) : _extends({}, style)\n    };\n    return React.createElement(ToastPositioner, Object.assign({}, swag, {\n      key: \"container-\" + position\n    }), toastList.map(function (toast) {\n      var content = toast.content,\n          options = toast.options;\n      return React.createElement(Toast, Object.assign({}, options, {\n        \"in\": isToastActive(options.toastId),\n        unmountToast: unmountToast,\n        key: \"toast-\" + options.key,\n        closeButton: options.closeButton === true ? CloseButton : options.closeButton\n      }), content);\n    }));\n  })));\n}; // @ts-ignore\n\n\nToastContainer.propTypes = {\n  // @ts-ignore\n  position: /*#__PURE__*/PropTypes.oneOf( /*#__PURE__*/objectValues(POSITION)),\n  // @ts-ignore\n  autoClose: /*#__PURE__*/PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  // @ts-ignore\n  closeButton: /*#__PURE__*/PropTypes.oneOfType([PropTypes.node, PropTypes.bool, PropTypes.func]),\n  hideProgressBar: PropTypes.bool,\n  pauseOnHover: PropTypes.bool,\n  closeOnClick: PropTypes.bool,\n  newestOnTop: PropTypes.bool,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  toastClassName: PropTypes.string,\n  bodyClassName: PropTypes.string,\n  progressClassName: PropTypes.string,\n  progressStyle: PropTypes.object,\n  transition: PropTypes.func,\n  rtl: PropTypes.bool,\n  draggable: PropTypes.bool,\n  draggablePercent: PropTypes.number,\n  pauseOnFocusLoss: PropTypes.bool,\n  enableMultiContainer: PropTypes.bool,\n  containerId: /*#__PURE__*/PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  role: PropTypes.string,\n  onClick: PropTypes.func\n};\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: 80,\n  role: 'alert'\n};\nvar containers = /*#__PURE__*/new Map();\nvar latestInstance;\nvar containerDomNode;\nvar containerConfig;\nvar queue = [];\nvar lazy = false;\n/**\r\n * Check whether any container is currently mounted in the DOM\r\n */\n\nfunction isAnyContainerMounted() {\n  return containers.size > 0;\n}\n/**\r\n * Get the container by id. Returns the last container declared when no id is given.\r\n */\n\n\nfunction getContainer(containerId) {\n  if (!isAnyContainerMounted()) return null;\n  return containers.get(!containerId ? latestInstance : containerId);\n}\n/**\r\n * Get the toast by id, given it's in the DOM, otherwise returns null\r\n */\n\n\nfunction getToast(toastId, _ref) {\n  var containerId = _ref.containerId;\n  var container = getContainer(containerId);\n  if (!container) return null;\n  return container.getToast(toastId);\n}\n/**\r\n * Generate a random toastId\r\n */\n\n\nfunction generateToastId() {\n  return (Math.random().toString(36) + Date.now().toString(36)).substr(2, 10);\n}\n/**\r\n * Generate a toastId or use the one provided\r\n */\n\n\nfunction getToastId(options) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n/**\r\n * If the container is not mounted, the toast is enqueued and\r\n * the container lazy mounted\r\n */\n\n\nfunction dispatchToast(content, options) {\n  if (isAnyContainerMounted()) {\n    eventManager.emit(0\n    /* Show */\n    , content, options);\n  } else {\n    queue.push({\n      content: content,\n      options: options\n    });\n\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(React.createElement(ToastContainer, Object.assign({}, containerConfig)), containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n/**\r\n * Merge provided options with the defaults settings and generate the toastId\r\n */\n\n\nfunction mergeOptions(type, options) {\n  return _extends({}, options, {\n    type: options && options.type || type,\n    toastId: getToastId(options)\n  });\n}\n\nvar toast = function toast(content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n};\n\ntoast.success = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.SUCCESS, options));\n};\n\ntoast.info = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.INFO, options));\n};\n\ntoast.error = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.ERROR, options));\n};\n\ntoast.warning = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.WARNING, options));\n};\n\ntoast.dark = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DARK, options));\n};\n/**\r\n * Maybe I should remove warning in favor of warn, I don't know\r\n */\n\n\ntoast.warn = toast.warning;\n/**\r\n * Remove toast programmaticaly\r\n */\n\ntoast.dismiss = function (id) {\n  return isAnyContainerMounted() && eventManager.emit(1\n  /* Clear */\n  , id);\n};\n/**\r\n * Clear waiting queue when limit is used\r\n */\n\n\ntoast.clearWaitingQueue = function (params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  return isAnyContainerMounted() && eventManager.emit(5\n  /* ClearWaitingQueue */\n  , params);\n};\n/**\r\n * return true if one container is displaying the toast\r\n */\n\n\ntoast.isActive = function (id) {\n  var isToastActive = false;\n  containers.forEach(function (container) {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n  return isToastActive;\n};\n\ntoast.update = function (toastId, options) {\n  if (options === void 0) {\n    options = {};\n  } // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n\n\n  setTimeout(function () {\n    var toast = getToast(toastId, options);\n\n    if (toast) {\n      var oldOptions = toast.options,\n          oldContent = toast.content;\n\n      var nextOptions = _extends({}, oldOptions, {}, options, {\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      });\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n      var content = typeof nextOptions.render !== 'undefined' ? nextOptions.render : oldContent;\n      delete nextOptions.render;\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n/**\r\n * Used for controlled progress bar.\r\n */\n\n\ntoast.done = function (id) {\n  toast.update(id, {\n    progress: 1\n  });\n};\n/**\r\n * Track changes. The callback get the number of toast displayed\r\n *\r\n */\n\n\ntoast.onChange = function (callback) {\n  if (isFn(callback)) {\n    eventManager.on(4\n    /* Change */\n    , callback);\n  }\n\n  return function () {\n    isFn(callback) && eventManager.off(4\n    /* Change */\n    , callback);\n  };\n};\n/**\r\n * Configure the ToastContainer when lazy mounted\r\n */\n\n\ntoast.configure = function (config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n/**\r\n * Wait until the ToastContainer is mounted to dispatch the toast\r\n * and attach isActive method\r\n */\n\neventManager.on(2\n/* DidMount */\n, function (containerInstance) {\n  latestInstance = containerInstance.containerId || containerInstance;\n  containers.set(latestInstance, containerInstance);\n  queue.forEach(function (item) {\n    eventManager.emit(0\n    /* Show */\n    , item.content, item.options);\n  });\n  queue = [];\n}).on(3\n/* WillUnmount */\n, function (containerInstance) {\n  containers[\"delete\"](containerInstance.containerId || containerInstance);\n\n  if (containers.size === 0) {\n    eventManager.off(0\n    /* Show */\n    ).off(1\n    /* Clear */\n    ).off(5\n    /* ClearWaitingQueue */\n    );\n  }\n\n  if (canUseDom && containerDomNode) {\n    document.body.removeChild(containerDomNode);\n  }\n});\n/**\r\n * `useKeeper` is a helper around `useRef`.\r\n *\r\n * You don't need to access the `.current`property to get the value\r\n * If refresh is set to true. The ref will be updated every render\r\n */\n\nfunction useKeeper(arg, refresh) {\n  if (refresh === void 0) {\n    refresh = false;\n  }\n\n  var ref = useRef(arg);\n  useEffect(function () {\n    if (refresh) ref.current = arg;\n  });\n  return ref.current;\n}\n\nfunction hasToastId(toastId) {\n  return toastId === 0 || toastId;\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'ADD':\n      return [].concat(state, [action.toastId]).filter(function (id) {\n        return id !== action.staleId;\n      });\n\n    case 'REMOVE':\n      return hasToastId(action.toastId) ? state.filter(function (id) {\n        return id !== action.toastId;\n      }) : [];\n  }\n}\n\nfunction useToastContainer(props) {\n  var _useReducer = useReducer(reducer, []),\n      toast = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var containerRef = useRef(null);\n  var toastCount = useKeeper(0);\n  var queue = useKeeper([]);\n  var collection = useKeeper({});\n  var instance = useKeeper({\n    toastKey: 1,\n    displayedToast: 0,\n    props: props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: function getToast(id) {\n      return collection[id] || null;\n    }\n  });\n  useEffect(function () {\n    instance.containerId = props.containerId;\n    eventManager.cancelEmit(3\n    /* WillUnmount */\n    ).on(0\n    /* Show */\n    , buildToast).on(1\n    /* Clear */\n    , function (toastId) {\n      return containerRef.current && removeToast(toastId);\n    }).on(5\n    /* ClearWaitingQueue */\n    , clearWaitingQueue).emit(2\n    /* DidMount */\n    , instance);\n    return function () {\n      return eventManager.emit(3\n      /* WillUnmount */\n      , instance);\n    };\n  }, []);\n  useEffect(function () {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toast.length;\n    eventManager.emit(4\n    /* Change */\n    , toast.length, props.containerId);\n  }, [toast]);\n  useEffect(function () {\n    instance.props = props;\n  });\n\n  function isToastActive(id) {\n    return toast.indexOf(id) !== -1;\n  }\n\n  function clearWaitingQueue(_ref) {\n    var containerId = _ref.containerId;\n    var _instance$props = instance.props,\n        limit = _instance$props.limit,\n        enableMultiContainer = _instance$props.enableMultiContainer;\n\n    if (limit && (!containerId || instance.containerId === containerId && enableMultiContainer)) {\n      toastCount -= queue.length;\n      queue = [];\n    }\n  }\n\n  function removeToast(toastId) {\n    var queueLen = queue.length;\n    toastCount = hasToastId(toastId) ? toastCount - 1 : toastCount - instance.displayedToast;\n    if (toastCount < 0) toastCount = 0;\n\n    if (queueLen > 0) {\n      var freeSlot = hasToastId(toastId) ? 1 : instance.props.limit;\n\n      if (queueLen === 1 || freeSlot === 1) {\n        instance.displayedToast++;\n        dequeueToast();\n      } else {\n        var toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n        instance.displayedToast = toDequeue;\n\n        for (var i = 0; i < toDequeue; i++) {\n          dequeueToast();\n        }\n      }\n    }\n\n    dispatch({\n      type: 'REMOVE',\n      toastId: toastId\n    });\n  }\n\n  function dequeueToast() {\n    var _queue$shift = queue.shift(),\n        toastContent = _queue$shift.toastContent,\n        toastOptions = _queue$shift.toastOptions,\n        staleId = _queue$shift.staleId; // ensure that exit transition has been completed, hence the timeout\n\n\n    setTimeout(function () {\n      appendToast(toastContent, toastOptions, staleId);\n    }, 500);\n  }\n  /**\r\n   * check if a container is attached to the dom\r\n   * check for multi-container, build only if associated\r\n   * check for duplicate toastId if no update\r\n   */\n\n\n  function isNotValid(_ref2) {\n    var containerId = _ref2.containerId,\n        toastId = _ref2.toastId,\n        updateId = _ref2.updateId;\n    return !containerRef.current || instance.props.enableMultiContainer && containerId !== instance.props.containerId || instance.isToastActive(toastId) && updateId == null ? true : false;\n  }\n\n  function getAutoCloseDelay(toastAutoClose) {\n    return toastAutoClose === false || isNum(toastAutoClose) && toastAutoClose > 0 ? toastAutoClose : instance.props.autoClose;\n  } // this function and all the function called inside needs to rely on ref(`useKeeper`)\n\n\n  function buildToast(content, _ref3) {\n    var delay = _ref3.delay,\n        staleId = _ref3.staleId,\n        options = _objectWithoutPropertiesLoose(_ref3, [\"delay\", \"staleId\"]);\n\n    if (!canBeRendered(content) || isNotValid(options)) return;\n    var toastId = options.toastId,\n        updateId = options.updateId;\n    var props = instance.props,\n        isToastActive = instance.isToastActive;\n\n    var closeToast = function closeToast() {\n      return removeToast(toastId);\n    };\n\n    var toastOptions = {\n      toastId: toastId,\n      updateId: updateId,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || props.position,\n      transition: options.transition || props.transition,\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(options.bodyClassName || props.bodyClassName),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover) ? options.pauseOnHover : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss) ? options.pauseOnFocusLoss : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable) ? options.draggable : props.draggable,\n      draggablePercent: isNum(options.draggablePercent) ? options.draggablePercent : props.draggablePercent,\n      closeOnClick: isBool(options.closeOnClick) ? options.closeOnClick : props.closeOnClick,\n      progressClassName: parseClassName(options.progressClassName || props.progressClassName),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: getAutoCloseDelay(options.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar) ? options.hideProgressBar : props.hideProgressBar,\n      progress: options.progress,\n      role: isStr(options.role) ? options.role : props.role\n    };\n    if (isFn(options.onOpen)) toastOptions.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastOptions.onClose = options.onClose;\n    var closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    toastOptions.closeButton = closeButton;\n    var toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast: closeToast\n      });\n    } else if (isFn(content)) {\n      toastContent = content({\n        closeToast: closeToast\n      });\n    }\n\n    var isNotAnUpdate = !isToastActive(toastId);\n    if (isNotAnUpdate) toastCount++; // not handling limit + delay by design. Waiting for user feedback first\n\n    if (props.limit && props.limit > 0 && toastCount > props.limit && isNotAnUpdate) {\n      queue.push({\n        toastContent: toastContent,\n        toastOptions: toastOptions,\n        staleId: staleId\n      });\n    } else if (isNum(delay) && delay > 0) {\n      setTimeout(function () {\n        appendToast(toastContent, toastOptions, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastOptions, staleId);\n    }\n  }\n\n  function appendToast(content, options, staleId) {\n    var toastId = options.toastId;\n    collection[toastId] = {\n      content: content,\n      options: options\n    };\n    dispatch({\n      type: 'ADD',\n      toastId: toastId,\n      staleId: staleId\n    });\n  }\n\n  function unmountToast(toastId) {\n    delete collection[toastId];\n  }\n\n  function getToastToRender(cb) {\n    var toastToRender = {};\n    var toastList = props.newestOnTop ? Object.keys(collection).reverse() : Object.keys(collection);\n\n    for (var i = 0; i < toastList.length; i++) {\n      var _toast = collection[toastList[i]];\n      var position = _toast.options.position;\n      toastToRender[position] || (toastToRender[position] = []);\n      toastToRender[position].push(_toast);\n    }\n\n    return Object.keys(toastToRender).map(function (p) {\n      return cb(p, toastToRender[p]);\n    });\n  }\n\n  return {\n    toast: toast,\n    getToastToRender: getToastToRender,\n    collection: collection,\n    containerRef: containerRef,\n    isToastActive: isToastActive,\n    removeToast: removeToast,\n    unmountToast: unmountToast\n  };\n}\n\nfunction getX(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientX : e.clientX;\n}\n\nfunction getY(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientY : e.clientY;\n}\n\nvar iLoveInternetExplorer = canUseDom && /*#__PURE__*/ /(msie|trident)/i.test(navigator.userAgent);\n\nfunction useToast(props) {\n  var _useState = useState(true),\n      isRunning = _useState[0],\n      setIsRunning = _useState[1];\n\n  var _useState2 = useState(false),\n      preventExitTransition = _useState2[0],\n      setPreventExitTransition = _useState2[1];\n\n  var toastRef = useRef(null);\n  var drag = useKeeper({\n    start: 0,\n    x: 0,\n    y: 0,\n    deltaX: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null\n  });\n  var syncProps = useKeeper(props, true);\n  var autoClose = props.autoClose,\n      pauseOnHover = props.pauseOnHover,\n      closeToast = props.closeToast,\n      onClick = props.onClick,\n      closeOnClick = props.closeOnClick;\n  useEffect(function () {\n    if (isFn(props.onOpen)) props.onOpen(isValidElement(props.children) && props.children.props);\n    return function () {\n      if (isFn(syncProps.onClose)) syncProps.onClose(isValidElement(syncProps.children) && syncProps.children.props);\n    };\n  }, []);\n  useEffect(function () {\n    props.draggable && bindDragEvents();\n    return function () {\n      props.draggable && unbindDragEvents();\n    };\n  }, [props.draggable]);\n  useEffect(function () {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return function () {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(e) {\n    var toast = toastRef.current;\n    drag.canCloseOnClick = true;\n    drag.canDrag = true;\n    drag.boundingRect = toast.getBoundingClientRect();\n    toast.style.transition = '';\n    drag.start = drag.x = getX(e.nativeEvent);\n    drag.removalDistance = toast.offsetWidth * (props.draggablePercent / 100);\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      var _drag$boundingRect = drag.boundingRect,\n          top = _drag$boundingRect.top,\n          bottom = _drag$boundingRect.bottom,\n          left = _drag$boundingRect.left,\n          right = _drag$boundingRect.right;\n\n      if (props.pauseOnHover && drag.x >= left && drag.x <= right && drag.y >= top && drag.y <= bottom) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e) {\n    var toast = toastRef.current;\n\n    if (drag.canDrag) {\n      if (isRunning) pauseToast();\n      drag.x = getX(e);\n      drag.deltaX = drag.x - drag.start;\n      drag.y = getY(e); // prevent false positif during a toast click\n\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = \"translateX(\" + drag.deltaX + \"px)\";\n      toast.style.opacity = \"\" + (1 - Math.abs(drag.deltaX / drag.removalDistance));\n    }\n  }\n\n  function onDragEnd() {\n    var toast = toastRef.current;\n\n    if (drag.canDrag) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.deltaX) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = 'translateX(0)';\n      toast.style.opacity = '1';\n    }\n  } // Maybe let the end user tweak it later on\n  // hmmm no comment about ie. I hope this browser die one day\n  // don't want to fix the issue on this browser, my head is hurting too much\n\n\n  function onExitTransitionEnd() {\n    if (iLoveInternetExplorer) {\n      props.onExited();\n      props.unmountToast(props.toastId);\n      return;\n    }\n\n    var toast = toastRef.current;\n    var height = toast.scrollHeight;\n    var style = toast.style;\n    requestAnimationFrame(function () {\n      style.minHeight = 'initial';\n      style.height = height + 'px';\n      style.transition = 'all 0.4s ';\n      requestAnimationFrame(function () {\n        style.height = '0';\n        style.padding = '0';\n        style.margin = '0';\n      });\n      setTimeout(function () {\n        props.onExited();\n        props.unmountToast(props.toastId);\n      }, 500);\n    });\n  }\n\n  var eventHandlers = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  } // prevent toast from closing when user drags the toast\n\n\n  if (closeOnClick) {\n    eventHandlers.onClick = function (e) {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast: playToast,\n    pauseToast: pauseToast,\n    isRunning: isRunning,\n    preventExitTransition: preventExitTransition,\n    toastRef: toastRef,\n    drag: drag,\n    onExitTransitionEnd: onExitTransitionEnd,\n    onDragStart: onDragStart,\n    onDragTransitionEnd: onDragTransitionEnd,\n    eventHandlers: eventHandlers\n  };\n}\n\nexport { Bounce, Flip, Slide, ToastContainer, Zoom, cssTransition, toast, useToastContainer };","map":{"version":3,"sources":["../src/core/eventManager.ts","../src/utils/propValidator.ts","../src/utils/constant.ts","../src/utils/cssTransition.tsx","../src/components/CloseButton.tsx","../src/components/ProgressBar.tsx","../src/components/Toast.tsx","../src/components/Transitions.tsx","../src/components/ToastPositioner.tsx","../src/components/ToastContainer.tsx","../src/core/toast.tsx","../src/hooks/useKeeper.ts","../src/hooks/useToastContainer.ts","../src/hooks/useToast.ts"],"names":["eventManager","list","emitQueue","on","off","cb","cancelEmit","timers","clearTimeout","emit","args","timer","setTimeout","callback","isNum","v","isNaN","isBool","isStr","isFn","parseClassName","objectValues","obj","canUseDom","window","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","DARK","RT_NAMESPACE","cssTransition","enter","exit","duration","appendPosition","children","position","preventExitTransition","props","enterClassName","exitClassName","Array","enterDuration","exitDuration","onEnter","node","onEntered","onExit","timeout","CloseButton","closeToast","type","ariaLabel","className","onClick","e","viewBox","fillRule","d","ProgressBar","delay","isRunning","hide","style","userStyle","controlledProgress","progress","rtl","isIn","animationDuration","animationPlayState","opacity","classNames","cx","animationEvent","React","Toast","toastRef","onExitTransitionEnd","eventHandlers","useToast","closeButton","autoClose","hideProgressBar","transition","bodyClassName","bodyStyle","progressClassName","progressStyle","updateId","role","toastId","cssClasses","Transition","cloneElement","appear","onExited","nodeRef","id","ref","renderCloseButton","key","Bounce","Slide","Zoom","Flip","ToastPositioner","rest","ToastContainer","getToastToRender","containerRef","isToastActive","unmountToast","useToastContainer","containerId","component","swag","pointerEvents","options","toast","PropTypes","pauseOnHover","closeOnClick","newestOnTop","toastClassName","draggable","draggablePercent","pauseOnFocusLoss","enableMultiContainer","func","containers","queue","lazy","isAnyContainerMounted","container","getContainer","Math","Date","generateToastId","containerDomNode","document","render","getToastId","dispatchToast","mergeOptions","params","getToast","oldOptions","oldContent","nextOptions","config","containerConfig","latestInstance","containerInstance","item","useKeeper","arg","refresh","useRef","useEffect","action","dispatch","useReducer","toastCount","collection","instance","toastKey","displayedToast","removeToast","limit","queueLen","hasToastId","freeSlot","dequeueToast","toDequeue","i","toastContent","toastOptions","staleId","appendToast","toastAutoClose","isNotValid","getAutoCloseDelay","isNotAnUpdate","toastToRender","toastList","Object","iLoveInternetExplorer","navigator","setIsRunning","useState","setPreventExitTransition","drag","start","x","y","deltaX","removalDistance","canCloseOnClick","canDrag","boundingRect","syncProps","bindDragEvents","unbindDragEvents","bindFocusEvents","unbindFocusEvents","getX","top","bottom","left","right","pauseToast","playToast","getY","height","requestAnimationFrame","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onDragTransitionEnd","onDragStart"],"mappings":"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","sourcesContent":["import {\n  WithInjectedOptions,\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: WithInjectedOptions\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\nexport type OnChangeCallback = (\n  toast: number,\n  containerId?: number | string\n) => void;\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof window.setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: WithInjectedOptions\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, toast: number, containerId?: number | string): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach((timer: TimeoutId) => clearTimeout(timer));\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import { isValidElement } from 'react';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return typeof v === 'string' ? v : null;\n}\n\nexport function objectValues<T>(obj: Record<string, T>) {\n  return Object.keys(obj).map(key => obj[key]);\n}\n\nexport const canUseDom = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","export type TypeOptions = 'info' | 'success' | 'warning' | 'error' | 'default';\nexport type Positons =\n  | 'top-left'\n  | 'top-right'\n  | 'top-center'\n  | 'bottom-left'\n  | 'bottom-right'\n  | 'bottom-center';\n\nexport const POSITION = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default',\n  DARK: 'dark'\n};\n\nexport const RT_NAMESPACE = 'Toastify';\n","import React from 'react';\nimport { Transition } from 'react-transition-group';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Define the duration of the transition in ms\n   * You can also pass an array `[enterDuration, exitDuration]`\n   * `Default: 750`\n   */\n  duration?: number | [number, number];\n\n  /**\n   * Append current toast position to the classname.\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n}\n\nexport function cssTransition({\n  enter,\n  exit,\n  duration = 750,\n  appendPosition = false\n}: CSSTransitionProps) {\n  return ({\n    children,\n    position,\n    preventExitTransition,\n    ...props\n  }: // Until typedef for react-transition-group is shipped\n  any) => {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    let enterDuration: number, exitDuration: number;\n\n    if (Array.isArray(duration) && duration.length === 2) {\n      [enterDuration, exitDuration] = duration;\n    } else {\n      enterDuration = exitDuration = duration as number;\n    }\n\n    const onEnter = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        node.classList.add(enterClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = `${enterDuration * 0.001}s`;\n      }\n    };\n    const onEntered = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        node.classList.remove(enterClassName);\n        node.style.cssText = '';\n      }\n    };\n    const onExit = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        node.classList.add(exitClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = `${exitDuration * 0.001}s`;\n      }\n    };\n\n    return (\n      <Transition\n        {...props}\n        timeout={\n          preventExitTransition\n            ? 0\n            : {\n                enter: enterDuration,\n                exit: exitDuration\n              }\n        }\n        onEnter={onEnter}\n        onEntered={onEntered}\n        onExit={preventExitTransition ? undefined : onExit}\n      >\n        {children}\n      </Transition>\n    );\n  };\n}\n","import React from 'react';\nimport { RT_NAMESPACE, TypeOptions } from '../utils';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel: string;\n}\n\nexport function CloseButton({ closeToast, type, ariaLabel }: CloseButtonProps) {\n  return (\n    <button\n      className={`${RT_NAMESPACE}__close-button ${RT_NAMESPACE}__close-button--${type}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n\nCloseButton.defaultProps = {\n  ariaLabel: 'close'\n};\n","import React, { CSSProperties } from 'react';\nimport cx from 'classnames';\n\nimport { TYPE, RT_NAMESPACE, TypeOptions } from './../utils';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: string | null;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn\n}: ProgressBarProps) {\n  const style: CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n\n  const classNames = cx(\n    `${RT_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${RT_NAMESPACE}__progress-bar--controlled`\n      : `${RT_NAMESPACE}__progress-bar--animated`,\n    `${RT_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${RT_NAMESPACE}__progress-bar--rtl`]: rtl\n    },\n    className\n  );\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  return <div className={classNames} style={style} {...animationEvent} />;\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import React, { isValidElement, cloneElement } from 'react';\nimport { TransitionProps } from 'react-transition-group/Transition';\nimport cx from 'classnames';\n\nimport { ProgressBar } from './ProgressBar';\nimport { WithInjectedOptions } from '../types';\nimport { RT_NAMESPACE, isFn } from '../utils';\nimport { useToast } from '../hooks';\n\nexport const Toast: React.FC<WithInjectedOptions> = props => {\n  const {\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    onExitTransitionEnd,\n    eventHandlers\n  } = useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId\n  } = props as Required<WithInjectedOptions>;\n  const cssClasses = cx(\n    `${RT_NAMESPACE}__toast`,\n    `${RT_NAMESPACE}__toast--${type}`,\n    {\n      [`${RT_NAMESPACE}__toast--rtl`]: rtl\n    },\n    className\n  );\n  const controlledProgress = !!progress;\n  const Transition = transition as React.FC<Partial<TransitionProps>>;\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return null;\n\n    const props = { closeToast, type };\n    if (isFn(closeButton)) return closeButton(props);\n    if (isValidElement(closeButton)) return cloneElement(closeButton, props);\n  }\n\n  return (\n    <Transition\n      in={props.in}\n      appear\n      onExited={onExitTransitionEnd}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(props.in && { role: role })}\n          className={cx(`${RT_NAMESPACE}__toast-body`, bodyClassName)}\n          style={bodyStyle}\n        >\n          {children}\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || controlledProgress) && (\n          <ProgressBar\n            {...(updateId && !controlledProgress\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={props.in}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={controlledProgress}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { RT_NAMESPACE, cssTransition } from './../utils';\n\nconst Bounce = cssTransition({\n  enter: `${RT_NAMESPACE}__bounce-enter`,\n  exit: `${RT_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${RT_NAMESPACE}__slide-enter`,\n  exit: `${RT_NAMESPACE}__slide-exit`,\n  duration: [450, 750],\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${RT_NAMESPACE}__zoom-enter`,\n  exit: `${RT_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${RT_NAMESPACE}__flip-enter`,\n  exit: `${RT_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","import React from 'react';\nimport { WithInjectedOptions } from 'types';\n\ntype ToastPositionerProps = Pick<\n  WithInjectedOptions,\n  'className' | 'style' | 'in'\n>;\n\nexport const ToastPositioner: React.FC<ToastPositionerProps> = ({\n  children,\n  className,\n  style,\n  ...rest\n}) => {\n  // Monkey patch react-transition-group\n  // As exit transition is broken with strict mode\n  delete rest.in;\n\n  return (\n    <div className={className!} style={style}>\n      {React.Children.map(children, child =>\n        React.cloneElement(child as React.ReactElement<any>, rest)\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { TransitionGroup } from 'react-transition-group';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, RT_NAMESPACE, parseClassName, objectValues } from '../utils';\nimport { useToastContainer } from '../hooks';\nimport { ToastContainerProps, ToastPosition } from '../types';\nimport { ToastPositioner } from './ToastPositioner';\n\nexport const ToastContainer: React.FC<ToastContainerProps> = props => {\n  const {\n    getToastToRender,\n    containerRef,\n    isToastActive,\n    unmountToast\n  } = useToastContainer(props);\n  const { className, style, rtl, containerId } = props;\n\n  return (\n    <div ref={containerRef} className={RT_NAMESPACE} id={containerId as string}>\n      <TransitionGroup component={null}>\n        {getToastToRender((position, toastList) => {\n          const swag = {\n            className: cx(\n              `${RT_NAMESPACE}__toast-container`,\n              `${RT_NAMESPACE}__toast-container--${position}`,\n              { [`${RT_NAMESPACE}__toast-container--rtl`]: rtl },\n              parseClassName(className)\n            ),\n            style:\n              toastList.length === 0\n                ? { ...style, pointerEvents: 'none' }\n                : { ...style }\n          } as any;\n\n          return (\n            <ToastPositioner {...swag} key={`container-${position}`}>\n              {toastList.map(toast => {\n                const { content, options } = toast;\n\n                return (\n                  <Toast\n                    {...options}\n                    in={isToastActive(options.toastId)}\n                    unmountToast={unmountToast}\n                    key={`toast-${options.key}`}\n                    closeButton={\n                      options.closeButton === true\n                        ? CloseButton\n                        : options.closeButton\n                    }\n                  >\n                    {content}\n                  </Toast>\n                );\n              })}\n            </ToastPositioner>\n          );\n        })}\n      </TransitionGroup>\n    </div>\n  );\n};\n\n// @ts-ignore\nToastContainer.propTypes = {\n  // @ts-ignore\n  position: PropTypes.oneOf(objectValues(POSITION)),\n\n  // @ts-ignore\n  autoClose: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n\n  // @ts-ignore\n  closeButton: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.bool,\n    PropTypes.func\n  ]),\n  hideProgressBar: PropTypes.bool,\n  pauseOnHover: PropTypes.bool,\n  closeOnClick: PropTypes.bool,\n  newestOnTop: PropTypes.bool,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  toastClassName: PropTypes.string,\n  bodyClassName: PropTypes.string,\n  progressClassName: PropTypes.string,\n  progressStyle: PropTypes.object,\n  transition: PropTypes.func,\n  rtl: PropTypes.bool,\n  draggable: PropTypes.bool,\n  draggablePercent: PropTypes.number,\n  pauseOnFocusLoss: PropTypes.bool,\n  enableMultiContainer: PropTypes.bool,\n  containerId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  role: PropTypes.string,\n  onClick: PropTypes.func\n};\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: 80,\n  role: 'alert'\n};\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport { POSITION, TYPE, canUseDom, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from '.';\nimport {\n  ToastContent,\n  ToastOptions,\n  WithInjectedOptions,\n  Id,\n  ToastContainerProps,\n  UpdateOptions,\n  ClearWaitingQueueParams\n} from '../types';\nimport { ContainerInstance } from 'hooks';\nimport { ToastContainer } from '../components';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: WithInjectedOptions;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet containerDomNode: HTMLElement;\nlet containerConfig: ToastContainerProps;\nlet queue: EnqueuedToast[] = [];\nlet lazy = false;\n\n/**\n * Check whether any container is currently mounted in the DOM\n */\nfunction isAnyContainerMounted() {\n  return containers.size > 0;\n}\n\n/**\n * Get the container by id. Returns the last container declared when no id is given.\n */\nfunction getContainer(containerId?: Id) {\n  if (!isAnyContainerMounted()) return null;\n  return containers.get(!containerId ? latestInstance : containerId);\n}\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = getContainer(containerId);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return (Math.random().toString(36) + Date.now().toString(36)).substr(2, 10);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: WithInjectedOptions\n): Id {\n  if (isAnyContainerMounted()) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(<ToastContainer {...containerConfig} />, containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as WithInjectedOptions;\n}\n\nconst toast = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n\ntoast.success = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.SUCCESS, options));\n\ntoast.info = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.INFO, options));\n\ntoast.error = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.ERROR, options));\n\ntoast.warning = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.WARNING, options));\n\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.DARK, options));\n\n/**\n * Maybe I should remove warning in favor of warn, I don't know\n */\ntoast.warn = toast.warning;\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) =>\n  isAnyContainerMounted() && eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  isAnyContainerMounted() && eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { options: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as WithInjectedOptions & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content =\n        typeof nextOptions.render !== 'undefined'\n          ? nextOptions.render\n          : oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Track changes. The callback get the number of toast displayed\n *\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  if (isFn(callback)) {\n    eventManager.on(Event.Change, callback);\n  }\n  return () => {\n    isFn(callback) && eventManager.off(Event.Change, callback);\n  };\n};\n\n/**\n * Configure the ToastContainer when lazy mounted\n */\ntoast.configure = (config: ToastContainerProps = {}) => {\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n\n    if (canUseDom && containerDomNode) {\n      document.body.removeChild(containerDomNode);\n    }\n  });\n\nexport { toast };\n","import { useRef, useEffect } from 'react';\n\n/**\n * `useKeeper` is a helper around `useRef`.\n *\n * You don't need to access the `.current`property to get the value\n * If refresh is set to true. The ref will be updated every render\n */\nexport function useKeeper<T>(arg: T, refresh = false) {\n  const ref = useRef<T>(arg);\n\n  useEffect(() => {\n    if (refresh) ref.current = arg;\n  });\n\n  return ref.current;\n}\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement\n} from 'react';\nimport { eventManager, Event } from '../core';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr\n} from '../utils';\n\nimport {\n  Id,\n  ToastContainerProps,\n  WithInjectedOptions,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams\n} from '../types';\nimport { useKeeper } from './useKeeper';\n\ntype State = Array<Id>;\ntype Action =\n  | { type: 'ADD'; toastId: Id; staleId?: Id }\n  | { type: 'REMOVE'; toastId?: Id };\n\ntype CollectionItem = Record<Id, Toast>;\ntype ToastToRender = Partial<Record<ToastPosition, Toast[]>>;\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastOptions: WithInjectedOptions;\n  staleId?: Id;\n}\n\nfunction hasToastId(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nfunction reducer(state: State, action: Action) {\n  switch (action.type) {\n    case 'ADD':\n      return [...state, action.toastId].filter(id => id !== action.staleId);\n    case 'REMOVE':\n      return hasToastId(action.toastId)\n        ? state.filter(id => id !== action.toastId)\n        : [];\n  }\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [toast, dispatch] = useReducer(reducer, []);\n  const containerRef = useRef(null);\n  let toastCount = useKeeper(0);\n  let queue = useKeeper<QueuedToast[]>([]);\n  const collection = useKeeper<CollectionItem>({});\n  const instance = useKeeper<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: id => collection[id] || null\n  });\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toast.length;\n    eventManager.emit(Event.Change, toast.length, props.containerId);\n  }, [toast]);\n\n  useEffect(() => {\n    instance.props = props;\n  });\n\n  function isToastActive(id: Id) {\n    return toast.indexOf(id) !== -1;\n  }\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit, enableMultiContainer } = instance.props;\n    if (\n      limit &&\n      (!containerId ||\n        (instance.containerId === containerId && enableMultiContainer))\n    ) {\n      toastCount -= queue.length;\n      queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    const queueLen = queue.length;\n    toastCount = hasToastId(toastId)\n      ? toastCount - 1\n      : toastCount - instance.displayedToast;\n\n    if (toastCount < 0) toastCount = 0;\n\n    if (queueLen > 0) {\n      const freeSlot = hasToastId(toastId) ? 1 : instance.props.limit!;\n\n      if (queueLen === 1 || freeSlot === 1) {\n        instance.displayedToast++;\n        dequeueToast();\n      } else {\n        const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n        instance.displayedToast = toDequeue;\n\n        for (let i = 0; i < toDequeue; i++) dequeueToast();\n      }\n    }\n    dispatch({ type: 'REMOVE', toastId });\n  }\n\n  function dequeueToast() {\n    const {\n      toastContent,\n      toastOptions,\n      staleId\n    } = queue.shift() as QueuedToast;\n\n    // ensure that exit transition has been completed, hence the timeout\n    setTimeout(() => {\n      appendToast(toastContent, toastOptions, staleId);\n    }, 500);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid({ containerId, toastId, updateId }: WithInjectedOptions) {\n    return !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        containerId !== instance.props.containerId) ||\n      (instance.isToastActive(toastId) && updateId == null)\n      ? true\n      : false;\n  }\n\n  function getAutoCloseDelay(toastAutoClose?: false | number) {\n    return toastAutoClose === false ||\n      (isNum(toastAutoClose) && (toastAutoClose as number) > 0)\n      ? toastAutoClose\n      : instance.props.autoClose;\n  }\n\n  // this function and all the function called inside needs to rely on ref(`useKeeper`)\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: WithInjectedOptions\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId } = options;\n    const { props, isToastActive } = instance;\n    const closeToast = () => removeToast(toastId);\n    const toastOptions: WithInjectedOptions = {\n      toastId,\n      updateId,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || props.position,\n      transition: options.transition || props.transition,\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent: isNum(options.draggablePercent)\n        ? options.draggablePercent\n        : (props.draggablePercent as number),\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: getAutoCloseDelay(options.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: isStr(options.role) ? options.role : props.role\n    };\n\n    if (isFn(options.onOpen)) toastOptions.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastOptions.onClose = options.onClose;\n\n    let closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    toastOptions.closeButton = closeButton;\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast });\n    }\n    const isNotAnUpdate = !isToastActive(toastId);\n\n    if (isNotAnUpdate) toastCount++;\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      toastCount > props.limit &&\n      isNotAnUpdate\n    ) {\n      queue.push({ toastContent, toastOptions, staleId });\n    } else if (isNum(delay) && (delay as number) > 0) {\n      setTimeout(() => {\n        appendToast(toastContent, toastOptions, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastOptions, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    options: WithInjectedOptions,\n    staleId?: Id\n  ) {\n    const { toastId } = options;\n\n    collection[toastId] = {\n      content,\n      options\n    };\n    dispatch({\n      type: 'ADD',\n      toastId,\n      staleId\n    });\n  }\n\n  function unmountToast(toastId: Id) {\n    delete collection[toastId];\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toastToRender: ToastToRender = {};\n    const toastList = props.newestOnTop\n      ? Object.keys(collection).reverse()\n      : Object.keys(collection);\n\n    for (let i = 0; i < toastList.length; i++) {\n      const toast = collection[toastList[i]];\n      const { position } = toast.options;\n      toastToRender[position] || (toastToRender[position] = []);\n\n      toastToRender[position]!.push(toast);\n    }\n\n    return (Object.keys(toastToRender) as Array<ToastPosition>).map(p =>\n      cb(p, toastToRender[p]!)\n    );\n  }\n\n  return {\n    toast,\n    getToastToRender,\n    collection,\n    containerRef,\n    isToastActive,\n    removeToast,\n    unmountToast\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { canUseDom, isFn } from '../utils';\nimport { WithInjectedOptions } from '../types';\nimport { useKeeper } from './useKeeper';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  deltaX: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nconst iLoveInternetExplorer =\n  canUseDom && /(msie|trident)/i.test(navigator.userAgent);\n\nexport function useToast(props: WithInjectedOptions) {\n  const [isRunning, setIsRunning] = useState(true);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useKeeper<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    deltaX: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null\n  });\n  const syncProps = useKeeper(props, true);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      if (isFn(syncProps.onClose))\n        syncProps.onClose(\n          isValidElement(syncProps.children) && syncProps.children.props\n        );\n    };\n  }, []);\n\n  useEffect(() => {\n    props.draggable && bindDragEvents();\n    return () => {\n      props.draggable && unbindDragEvents();\n    };\n  }, [props.draggable]);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    const toast = toastRef.current!;\n    drag.canCloseOnClick = true;\n    drag.canDrag = true;\n    drag.boundingRect = toast.getBoundingClientRect();\n    toast.style.transition = '';\n    drag.start = drag.x = getX(e.nativeEvent as DragEvent);\n    drag.removalDistance = toast.offsetWidth * (props.draggablePercent / 100);\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n\n    if (drag.canDrag) {\n      if (isRunning) pauseToast();\n\n      drag.x = getX(e as DragEvent);\n      drag.deltaX = drag.x - drag.start;\n      drag.y = getY(e as DragEvent);\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n\n      toast.style.transform = `translateX(${drag.deltaX}px)`;\n      toast.style.opacity = `${1 -\n        Math.abs(drag.deltaX / drag.removalDistance)}`;\n    }\n  }\n\n  function onDragEnd() {\n    const toast = toastRef.current!;\n    if (drag.canDrag) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.deltaX) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = 'translateX(0)';\n      toast.style.opacity = '1';\n    }\n  }\n\n  // Maybe let the end user tweak it later on\n  // hmmm no comment about ie. I hope this browser die one day\n  // don't want to fix the issue on this browser, my head is hurting too much\n  function onExitTransitionEnd() {\n    if (iLoveInternetExplorer) {\n      props.onExited!();\n      props.unmountToast!(props.toastId);\n      return;\n    }\n    const toast = toastRef.current!;\n    const height = toast.scrollHeight;\n    const style = toast.style;\n\n    requestAnimationFrame(() => {\n      style.minHeight = 'initial';\n      style.height = height + 'px';\n      style.transition = 'all 0.4s ';\n\n      requestAnimationFrame(() => {\n        style.height = '0';\n        style.padding = '0';\n        style.margin = '0';\n      });\n      setTimeout(() => {\n        props.onExited!();\n        props.unmountToast!(props.toastId);\n      }, 500);\n    });\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    drag,\n    onExitTransitionEnd,\n    onDragStart,\n    onDragTransitionEnd,\n    eventHandlers\n  };\n}\n"]},"metadata":{},"sourceType":"module"}