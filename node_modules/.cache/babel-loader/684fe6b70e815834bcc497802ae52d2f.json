{"ast":null,"code":"var _jsxFileName = \"/Users/nicholaspatrikeos/Sites/Gallifrey4.0/gallifrey-frontend/src/pages/StudentProgressPage.js\";\nimport React from 'react';\nimport Layout from '../components/Layout';\nimport '../App.css';\nimport AuthContext from '../AuthContext';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useStep } from '../utils/update';\nimport { Converter } from 'showdown';\n\nfunction StudentProgressPage(props) {\n  var course_id;\n  var student_id;\n  var class_id;\n\n  if (props.location.course_id != undefined) {\n    course_id = props.location.course_id;\n    localStorage.setItem('currentCourse', props.location.course_id);\n  } else {\n    course_id = localStorage.getItem('currentCourse');\n  }\n\n  if (props.location.student_id != undefined) {\n    student_id = props.location.student_id;\n    localStorage.setItem('currentStudent', props.location.student_id);\n  } else {\n    student_id = localStorage.getItem('currentStudent');\n  }\n\n  if (props.location.class_id != undefined) {\n    class_id = props.location.class_id;\n    localStorage.setItem('currentClass', props.location.class_id);\n  } else {\n    class_id = localStorage.getItem('currentClass');\n  }\n\n  const [studentName, setStudentName] = React.useState(\"\");\n  const [course, setCourse] = React.useState({\n    course_id: 0,\n    name: \"\",\n    modules: [],\n    classname: \"\"\n  });\n  const [currentTopic, setCurrentTopic] = React.useState({\n    topic_id: 0,\n    module_id: 0,\n    module_name: '',\n    taskgroups: []\n  });\n  const [currentTask, setCurrentTask] = React.useState({\n    task_id: 0,\n    taskgroup: \"\",\n    name: \"\",\n    difficulty: \"\",\n    description: \"\",\n    hint: \"\",\n    solution: \"\",\n    attachments: []\n  });\n  const [submissions, setSubmissions] = React.useState([]);\n  const [progress, setProgress] = React.useState([]);\n  const token = React.useContext(AuthContext);\n\n  const fetchCourseData = () => {\n    const getCourse = axios.get('/courses/details/class', {\n      params: {\n        token,\n        course_id,\n        class_id\n      }\n    }).then(courseResponse => {\n      const courseData = courseResponse.data.course;\n      console.log(courseData);\n      setCourse(courseData);\n    }).catch(err => {});\n  };\n\n  const fetchSubmissionData = () => {\n    const task_id = currentTask.task_id;\n    const getSubmissions = axios.get('/courses/submissions/student', {\n      params: {\n        token,\n        course_id,\n        student_id\n      }\n    }).then(submissionsResponse => {\n      const submissionData = submissionsResponse.data.submissions;\n      const progressData = submissionsResponse.data.progress;\n      const name = submissionsResponse.data.name;\n      console.log(submissionData);\n      console.log(progressData);\n      setSubmissions(submissionData);\n      setProgress(progressData);\n      setStudentName(name);\n    }).catch(err => {});\n  };\n\n  function getTopic(module_id) {\n    for (var t = 0; t < course.modules.length; t++) {\n      if (course.modules[t].module_id == module_id) {\n        return course.modules[t];\n      }\n    }\n  }\n\n  function getTask(module_id, taskgroup_id, task_id) {\n    for (var t = 0; t < course.modules.length; t++) {\n      if (course.modules[t].module_id == module_id) {\n        for (var tg = 0; tg < course.modules[t].taskgroups.length; tg++) {\n          if (course.modules[t].taskgroups[tg].taskgroup_id == taskgroup_id) {\n            for (var tk = 0; tk < course.modules[t].taskgroups[tg].tasks.length; tk++) {\n              if (course.modules[t].taskgroups[tg].tasks[tk].task_id == task_id) {\n                return course.modules[t].taskgroups[tg].tasks[tk];\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function showTopic(module_id) {\n    var elements = document.getElementById('topicTabs').childNodes;\n\n    for (var e = 0; e < elements.length; e++) {\n      if (elements[e].id == 'md' + module_id) {\n        elements[e].style.borderTop = '1px solid lightgray';\n        elements[e].style.borderLeft = '1px solid lightgray';\n        elements[e].style.borderRight = '1px solid lightgray';\n      } else {\n        elements[e].style.border = '0px';\n      }\n    }\n\n    var topic = getTopic(module_id);\n    setCurrentTopic(topic);\n  }\n\n  function displayTaskgroup(taskgroup_id) {\n    var element = document.getElementById('tg' + taskgroup_id);\n    var elements = element.childNodes;\n    console.log(element.name);\n\n    if (element.name == 'undisplayed' || element.name == undefined) {\n      for (var e = 1; e < elements.length; e++) {\n        elements[e].style.display = 'block';\n        console.log(elements[e].style.display);\n      }\n\n      element.name = 'displayed';\n    } else if (element.name == 'displayed') {\n      for (var e = 1; e < elements.length; e++) {\n        elements[e].style.display = 'none';\n      }\n\n      element.name = 'undisplayed';\n    }\n  }\n\n  function displayTask(module_id, taskgroup_id, task_id) {\n    var task = getTask(module_id, taskgroup_id, task_id);\n    console.log(task);\n    setCurrentTask(task);\n  }\n\n  function taskSubmissions() {\n    var subs = [];\n\n    for (var sb = 0; sb < submissions.length; sb++) {\n      if (submissions[sb].task == currentTask.task_id) {\n        subs.push(submissions[sb]);\n      }\n    }\n\n    return subs;\n  }\n\n  function taskSubmissionState(task_id) {\n    var subs = [];\n\n    for (var sb = 0; sb < submissions.length; sb++) {\n      if (submissions[sb].task == task_id) {\n        subs.push(submissions[sb]);\n      }\n    }\n\n    console.log('subs', subs);\n\n    if (subs.length > 0) {\n      return subs[subs.length - 1].status;\n    } else {\n      return '';\n    }\n  }\n\n  const step1 = useStep(fetchCourseData, [], 2);\n  const step2 = useStep(fetchSubmissionData, [], 2);\n  var converter = new Converter();\n  const taskSubs = taskSubmissions();\n  var submissionBlock;\n\n  if (currentTask.task_id != 0) {\n    if (currentTask.answer_type == 'multiple-choice-single') {\n      if (taskSubs.length > 0) {\n        var choice = taskSubs[taskSubs.length - 1].selected_answer;\n        var status = taskSubs[taskSubs.length - 1].status;\n        submissionBlock = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"submissionBox\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"form\", {\n          name: \"submit_task_form\",\n          onSubmit: handleSubmit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"submissionDisplay\",\n          name: status,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 23\n          }\n        }, currentTask.choices.map((element, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"radio\",\n          name: \"correctAnswer\",\n          id: 'answer' + (index + 1),\n          defaultChecked: index == choice,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          for: 'answer' + (index + 1),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 33\n          }\n        }, element), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 86\n          }\n        })))), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"submit\",\n          value: \"Submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 23\n          }\n        }))));\n      }\n    } else {\n      if (taskSubs.length > 0) {\n        submissionBlock = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }\n        }, \"Submissions\"), taskSubs.map(({\n          time,\n          status,\n          url,\n          comment\n        }, index) => /*#__PURE__*/React.createElement(\"div\", {\n          className: \"submissionDisplay\",\n          name: status,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }\n        }, comment, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 19\n          }\n        }, \" \", status), \" \", /*#__PURE__*/React.createElement(\"a\", {\n          href: url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 46\n          }\n        }, \"Download\"))));\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    navtype: \"teacher\",\n    body: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"courseName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    }, \"Student\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    }, \"Name\"), studentName, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }\n    }, \"Class\"), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: '/classes/topics/progress',\n        class_id: class_id\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }, course.classname), /*#__PURE__*/React.createElement(\"table\", {\n      id: \"topicProgress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 15\n      }\n    }, course.modules.map(({\n      module_name\n    }, index) => /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }, module_name))), /*#__PURE__*/React.createElement(\"tr\", {\n      id: \"progressDashRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 15\n      }\n    }, progress.map(({\n      unmarked,\n      correct,\n      incorrect,\n      progress\n    }, index) => /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progressDash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"unmarkedDash\",\n      style: {\n        width: progress.unmarked + '%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"correctDash\",\n      style: {\n        width: progress.correct + '%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"incorrectDash\",\n      style: {\n        width: progress.incorrect + '%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"topicTabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }\n    }, course.modules.map(({\n      module_id,\n      module_name,\n      topic_id\n    }, index) => /*#__PURE__*/React.createElement(\"div\", {\n      class: \"topicTab\",\n      id: \"md\" + module_id,\n      onClick: () => showTopic(module_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 15\n      }\n    }, module_name))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"taskGroupBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"taskgroupList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }\n    }, currentTopic.taskgroups.map(({\n      taskgroup_id,\n      name,\n      tasks\n    }, index) => /*#__PURE__*/React.createElement(\"span\", {\n      className: \"taskGroupList\",\n      name: \"undisplayed\",\n      id: \"tg\" + taskgroup_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"taskGroupName\",\n      onClick: () => displayTaskgroup(taskgroup_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }\n    }, name), tasks.map(({\n      task_id,\n      name,\n      difficulty\n    }, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: 'none'\n      },\n      id: \"tk\" + task_id,\n      onClick: () => displayTask(currentTopic.module_id, taskgroup_id, task_id),\n      className: difficulty,\n      name: taskSubmissionState(task_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 25\n      }\n    }, name)))))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"taskBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }\n    }, currentTask.name)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }), submissionBlock))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default StudentProgressPage;","map":{"version":3,"sources":["/Users/nicholaspatrikeos/Sites/Gallifrey4.0/gallifrey-frontend/src/pages/StudentProgressPage.js"],"names":["React","Layout","AuthContext","Link","axios","useStep","Converter","StudentProgressPage","props","course_id","student_id","class_id","location","undefined","localStorage","setItem","getItem","studentName","setStudentName","useState","course","setCourse","name","modules","classname","currentTopic","setCurrentTopic","topic_id","module_id","module_name","taskgroups","currentTask","setCurrentTask","task_id","taskgroup","difficulty","description","hint","solution","attachments","submissions","setSubmissions","progress","setProgress","token","useContext","fetchCourseData","getCourse","get","params","then","courseResponse","courseData","data","console","log","catch","err","fetchSubmissionData","getSubmissions","submissionsResponse","submissionData","progressData","getTopic","t","length","getTask","taskgroup_id","tg","tk","tasks","showTopic","elements","document","getElementById","childNodes","e","id","style","borderTop","borderLeft","borderRight","border","topic","displayTaskgroup","element","display","displayTask","task","taskSubmissions","subs","sb","push","taskSubmissionState","status","step1","step2","converter","taskSubs","submissionBlock","answer_type","choice","selected_answer","handleSubmit","choices","map","index","time","url","comment","pathname","unmarked","correct","incorrect","width"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Layout from '../components/Layout'\nimport '../App.css'\nimport AuthContext from '../AuthContext'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { useStep } from '../utils/update'\nimport { Converter } from 'showdown'\n\nfunction StudentProgressPage(props) {\n\n    var course_id\n    var student_id\n    var class_id\n\n    if (props.location.course_id != undefined) {\n      course_id = props.location.course_id\n      localStorage.setItem('currentCourse', props.location.course_id)\n    } else {\n      course_id = localStorage.getItem('currentCourse')\n    }\n\n    if (props.location.student_id != undefined) {\n        student_id = props.location.student_id\n        localStorage.setItem('currentStudent', props.location.student_id)\n    } else {\n        student_id = localStorage.getItem('currentStudent')\n    }\n\n    if (props.location.class_id != undefined) {\n        class_id = props.location.class_id\n        localStorage.setItem('currentClass', props.location.class_id)\n    } else {\n        class_id = localStorage.getItem('currentClass')\n    }\n\n    const [studentName, setStudentName] = React.useState(\"\")\n    const [course, setCourse] = React.useState({\n      course_id: 0,\n      name: \"\",\n      modules: [],\n      classname: \"\"\n    })\n    const [currentTopic, setCurrentTopic] = React.useState({\n      topic_id: 0,\n      module_id: 0,\n      module_name: '',\n      taskgroups: [],\n    })\n    const [currentTask, setCurrentTask] = React.useState({\n      task_id: 0,\n      taskgroup: \"\",\n      name: \"\",\n      difficulty: \"\",\n      description: \"\",\n      hint: \"\",\n      solution: \"\",\n      attachments: []\n    })\n\n    const [submissions, setSubmissions] = React.useState([])\n    const [progress, setProgress] = React.useState([])\n\n    const token = React.useContext(AuthContext)\n\n    const fetchCourseData = () => {\n      const getCourse = axios.get('/courses/details/class', {params: { token, course_id, class_id }})\n        .then((courseResponse) => {\n          const courseData = courseResponse.data.course\n          console.log(courseData)\n          setCourse(courseData)\n        })\n        .catch((err) => {})\n    }\n\n    const fetchSubmissionData = () => {\n      const task_id = currentTask.task_id\n      const getSubmissions = axios.get('/courses/submissions/student', {params: { token, course_id, student_id }})\n        .then((submissionsResponse) => {\n          const submissionData = submissionsResponse.data.submissions\n          const progressData = submissionsResponse.data.progress\n          const name = submissionsResponse.data.name\n          console.log(submissionData)\n          console.log(progressData)\n          setSubmissions(submissionData)\n          setProgress(progressData)\n          setStudentName(name)\n        })\n        .catch((err) => {})\n    }\n\n    function getTopic(module_id) {\n      for (var t = 0; t < course.modules.length; t++) {\n        if (course.modules[t].module_id == module_id) {\n          return course.modules[t]\n        }\n      }\n    }\n\n    function getTask(module_id, taskgroup_id, task_id) {\n      for (var t = 0; t < course.modules.length; t++) {\n        if (course.modules[t].module_id == module_id) {\n          for (var tg = 0; tg < course.modules[t].taskgroups.length; tg++) {\n            if (course.modules[t].taskgroups[tg].taskgroup_id == taskgroup_id) {\n              for (var tk = 0; tk < course.modules[t].taskgroups[tg].tasks.length; tk++) {\n                if (course.modules[t].taskgroups[tg].tasks[tk].task_id == task_id) {\n                  return course.modules[t].taskgroups[tg].tasks[tk]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    function showTopic(module_id) {\n      var elements = document.getElementById('topicTabs').childNodes\n      for (var e = 0; e < elements.length; e++) {\n        if (elements[e].id == 'md' + module_id) {\n          elements[e].style.borderTop = '1px solid lightgray'\n          elements[e].style.borderLeft = '1px solid lightgray'\n          elements[e].style.borderRight = '1px solid lightgray'\n        } else {\n          elements[e].style.border = '0px'\n        }\n      }\n\n      var topic = getTopic(module_id)\n\n      setCurrentTopic(topic)\n    }\n\n    function displayTaskgroup(taskgroup_id) {\n      var element = document.getElementById('tg' + taskgroup_id)\n      var elements = element.childNodes\n\n      console.log(element.name)\n\n      if (element.name == 'undisplayed' || element.name == undefined) {\n        for (var e = 1; e < elements.length; e++) {\n          elements[e].style.display = 'block'\n          console.log(elements[e].style.display)\n        }\n        element.name = 'displayed'\n\n      } else if (element.name == 'displayed') {\n        for (var e = 1; e < elements.length; e++) {\n          elements[e].style.display = 'none'\n        }\n        element.name = 'undisplayed'\n      }\n    }\n\n    function displayTask(module_id, taskgroup_id, task_id) {\n      var task = getTask(module_id, taskgroup_id, task_id)\n      console.log(task)\n      setCurrentTask(task)\n    }\n\n    function taskSubmissions() {\n      var subs = []\n      for (var sb = 0; sb < submissions.length; sb++) {\n        if (submissions[sb].task == currentTask.task_id) {\n          subs.push(submissions[sb])\n        }\n      }\n      return subs\n    }\n\n    function taskSubmissionState(task_id) {\n      var subs = []\n      for (var sb = 0; sb < submissions.length; sb++) {\n        if (submissions[sb].task == task_id) {\n          subs.push(submissions[sb])\n        }\n      }\n      console.log('subs', subs)\n      if (subs.length > 0) {\n        return subs[subs.length - 1].status\n      } else {\n        return ''\n      }\n\n    }\n\n    const step1 = useStep(fetchCourseData, [], 2)\n    const step2 = useStep(fetchSubmissionData, [], 2)\n\n    var converter = new Converter()\n    const taskSubs = taskSubmissions()\n    var submissionBlock\n\n    if (currentTask.task_id != 0) {\n        if (currentTask.answer_type == 'multiple-choice-single') {\n\n          if (taskSubs.length > 0) {\n              var choice = taskSubs[taskSubs.length - 1].selected_answer\n              var status = taskSubs[taskSubs.length - 1].status\n\n              submissionBlock = (\n                  <>\n                  <div className='submissionBox'>\n                    <form name='submit_task_form' onSubmit={handleSubmit}>\n                      <div className='submissionDisplay' name={status}>\n                        {currentTask.choices.map((element, index) => (\n                            <>\n                                <input type='radio' name='correctAnswer' id={'answer' + (index + 1)} defaultChecked={index == choice} />\n                                <label for={'answer' + (index + 1)}>{element}</label><br/>\n                            </>\n                        ))}\n                      </div>\n                      <input type='submit' value='Submit'/>\n                    </form>\n                  </div>\n                  </>\n              )\n          }\n      } else {\n        if (taskSubs.length > 0) {\n          submissionBlock = (\n            <>\n              <h4>Submissions</h4>\n              {taskSubs.map(({ time, status, url, comment }, index) => (\n                <div className='submissionDisplay' name={status}>{comment}\n                  <strong> {status}</strong> <a href={url}>Download</a>\n                </div>\n              ))}\n            </>\n          )\n        }\n      }\n    }\n\n    return (\n        <Layout navtype='teacher' body={\n          <>\n            <div>\n                <h1 id='courseName'>Student</h1>\n            </div>\n\n            <hr/>\n            <h4>Name</h4>\n            {studentName}\n\n            <h4>Class</h4>\n            <Link to={{\n                pathname: '/classes/topics/progress',\n                class_id: class_id\n            }}>{course.classname}</Link>\n\n\n            <table id='topicProgress'>\n              <tr>\n              {course.modules.map(({ module_name }, index) => (\n                <td>{module_name}</td>\n              ))}\n              </tr>\n              <tr id='progressDashRow'>\n              {progress.map(({ unmarked, correct, incorrect, progress }, index) => (\n                <td>\n                  <div className='progressDash'>\n                    <div className='unmarkedDash' style={{width: progress.unmarked + '%'}}></div>\n                    <div className='correctDash' style={{width: progress.correct + '%'}}></div>\n                    <div className='incorrectDash' style={{width: progress.incorrect + '%'}}></div>\n                  </div>\n                </td>\n              ))}\n              </tr>\n\n            </table>\n\n            <div id='topicTabs'>\n            {course.modules.map(({ module_id, module_name, topic_id }, index) => (\n              <div class='topicTab' id={\"md\" + module_id} onClick={() => showTopic(module_id)}>\n                {module_name}\n              </div>\n            ))}\n            </div>\n\n            <div id=\"taskGroupBox\">\n                <div id='taskgroupList'>\n                {currentTopic.taskgroups.map(({ taskgroup_id, name, tasks }, index) => (\n                  <span className='taskGroupList' name='undisplayed' id={\"tg\" + taskgroup_id}>\n                    <span className='taskGroupName' onClick={() => displayTaskgroup(taskgroup_id)}>\n                    {name}\n                    </span>\n                    {tasks.map(({ task_id, name, difficulty }, index) => (\n                      <>\n                        <span style={{display: 'none'}} id={\"tk\" + task_id} onClick={() => displayTask(currentTopic.module_id, taskgroup_id, task_id)}\n                        className={difficulty} name={taskSubmissionState(task_id)}>{name}</span>\n                      </>\n                    ))}\n                  </span>\n                ))}\n                </div>\n\n                <div id='taskBox'>\n                {\n                  <>\n                    <h1>{currentTask.name}</h1>\n                  </>\n                }\n                <br/>\n                <br/>\n                {submissionBlock}\n                </div>\n            </div>\n          </>\n      }/>\n    )\n}\n\nexport default StudentProgressPage\n"]},"metadata":{},"sourceType":"module"}