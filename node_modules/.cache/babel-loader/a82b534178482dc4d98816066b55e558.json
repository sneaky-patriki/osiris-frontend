{"ast":null,"code":"var _jsxFileName = \"/Users/nicholaspatrikeos/Sites/Gallifrey4.0/gallifrey-frontend/src/pages/TaskgroupProgressPage.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Layout from '../components/Layout';\nimport '../App.css';\nimport AuthContext from '../AuthContext';\nimport { useStep } from '../utils/update';\n\nfunction TaskgroupProgressPage(props) {\n  var class_id;\n\n  if (props.location.class_id != undefined) {\n    class_id = props.location.class_id;\n    localStorage.setItem('currentClass', class_id);\n  } else {\n    class_id = localStorage.getItem('currentClass');\n  }\n\n  var taskgroup_id;\n\n  if (props.location.taskgroup_id != undefined) {\n    taskgroup_id = props.location.taskgroup_id;\n    localStorage.setItem('currentTaskgroup', taskgroup_id);\n  } else {\n    taskgroup_id = localStorage.getItem('currentTaskgroup');\n  }\n\n  const [cls, setClass] = React.useState({\n    class_id: 0,\n    name: \"\",\n    course: {\n      topics: []\n    },\n    teachers: [],\n    students: [],\n    progress: []\n  });\n  const [taskgroup, setTaskgroup] = React.useState({\n    name: '',\n    taskgroup_id: 0,\n    tasks: [],\n    topic: {\n      name: '',\n      topic_id: 0\n    }\n  });\n  const token = React.useContext(AuthContext);\n\n  const fetchClassData = topic_id => {\n    const getCourse = axios.get('/classes/taskgroup/details', {\n      params: {\n        token,\n        class_id,\n        taskgroup_id\n      }\n    }).then(classResponse => {\n      const classData = classResponse.data.class;\n      console.log(classData);\n      setClass(classData);\n    }).catch(err => {});\n  };\n\n  const fetchTaskgroupData = () => {\n    const getTaskgroup = axios.get('/taskgroups/details', {\n      params: {\n        token,\n        taskgroup_id\n      }\n    }).then(taskgroupResponse => {\n      const taskgroupData = taskgroupResponse.data.taskgroup;\n      console.log(taskgroupData);\n      setTaskgroup(taskgroupData);\n    });\n  };\n\n  const step1 = useStep(fetchClassData, [], 1);\n  const step2 = useStep(fetchTaskgroupData, [], 1);\n  return /*#__PURE__*/React.createElement(Layout, {\n    navtype: \"teacher\",\n    body: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"headerSection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Progress Report\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"Class\"), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: '/classes/manage',\n        class_id: cls.class_id\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, cls.name), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, \"Course\"), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: '/courses/manage',\n        course_id: cls.course.course_id\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, cls.course.name), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, \"Topic\"), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: '/classes/progress',\n        topic_id: taskgroup.topic.topic_id,\n        class_id: cls.class_id\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, taskgroup.topic.name), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, \"Task Group\"), taskgroup.name, /*#__PURE__*/React.createElement(\"table\", {\n      id: \"taskProgress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, \"Student\")), taskgroup.tasks.map(({\n      taskgroup_id,\n      name\n    }, index) => /*#__PURE__*/React.createElement(\"td\", {\n      class: \"taskName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 36\n      }\n    }, name))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Submitted\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, \"Correct\"))), cls.students.map(({\n      username,\n      name,\n      progress,\n      submitted,\n      correct,\n      total\n    }, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, name), progress.tasks.map(({\n      task,\n      submissions\n    }, index) => /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progressDash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, submissions.length != 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: submissions[submissions.length - 1].status + 'Dash',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 52\n      }\n    }, \"View Submission\") : /*#__PURE__*/React.createElement(React.Fragment, null)))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, progress.submitted, \" / \", progress.total, \" (\", 100 * progress.submitted / progress.total, \" %)\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, progress.correct, \" / \", progress.total, \" (\", 100 * progress.correct / progress.total, \" %)\"))))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default TaskgroupProgressPage;","map":{"version":3,"sources":["/Users/nicholaspatrikeos/Sites/Gallifrey4.0/gallifrey-frontend/src/pages/TaskgroupProgressPage.js"],"names":["React","axios","Link","Layout","AuthContext","useStep","TaskgroupProgressPage","props","class_id","location","undefined","localStorage","setItem","getItem","taskgroup_id","cls","setClass","useState","name","course","topics","teachers","students","progress","taskgroup","setTaskgroup","tasks","topic","topic_id","token","useContext","fetchClassData","getCourse","get","params","then","classResponse","classData","data","class","console","log","catch","err","fetchTaskgroupData","getTaskgroup","taskgroupResponse","taskgroupData","step1","step2","pathname","course_id","map","index","username","submitted","correct","total","task","submissions","length","status"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom';\nimport Layout from '../components/Layout'\nimport '../App.css'\nimport AuthContext from '../AuthContext'\nimport { useStep } from '../utils/update'\n\nfunction TaskgroupProgressPage(props) {\n\n  var class_id\n  if (props.location.class_id != undefined) {\n    class_id = props.location.class_id\n    localStorage.setItem('currentClass', class_id)\n  } else {\n    class_id = localStorage.getItem('currentClass')\n  }\n\n  var taskgroup_id\n  if (props.location.taskgroup_id != undefined) {\n    taskgroup_id = props.location.taskgroup_id\n    localStorage.setItem('currentTaskgroup', taskgroup_id)\n  } else {\n    taskgroup_id = localStorage.getItem('currentTaskgroup')\n  }\n\n  const [cls, setClass] = React.useState({\n    class_id: 0,\n    name: \"\",\n    course: {\n      topics: []\n    },\n    teachers: [],\n    students: [],\n    progress: [],\n  })\n\n  const [taskgroup, setTaskgroup] = React.useState({\n    name: '',\n    taskgroup_id: 0,\n    tasks: [],\n    topic: {\n      name: '',\n      topic_id: 0\n    }\n  })\n\n  const token = React.useContext(AuthContext)\n\n  const fetchClassData = (topic_id) => {\n    const getCourse = axios.get('/classes/taskgroup/details', {params: { token, class_id, taskgroup_id }})\n      .then((classResponse) => {\n        const classData = classResponse.data.class\n        console.log(classData)\n        setClass(classData)\n      })\n      .catch((err) => {})\n  }\n\n  const fetchTaskgroupData = () => {\n    const getTaskgroup = axios.get('/taskgroups/details', {params: { token, taskgroup_id }})\n    .then((taskgroupResponse) => {\n      const taskgroupData = taskgroupResponse.data.taskgroup\n      console.log(taskgroupData)\n      setTaskgroup(taskgroupData)\n    })\n  }\n\n  const step1 = useStep(fetchClassData, [], 1)\n  const step2 = useStep(fetchTaskgroupData, [], 1)\n\n  return (\n    <Layout navtype='teacher' body={\n      <>\n        <div class='headerSection'>\n            <h1>Progress Report</h1>\n        </div>\n\n        <hr/>\n\n        <h4>Class</h4>\n        <Link to={{\n          pathname: '/classes/manage',\n          class_id: cls.class_id\n        }}>{cls.name}</Link>\n        <h4>Course</h4>\n        <Link to={{\n          pathname: '/courses/manage',\n          course_id: cls.course.course_id\n        }}>{cls.course.name}</Link>\n        <h4>Topic</h4>\n        <Link to={{\n          pathname: '/classes/progress',\n          topic_id: taskgroup.topic.topic_id,\n          class_id: cls.class_id\n        }}>{taskgroup.topic.name}</Link>\n        <h4>Task Group</h4>\n        {taskgroup.name}\n\n        <table id=\"taskProgress\">\n          <thead>\n            <td><h4>Student</h4></td>\n            {taskgroup.tasks.map(({ taskgroup_id, name }, index) => (\n              <td class='taskName'><h4>{name}</h4></td>\n            ))}\n            <td><h4>Submitted</h4></td>\n            <td><h4>Correct</h4></td>\n          </thead>\n          {cls.students.map(({ username, name, progress, submitted, correct, total }, index) => (\n            <tr>\n              <td>{name}</td>\n              {progress.tasks.map(({ task, submissions }, index) => (\n                <td>\n                  <div className='progressDash'>\n                    { (submissions.length != 0) ? (<div className={submissions[submissions.length - 1].status + 'Dash'}>View Submission</div>) : (<></>) }\n                  </div>\n                </td>\n              ))}\n              <td>{progress.submitted} / {progress.total} ({100 * progress.submitted / progress.total} %)</td>\n              <td>{progress.correct} / {progress.total} ({100 * progress.correct / progress.total} %)</td>\n            </tr>\n          ))}\n        </table>\n      </>\n    }/>\n  )\n\n}\n\nexport default TaskgroupProgressPage\n"]},"metadata":{},"sourceType":"module"}