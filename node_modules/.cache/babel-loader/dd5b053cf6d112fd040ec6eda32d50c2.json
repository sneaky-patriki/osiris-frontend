{"ast":null,"code":"var _jsxFileName = \"/Users/nicholaspatrikeos/Sites/Gallifrey4.0/gallifrey-frontend/src/pages/TasksAddPage.js\";\nimport React from 'react';\nimport Layout from '../components/Layout';\nimport '../App.css';\nimport AuthContext from '../AuthContext';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction TasksAddPage(props) {\n  const token = React.useContext(AuthContext);\n  const [quizLayout, setQuizLayout] = React.useState(true);\n  const [newQuestion, setNewQuestion] = React.useState();\n  const [questions, setQuestions] = React.useState([]);\n  var taskgroup_id;\n\n  if (props.location.taskgroup_id != undefined) {\n    localStorage.setItem('currentTaskgroup', props.location.taskgroup_id);\n    taskgroup_id = props.location.taskgroup_id;\n  } else {\n    taskgroup_id = localStorage.getItem('currentTaskgroup');\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(event.target);\n\n    if (newQuestion) {\n      return;\n    }\n\n    const name = event.target[0].value;\n    const difficulty = event.target[1].value;\n    const description = event.target[2].value;\n    const hint = event.target[3].value;\n    const solution = event.target[4].value;\n    axios.post('/tasks/add', {\n      token,\n      taskgroup_id,\n      name,\n      difficulty,\n      description,\n      hint,\n      solution\n    }).then(response => {\n      const data = response.data;\n      console.log(data);\n      props.history.push('/topics/manage');\n    }).catch(err => {});\n  }\n\n  function changeLayout() {\n    var element = document.getElementById('type');\n\n    if (element.value == 'quiz') {\n      console.log('Quiz layout');\n      setQuizLayout(true);\n    } else {\n      setQuizLayout(false);\n    }\n  }\n\n  function addQuestion() {\n    setNewQuestion(true);\n  }\n\n  function createQuestion(event) {\n    event.preventDefault();\n    const description = event.target[0].value;\n    const type = event.target[1].value;\n    questions.push({\n      description: description,\n      type: type,\n      choices: []\n    });\n    setNewQuestion(false);\n    setQuestions(questions);\n  }\n\n  function questionContent(type, choices, questionNo) {\n    if (type == 'multiple choice single') {\n      console.log('choices', choices);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, choices.map((element, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        value: index,\n        id: 'question' + questionNo + '-' + index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 23\n        }\n      }), element, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"minusButton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 23\n        }\n      }, \"-\"))), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"multichoicenew\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"plusButton\",\n        onClick: () => addChoice(questionNo),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, \"+\"));\n    }\n  }\n\n  function addChoice(q) {\n    var choice = document.getElementById('multichoicenew').value;\n    console.log(choice);\n    questions[q - 1].choices.push(choice);\n    console.log(q);\n    setQuestions(questions);\n  }\n\n  var bodySection;\n\n  if (!quizLayout) {\n    bodySection = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"description\",\n      placeholder: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 75\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 80\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"hint\",\n      placeholder: \"Hint\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 66\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"solution\",\n      placeholder: \"Solution\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 74\n      }\n    }));\n  } else {\n    bodySection = /*#__PURE__*/React.createElement(\"div\", {\n      id: \"quizQuestions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"Questions\"), questions.map(({\n      description,\n      type,\n      choices\n    }, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, \"Question \", index + 1), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 50\n      }\n    }), \"Type: \", type, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"description\",\n      defaultValue: description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 79\n      }\n    }), questionContent(type, choices, index + 1), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"redTeacherButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, \"Remove Question\"))), newQuestion ? /*#__PURE__*/React.createElement(\"div\", {\n      id: \"questionCreate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \"New Question\"), /*#__PURE__*/React.createElement(\"form\", {\n      name: \"questionCreate\",\n      onSubmit: createQuestion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"description\",\n      placeholder: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 78\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"newQuestionType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"multiple choice single\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, \"Multiple Choice (Single Answer)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"multiple choice multi\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, \"Multiple Choice (Multiple Answers)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"short answer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, \"Short Answer\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Create Question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"greenTeacherButton\",\n      id: \"addQuestionButton\",\n      onClick: addQuestion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 24\n      }\n    }, \"Add Question\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \"End of Questions\"));\n  }\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    navtype: \"teacher\",\n    body: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"headerSection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, \"Tasks\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, \"Topic: \", props.location.topic_name), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, \"Task Group: \", props.location.taskgroup_name)), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      name: \"addTask\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"*Title\",\n      name: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 65\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 70\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, \"Task Type\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"type\",\n      onChange: changeLayout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, \"Standard\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, \"Content only (no answer)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"quiz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, \"Quiz\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, \"*Difficulty\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"difficulty\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Bronze\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, \"Bronze\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Silver\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, \"Silver\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Gold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }, \"Gold\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Platinum\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }, \"Platinum\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Kryptonite\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, \"Kryptonite\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    }), bodySection, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Create Task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/topics/manage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, \"Cancel\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default TasksAddPage;","map":{"version":3,"sources":["/Users/nicholaspatrikeos/Sites/Gallifrey4.0/gallifrey-frontend/src/pages/TasksAddPage.js"],"names":["React","Layout","AuthContext","Link","axios","TasksAddPage","props","token","useContext","quizLayout","setQuizLayout","useState","newQuestion","setNewQuestion","questions","setQuestions","taskgroup_id","location","undefined","localStorage","setItem","getItem","handleSubmit","event","preventDefault","console","log","target","name","value","difficulty","description","hint","solution","post","then","response","data","history","push","catch","err","changeLayout","element","document","getElementById","addQuestion","createQuestion","type","choices","questionContent","questionNo","map","index","addChoice","q","choice","bodySection","topic_name","taskgroup_name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,YAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAE3B,QAAMC,KAAK,GAAGP,KAAK,CAACQ,UAAN,CAAiBN,WAAjB,CAAd;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BV,KAAK,CAACW,QAAN,CAAe,IAAf,CAApC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,KAAK,CAACW,QAAN,EAAtC;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4Bf,KAAK,CAACW,QAAN,CAAe,EAAf,CAAlC;AAEA,MAAIK,YAAJ;;AACA,MAAIV,KAAK,CAACW,QAAN,CAAeD,YAAf,IAA+BE,SAAnC,EAA8C;AAC5CC,IAAAA,YAAY,CAACC,OAAb,CAAqB,kBAArB,EAAyCd,KAAK,CAACW,QAAN,CAAeD,YAAxD;AACAA,IAAAA,YAAY,GAAGV,KAAK,CAACW,QAAN,CAAeD,YAA9B;AACD,GAHD,MAGO;AACLA,IAAAA,YAAY,GAAGG,YAAY,CAACE,OAAb,CAAqB,kBAArB,CAAf;AACD;;AAED,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,MAAlB;;AAEA,QAAIf,WAAJ,EAAiB;AACb;AACH;;AAED,UAAMgB,IAAI,GAAGL,KAAK,CAACI,MAAN,CAAa,CAAb,EAAgBE,KAA7B;AACA,UAAMC,UAAU,GAAGP,KAAK,CAACI,MAAN,CAAa,CAAb,EAAgBE,KAAnC;AACA,UAAME,WAAW,GAAGR,KAAK,CAACI,MAAN,CAAa,CAAb,EAAgBE,KAApC;AACA,UAAMG,IAAI,GAAGT,KAAK,CAACI,MAAN,CAAa,CAAb,EAAgBE,KAA7B;AACA,UAAMI,QAAQ,GAAGV,KAAK,CAACI,MAAN,CAAa,CAAb,EAAgBE,KAAjC;AAEAzB,IAAAA,KAAK,CAAC8B,IAAN,CAAW,YAAX,EAAyB;AAAE3B,MAAAA,KAAF;AAASS,MAAAA,YAAT;AAAuBY,MAAAA,IAAvB;AAA6BE,MAAAA,UAA7B;AAAyCC,MAAAA,WAAzC;AAAsDC,MAAAA,IAAtD;AAA4DC,MAAAA;AAA5D,KAAzB,EACGE,IADH,CACSC,QAAD,IAAc;AAClB,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACA/B,MAAAA,KAAK,CAACgC,OAAN,CAAcC,IAAd,CAAmB,gBAAnB;AACD,KALH,EAMGC,KANH,CAMUC,GAAD,IAAS,CAAE,CANpB;AAOD;;AAED,WAASC,YAAT,GAAwB;AACpB,QAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAd;;AACA,QAAIF,OAAO,CAACd,KAAR,IAAiB,MAArB,EAA6B;AACzBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAhB,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH,KAHD,MAGO;AACHA,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH;AACJ;;AAED,WAASoC,WAAT,GAAuB;AACnBjC,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH;;AAED,WAASkC,cAAT,CAAwBxB,KAAxB,EAA+B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMO,WAAW,GAAGR,KAAK,CAACI,MAAN,CAAa,CAAb,EAAgBE,KAApC;AACA,UAAMmB,IAAI,GAAGzB,KAAK,CAACI,MAAN,CAAa,CAAb,EAAgBE,KAA7B;AAEAf,IAAAA,SAAS,CAACyB,IAAV,CAAe;AAACR,MAAAA,WAAW,EAAEA,WAAd;AAA2BiB,MAAAA,IAAI,EAAEA,IAAjC;AAAuCC,MAAAA,OAAO,EAAE;AAAhD,KAAf;AACApC,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACH;;AAED,WAASoC,eAAT,CAAyBF,IAAzB,EAA+BC,OAA/B,EAAwCE,UAAxC,EAAoD;AAEhD,QAAIH,IAAI,IAAI,wBAAZ,EAAsC;AAClCvB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBuB,OAAvB;AACA,0BAAQ,0CACHA,OAAO,CAACG,GAAR,CAAY,CAACT,OAAD,EAAUU,KAAV,kBACT,uDACI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,KAAK,EAAEA,KAA3B;AAAkC,QAAA,EAAE,EAAE,aAAaF,UAAb,GAA0B,GAA1B,GAAgCE,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEKV,OAFL,eAGI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,CADH,CADG,eAQJ;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARI,eASJ;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,OAAO,EAAE,MAAMW,SAAS,CAACH,UAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATI,CAAR;AAWH;AACJ;;AAED,WAASG,SAAT,CAAmBC,CAAnB,EAAsB;AAClB,QAAIC,MAAM,GAAGZ,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0ChB,KAAvD;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY8B,MAAZ;AACA1C,IAAAA,SAAS,CAACyC,CAAC,GAAG,CAAL,CAAT,CAAiBN,OAAjB,CAAyBV,IAAzB,CAA8BiB,MAA9B;AACA/B,IAAAA,OAAO,CAACC,GAAR,CAAY6B,CAAZ;AACAxC,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACH;;AAED,MAAI2C,WAAJ;;AACA,MAAI,CAAChD,UAAL,EAAiB;AACbgD,IAAAA,WAAW,gBAAI,uDACb;AAAU,MAAA,IAAI,EAAC,aAAf;AAA6B,MAAA,WAAW,EAAC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,eACqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADrD,eAC0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD1D,eAEb;AAAU,MAAA,IAAI,EAAC,MAAf;AAAsB,MAAA,WAAW,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFa,eAEuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFvC,eAE4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF5C,eAGb;AAAU,MAAA,IAAI,EAAC,UAAf;AAA0B,MAAA,WAAW,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHa,eAG+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH/C,eAGoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHpD,CAAf;AAIH,GALD,MAKO;AACHA,IAAAA,WAAW,gBACR;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADH,EAEI3C,SAAS,CAACsC,GAAV,CAAc,CAAC;AAACrB,MAAAA,WAAD;AAAciB,MAAAA,IAAd;AAAoBC,MAAAA;AAApB,KAAD,EAA+BI,KAA/B,kBACX;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAcA,KAAK,GAAG,CAAtB,CADJ,eACiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADjC,YAEWL,IAFX,eAEgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFhB,eAGI;AAAU,MAAA,IAAI,EAAC,aAAf;AAA6B,MAAA,YAAY,EAAEjB,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAG8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH9D,EAIKmB,eAAe,CAACF,IAAD,EAAOC,OAAP,EAAgBI,KAAK,GAAG,CAAxB,CAJpB,eAKI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALJ,CADH,CAFJ,EAYKzC,WAAW,gBAAI;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADa,eAEb;AAAM,MAAA,IAAI,EAAC,gBAAX;AAA4B,MAAA,QAAQ,EAAEmC,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAU,MAAA,IAAI,EAAC,aAAf;AAA6B,MAAA,WAAW,EAAC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAC6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD7D,eAEI;AAAQ,MAAA,EAAE,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADJ,eAEI;AAAQ,MAAA,KAAK,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,eAGI;AAAQ,MAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,CAFJ,eAOI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,iBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CAFa,CAAJ,gBAWF;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAoC,MAAA,EAAE,EAAC,mBAAvC;AAA2D,MAAA,OAAO,EAAED,WAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAvBd,eAyBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAzBH,CADH;AA6BH;;AAED,sBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,eAC5B,uDACE;AAAK,MAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAYxC,KAAK,CAACW,QAAN,CAAeyC,UAA3B,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiBpD,KAAK,CAACW,QAAN,CAAe0C,cAAhC,CAHJ,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAQE;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,QAAQ,EAAErC,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,QAA/B;AAAwC,MAAA,IAAI,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eACwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADxD,eAC6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD7D,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,eAGoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHpB,eAIE;AAAQ,MAAA,EAAE,EAAC,MAAX;AAAkB,MAAA,QAAQ,EAAEoB,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFF,eAGE;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CAJF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXF,eAWsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXtB,eAaE;AAAQ,MAAA,EAAE,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAQ,MAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,CAbF,eAmBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBX,eAmBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBhB,EAqBGe,WArBH,eAuBE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,eAwBE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBF,CARF,CADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAuCD;;AAED,eAAepD,YAAf","sourcesContent":["import React from 'react'\nimport Layout from '../components/Layout'\nimport '../App.css'\nimport AuthContext from '../AuthContext'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\nfunction TasksAddPage(props) {\n\n  const token = React.useContext(AuthContext)\n  const [quizLayout, setQuizLayout] = React.useState(true)\n  const [newQuestion, setNewQuestion] = React.useState()\n  const [questions, setQuestions] = React.useState([])\n\n  var taskgroup_id;\n  if (props.location.taskgroup_id != undefined) {\n    localStorage.setItem('currentTaskgroup', props.location.taskgroup_id)\n    taskgroup_id = props.location.taskgroup_id\n  } else {\n    taskgroup_id = localStorage.getItem('currentTaskgroup')\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault()\n    console.log(event.target)\n\n    if (newQuestion) {\n        return;\n    }\n\n    const name = event.target[0].value\n    const difficulty = event.target[1].value\n    const description = event.target[2].value\n    const hint = event.target[3].value\n    const solution = event.target[4].value\n\n    axios.post('/tasks/add', { token, taskgroup_id, name, difficulty, description, hint, solution })\n      .then((response) => {\n        const data = response.data\n        console.log(data)\n        props.history.push('/topics/manage')\n      })\n      .catch((err) => {})\n  }\n\n  function changeLayout() {\n      var element = document.getElementById('type')\n      if (element.value == 'quiz') {\n          console.log('Quiz layout')\n          setQuizLayout(true)\n      } else {\n          setQuizLayout(false)\n      }\n  }\n\n  function addQuestion() {\n      setNewQuestion(true)\n  }\n\n  function createQuestion(event) {\n      event.preventDefault()\n      const description = event.target[0].value\n      const type = event.target[1].value\n\n      questions.push({description: description, type: type, choices: []})\n      setNewQuestion(false)\n      setQuestions(questions)\n  }\n\n  function questionContent(type, choices, questionNo) {\n\n      if (type == 'multiple choice single') {\n          console.log('choices', choices)\n          return (<>\n              {choices.map((element, index) => (\n                  <>\n                      <input type='radio' value={index} id={'question' + questionNo + '-' + index} />\n                      {element}\n                      <div className='minusButton'>-</div>\n                  </>\n              ))}\n              <input type='text' id='multichoicenew' />\n              <div className='plusButton' onClick={() => addChoice(questionNo)}>+</div>\n          </>)\n      }\n  }\n\n  function addChoice(q) {\n      var choice = document.getElementById('multichoicenew').value\n      console.log(choice)\n      questions[q - 1].choices.push(choice)\n      console.log(q)\n      setQuestions(questions)\n  }\n\n  var bodySection;\n  if (!quizLayout) {\n      bodySection = (<>\n        <textarea name='description' placeholder=\"Description\"></textarea><br/><br/>\n        <textarea name='hint' placeholder=\"Hint\"></textarea><br/><br/>\n        <textarea name='solution' placeholder=\"Solution\"></textarea><br/><br/></>)\n  } else {\n      bodySection = (\n         <div id='quizQuestions'>\n            <h4>Questions</h4>\n            {questions.map(({description, type, choices}, index) => (\n                <div className='question'>\n                    <h4>Question {index + 1}</h4><br/>\n                    Type: {type}<br/>\n                    <textarea name='description' defaultValue={description} /><br/>\n                    {questionContent(type, choices, index + 1)}\n                    <div className='redTeacherButton'>Remove Question</div>\n                </div>\n            ))}\n\n            { newQuestion ? (<div id='questionCreate'>\n                <h4>New Question</h4>\n                <form name='questionCreate' onSubmit={createQuestion}>\n                    <textarea name='description' placeholder='Description' /><br/>\n                    <select id='newQuestionType'>\n                        <option value='multiple choice single'>Multiple Choice (Single Answer)</option>\n                        <option value='multiple choice multi'>Multiple Choice (Multiple Answers)</option>\n                        <option value='short answer'>Short Answer</option>\n                    </select>\n                    <input type='submit' value='Create Question' />\n                </form>\n            </div>) : (<div className='greenTeacherButton' id='addQuestionButton' onClick={addQuestion}>Add Question</div>) }\n\n            <h4>End of Questions</h4>\n         </div>\n      )\n  }\n\n  return (\n    <Layout navtype='teacher' body={\n      <>\n        <div class='headerSection'>\n            <h1>Tasks</h1>\n            <h2>Topic: {props.location.topic_name}</h2>\n            <h2>Task Group: {props.location.taskgroup_name}</h2>\n        </div>\n        <hr/>\n\n        <form name='addTask' onSubmit={handleSubmit}>\n          <input type='text' placeholder='*Title' name='name' /><br/><br/>\n\n          <h4>Task Type</h4><br/>\n          <select id='type' onChange={changeLayout}>\n            <option value='standard'>Standard</option>\n            <option value='content'>Content only (no answer)</option>\n            <option value='quiz'>Quiz</option>\n          </select>\n          <br/>\n\n          <h4>*Difficulty</h4><br/>\n\n          <select id=\"difficulty\">\n              <option value=\"Bronze\">Bronze</option>\n              <option value=\"Silver\">Silver</option>\n              <option value=\"Gold\">Gold</option>\n              <option value='Platinum'>Platinum</option>\n              <option value='Kryptonite'>Kryptonite</option>\n          </select><br/><br/>\n\n          {bodySection}\n\n          <input type='submit' value='Create Task' />\n          <Link to='/topics/manage'>Cancel</Link>\n        </form>\n      </>\n    }/>\n  )\n}\n\nexport default TasksAddPage;\n"]},"metadata":{},"sourceType":"module"}