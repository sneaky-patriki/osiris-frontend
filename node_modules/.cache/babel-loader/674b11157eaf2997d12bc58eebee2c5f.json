{"ast":null,"code":"var _jsxFileName = \"/Users/nicholaspatrikeos/Sites/Gallifrey4.0/gallifrey-frontend/src/components/ViewCourse.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\nimport AuthContext from '../AuthContext';\nimport { useStep } from '../utils/update';\nimport { Converter } from 'showdown';\nimport ReactHTMLParser from 'react-html-parser';\nimport { getTimeDifference } from '../utils/helperFunctions';\n\nfunction ViewCourse({\n  course_id,\n  user_type\n}, ...props) {\n  const [course, setCourse] = React.useState({\n    course_id: 0,\n    name: \"\",\n    modules: []\n  });\n  const [currentTopic, setCurrentTopic] = React.useState({\n    topic_id: 0,\n    module_id: 0,\n    module_name: '',\n    taskgroups: []\n  });\n  const [currentTask, setCurrentTask] = React.useState({\n    task_id: 0,\n    taskgroup_name: \"\",\n    taskgroup_id: 0,\n    name: \"\",\n    difficulty: \"\",\n    description: \"\",\n    hint: \"\",\n    solution: \"\",\n    attachments: [],\n    submit_multiple: false\n  });\n  const [submissions, setSubmissions] = React.useState([]);\n  const [progress, setProgress] = React.useState([]); // var [submissionsFetched, setSubmissionsFetched] = React.useState(false)\n\n  const [numFiles, setNumFiles] = React.useState();\n\n  const showdownHighlight = require('showdown-highlight');\n\n  const token = React.useContext(AuthContext);\n  var files = [];\n\n  const fetchCourseData = () => {\n    const getCourse = axios.get('/courses/details', {\n      params: {\n        token,\n        course_id\n      }\n    }).then(courseResponse => {\n      const courseData = courseResponse.data.course;\n      console.log(courseData);\n      setCourse(courseData);\n    }).catch(err => {});\n  };\n\n  const fetchSubmissionData = () => {\n    const task_id = currentTask.task_id;\n    const getSubmissions = axios.get('/courses/submissions', {\n      params: {\n        token,\n        course_id\n      }\n    }).then(submissionsResponse => {\n      const submissionData = submissionsResponse.data.submissions;\n      const progressData = submissionsResponse.data.progress;\n      console.log(submissionData);\n      console.log(progressData);\n      setSubmissions(submissionData);\n      setProgress(progressData);\n    }).catch(err => {});\n  };\n\n  function getTopic(module_id) {\n    for (var t = 0; t < course.modules.length; t++) {\n      if (course.modules[t].module_id == module_id) {\n        return course.modules[t];\n      }\n    }\n  }\n\n  function getTask(module_id, taskgroup_id, task_id) {\n    for (var t = 0; t < course.modules.length; t++) {\n      if (course.modules[t].module_id == module_id) {\n        for (var tg = 0; tg < course.modules[t].taskgroups.length; tg++) {\n          if (course.modules[t].taskgroups[tg].taskgroup_id == taskgroup_id) {\n            for (var tk = 0; tk < course.modules[t].taskgroups[tg].tasks.length; tk++) {\n              if (course.modules[t].taskgroups[tg].tasks[tk].task_id == task_id) {\n                return course.modules[t].taskgroups[tg].tasks[tk];\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function showTopic(module_id) {\n    var elements = document.getElementById('topicTabs').childNodes;\n\n    for (var e = 0; e < elements.length; e++) {\n      if (elements[e].id == 'md' + module_id) {\n        elements[e].style.borderTop = '1px solid lightgray';\n        elements[e].style.borderLeft = '1px solid lightgray';\n        elements[e].style.borderRight = '1px solid lightgray';\n      } else {\n        elements[e].style.border = '0px';\n      }\n    }\n\n    var topic = getTopic(module_id);\n    setCurrentTopic(topic);\n  }\n\n  function displayTaskgroup(taskgroup_id) {\n    var element = document.getElementById('tg' + taskgroup_id);\n    var elements = element.childNodes;\n    console.log(element.name);\n\n    if (element.name == 'undisplayed' || element.name == undefined) {\n      for (var e = 1; e < elements.length; e++) {\n        elements[e].style.display = 'block';\n        console.log(elements[e].style.display);\n      }\n\n      element.name = 'displayed';\n    } else if (element.name == 'displayed') {\n      for (var e = 1; e < elements.length; e++) {\n        elements[e].style.display = 'none';\n      }\n\n      element.name = 'undisplayed';\n    }\n  }\n\n  function displayTask(module_id, taskgroup_id, task_id) {\n    var task = getTask(module_id, taskgroup_id, task_id);\n    console.log(task);\n    setCurrentTask(task);\n    setNumFiles(1);\n    files = [];\n    taskgroup_list = [];\n    var element = document.getElementById('hint');\n    element.innerHTML = 'Show Hint';\n    element.name = 'hintHide';\n    element.style.width = '80px';\n    var label = document.getElementById('0');\n\n    if (label != null) {\n      label.innerHTML = 'Choose File';\n    }\n  }\n\n  function showHint() {\n    var element = document.getElementById('hint');\n    element.innerHTML = '<h4>Hint</h4>' + converter.makeHtml(currentTask.hint).replace(/(?:\\r\\n|\\r|\\n)/g, '<br>');\n    element.name = 'hintShow';\n    element.style.width = '100%';\n    element.className = 'hintShow';\n  }\n\n  function setFile(event) {\n    files.push(event.target.files[0]);\n    document.getElementById(event.target.id.replace('submission', '')).innerHTML = event.target.files[0].name;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (files.length == 0) {\n      console.log('No files chosen');\n      return;\n    }\n\n    var form = new FormData();\n    form.append('token', token);\n    var taskgroup_submit_list = [];\n\n    for (var i = 0; i < taskgroup_list.length; i++) {\n      console.log(event.target[i].name);\n\n      if (event.target[i].value) {\n        taskgroup_submit_list.push(taskgroup_list[i][0]);\n      }\n    }\n\n    console.log(taskgroup_submit_list, files);\n    form.append('tasks', taskgroup_submit_list);\n    /*\n    for (var i = 0; i < numFiles; i++) {\n        form.append('file' + i, files[i])\n    }\n     console.log(files)\n      axios.post('/tasks/submit', form, { headers: { 'content-type': 'multipart/form-data' }})\n      .then((response) => {\n        const data = response.data\n        console.log(data)\n        window.location.reload()\n      })\n      .catch((err) => {})*/\n  }\n\n  function taskSubmissions() {\n    var subs = [];\n\n    for (var sb = 0; sb < submissions.length; sb++) {\n      if (submissions[sb].task == currentTask.task_id) {\n        subs.push(submissions[sb]);\n      }\n    }\n\n    return subs;\n  }\n\n  function taskSubmissionState(task_id) {\n    var subs = [];\n\n    for (var sb = 0; sb < submissions.length; sb++) {\n      if (submissions[sb].task == task_id) {\n        subs.push(submissions[sb]);\n      }\n    }\n\n    console.log('subs', subs);\n\n    if (subs.length > 0) {\n      return subs[subs.length - 1].status;\n    } else {\n      return '';\n    }\n  }\n\n  function addFile() {\n    setNumFiles(numFiles + 1);\n    document.getElementById('0').innerHTML = 'Choose File';\n  }\n\n  function removeFile(index) {\n    if (numFiles == 1) return;\n    setNumFiles(numFiles - 1);\n    document.getElementById('0').innerHTML = 'Choose File';\n  }\n\n  const step1 = useStep(fetchCourseData, [], 2);\n  const step2 = useStep(fetchSubmissionData, [], 2);\n  var converter = new Converter({\n    extensions: [showdownHighlight]\n  });\n  var hint;\n\n  if (currentTask.hint) {\n    hint = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"teacherButton\",\n      id: \"hint\",\n      name: \"hintHide\",\n      onClick: () => showHint(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 7\n      }\n    }, \"Show Hint\");\n  } else {\n    hint = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"teacherButton\",\n      id: \"hint\",\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 12\n      }\n    });\n  }\n\n  var submissionBlock;\n\n  if (user_type == 'student' && currentTask.task_id != 0) {\n    const taskSubs = taskSubmissions();\n    console.log(taskSubs);\n    var existingSubmissions;\n\n    if (taskSubs.length > 0) {\n      existingSubmissions = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }\n      }, \"Submissions\"), taskSubs.map(({\n        time,\n        currentTime,\n        status,\n        comment,\n        files\n      }, index) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"submissionDisplay\",\n        name: status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }\n      }, comment, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 71\n        }\n      }), /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }\n      }, \" \", status), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 41\n        }\n      }), files.map(({\n        cover_name,\n        url\n      }, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n        href: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }\n      }, cover_name), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 51\n        }\n      }))), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }\n      }, getTimeDifference(time, currentTime)))));\n    } else {\n      existingSubmissions = /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n\n    var fileboxes = [];\n\n    for (var i = 0; i < numFiles; i++) {\n      if (i != 0) {\n        fileboxes.push( /*#__PURE__*/React.createElement(\"div\", {\n          className: \"filebox\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 28\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"file\",\n          name: 'submission' + i,\n          id: 'submission' + i,\n          onChange: setFile,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 115\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          for: 'submission' + i,\n          id: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 29\n          }\n        }, \"Choose File\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"redTeacherButton\",\n          id: \"removeFileButton\",\n          onClick: () => removeFile(i),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 29\n          }\n        }, \"Remove File\")));\n      } else {\n        fileboxes.push( /*#__PURE__*/React.createElement(\"div\", {\n          className: \"filebox\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 28\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"file\",\n          name: 'submission' + i,\n          id: 'submission' + i,\n          onChange: setFile,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 115\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          for: 'submission' + i,\n          id: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 29\n          }\n        }, \"Choose File\")));\n      }\n    }\n\n    var multipleSubmit;\n    var taskgroup_list = [];\n\n    if (currentTask.submit_multiple) {\n      for (var tg = 0; tg < currentTopic.taskgroups.length; tg++) {\n        console.log(tg);\n\n        if (currentTopic.taskgroups[tg].taskgroup_id == currentTask.taskgroup_id) {\n          for (var tk = 0; tk < currentTopic.taskgroups[tg].tasks.length; tk++) {\n            taskgroup_list.push([currentTopic.taskgroups[tg].tasks[tk].task_id, currentTopic.taskgroups[tg].tasks[tk].name]);\n          }\n\n          break;\n        }\n      }\n\n      multipleSubmit = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 17\n        }\n      }, \"Submit for Multiple Tasks\"), taskgroup_list.map((element, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: 'task' + element[0],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }\n      }), \"   \", element[1], \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 89\n        }\n      }))));\n    } else {\n      taskgroup_list.push([currentTask.task_id, currentTask.name]);\n      multipleSubmit = /*#__PURE__*/React.createElement(\"input\", {\n        style: \"display: none\",\n        type: \"checkbox\",\n        name: 'task' + currentTask.task_id,\n        checked: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 26\n        }\n      });\n    }\n\n    console.log(taskgroup_list);\n    submissionBlock = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"submissionBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }\n    }, \"Submit Your Solution\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }\n    }), multipleSubmit, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }\n    }, \"Files\"), /*#__PURE__*/React.createElement(\"form\", {\n      name: \"submit_task_form\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }\n    }, fileboxes.map((element, index) => /*#__PURE__*/React.createElement(React.Fragment, null, element, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 26\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"greenTeacherButton\",\n      id: \"addFileButton\",\n      onClick: addFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }\n    }, \"Add File\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 98\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 103\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    submissionBlock = /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"courseName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 11\n    }\n  }, course.name)), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    id: \"topicProgress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }\n  }, course.modules.map(({\n    module_name\n  }, index) => /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 11\n    }\n  }, module_name))), /*#__PURE__*/React.createElement(\"tr\", {\n    id: \"progressDashRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }\n  }, progress.map(({\n    unmarked,\n    correct,\n    incorrect,\n    progress\n  }, index) => /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progressDash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"unmarkedDash\",\n    style: {\n      width: progress.unmarked + '%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"correctDash\",\n    style: {\n      width: progress.correct + '%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"incorrectDash\",\n    style: {\n      width: progress.incorrect + '%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 15\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"topicTabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }\n  }, course.modules.map(({\n    module_id,\n    module_name,\n    topic_id\n  }, index) => /*#__PURE__*/React.createElement(\"div\", {\n    class: \"topicTab\",\n    id: \"md\" + module_id,\n    onClick: () => showTopic(module_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }\n  }, module_name))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"taskGroupBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"taskgroupList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 11\n    }\n  }, currentTopic.taskgroups.map(({\n    taskgroup_id,\n    name,\n    tasks\n  }, index) => /*#__PURE__*/React.createElement(\"span\", {\n    className: \"taskGroupList\",\n    name: \"undisplayed\",\n    id: \"tg\" + taskgroup_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"taskGroupName\",\n    onClick: () => displayTaskgroup(taskgroup_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 15\n    }\n  }, name), tasks.map(({\n    task_id,\n    name,\n    difficulty\n  }, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'none'\n    },\n    id: \"tk\" + task_id,\n    onClick: () => displayTask(currentTopic.module_id, taskgroup_id, task_id),\n    className: difficulty,\n    name: taskSubmissionState(task_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 19\n    }\n  }, name)))))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"taskBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"taskName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 15\n    }\n  }, currentTask.name), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 15\n    }\n  }, ReactHTMLParser(converter.makeHtml(currentTask.description).replace(/(?:\\r\\n|\\r|\\n)/g, '<br>')))), hint, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 11\n    }\n  }), submissionBlock, existingSubmissions)));\n}\n\nexport default ViewCourse;","map":{"version":3,"sources":["/Users/nicholaspatrikeos/Sites/Gallifrey4.0/gallifrey-frontend/src/components/ViewCourse.js"],"names":["React","axios","Link","AuthContext","useStep","Converter","ReactHTMLParser","getTimeDifference","ViewCourse","course_id","user_type","props","course","setCourse","useState","name","modules","currentTopic","setCurrentTopic","topic_id","module_id","module_name","taskgroups","currentTask","setCurrentTask","task_id","taskgroup_name","taskgroup_id","difficulty","description","hint","solution","attachments","submit_multiple","submissions","setSubmissions","progress","setProgress","numFiles","setNumFiles","showdownHighlight","require","token","useContext","files","fetchCourseData","getCourse","get","params","then","courseResponse","courseData","data","console","log","catch","err","fetchSubmissionData","getSubmissions","submissionsResponse","submissionData","progressData","getTopic","t","length","getTask","tg","tk","tasks","showTopic","elements","document","getElementById","childNodes","e","id","style","borderTop","borderLeft","borderRight","border","topic","displayTaskgroup","element","undefined","display","displayTask","task","taskgroup_list","innerHTML","width","label","showHint","converter","makeHtml","replace","className","setFile","event","push","target","handleSubmit","preventDefault","form","FormData","append","taskgroup_submit_list","i","value","taskSubmissions","subs","sb","taskSubmissionState","status","addFile","removeFile","index","step1","step2","extensions","submissionBlock","taskSubs","existingSubmissions","map","time","currentTime","comment","cover_name","url","fileboxes","multipleSubmit","unmarked","correct","incorrect"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport '../App.css'\nimport AuthContext from '../AuthContext'\nimport { useStep } from '../utils/update'\nimport { Converter } from 'showdown'\nimport ReactHTMLParser from 'react-html-parser'\nimport { getTimeDifference } from '../utils/helperFunctions'\n\nfunction ViewCourse({ course_id, user_type }, ...props) {\n\n  const [course, setCourse] = React.useState({\n    course_id: 0,\n    name: \"\",\n    modules: []\n  })\n  const [currentTopic, setCurrentTopic] = React.useState({\n    topic_id: 0,\n    module_id: 0,\n    module_name: '',\n    taskgroups: [],\n  })\n  const [currentTask, setCurrentTask] = React.useState({\n    task_id: 0,\n    taskgroup_name: \"\",\n    taskgroup_id: 0,\n    name: \"\",\n    difficulty: \"\",\n    description: \"\",\n    hint: \"\",\n    solution: \"\",\n    attachments: [],\n    submit_multiple: false,\n  })\n  const [submissions, setSubmissions] = React.useState([])\n  const [progress, setProgress] = React.useState([])\n  // var [submissionsFetched, setSubmissionsFetched] = React.useState(false)\n  const [numFiles, setNumFiles] = React.useState();\n  const showdownHighlight = require('showdown-highlight')\n\n  const token = React.useContext(AuthContext)\n  var files = [];\n\n  const fetchCourseData = () => {\n    const getCourse = axios.get('/courses/details', {params: { token, course_id }})\n      .then((courseResponse) => {\n        const courseData = courseResponse.data.course\n        console.log(courseData)\n        setCourse(courseData)\n      })\n      .catch((err) => {})\n  }\n\n  const fetchSubmissionData = () => {\n    const task_id = currentTask.task_id\n    const getSubmissions = axios.get('/courses/submissions', {params: { token, course_id }})\n      .then((submissionsResponse) => {\n        const submissionData = submissionsResponse.data.submissions\n        const progressData = submissionsResponse.data.progress\n        console.log(submissionData)\n        console.log(progressData)\n        setSubmissions(submissionData)\n        setProgress(progressData)\n      })\n      .catch((err) => {})\n  }\n\n  function getTopic(module_id) {\n    for (var t = 0; t < course.modules.length; t++) {\n      if (course.modules[t].module_id == module_id) {\n        return course.modules[t]\n      }\n    }\n  }\n\n  function getTask(module_id, taskgroup_id, task_id) {\n    for (var t = 0; t < course.modules.length; t++) {\n      if (course.modules[t].module_id == module_id) {\n        for (var tg = 0; tg < course.modules[t].taskgroups.length; tg++) {\n          if (course.modules[t].taskgroups[tg].taskgroup_id == taskgroup_id) {\n            for (var tk = 0; tk < course.modules[t].taskgroups[tg].tasks.length; tk++) {\n              if (course.modules[t].taskgroups[tg].tasks[tk].task_id == task_id) {\n                return course.modules[t].taskgroups[tg].tasks[tk]\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function showTopic(module_id) {\n    var elements = document.getElementById('topicTabs').childNodes\n    for (var e = 0; e < elements.length; e++) {\n      if (elements[e].id == 'md' + module_id) {\n        elements[e].style.borderTop = '1px solid lightgray'\n        elements[e].style.borderLeft = '1px solid lightgray'\n        elements[e].style.borderRight = '1px solid lightgray'\n      } else {\n        elements[e].style.border = '0px'\n      }\n    }\n\n    var topic = getTopic(module_id)\n\n    setCurrentTopic(topic)\n  }\n\n  function displayTaskgroup(taskgroup_id) {\n    var element = document.getElementById('tg' + taskgroup_id)\n    var elements = element.childNodes\n\n    console.log(element.name)\n\n    if (element.name == 'undisplayed' || element.name == undefined) {\n      for (var e = 1; e < elements.length; e++) {\n        elements[e].style.display = 'block'\n        console.log(elements[e].style.display)\n      }\n      element.name = 'displayed'\n\n    } else if (element.name == 'displayed') {\n      for (var e = 1; e < elements.length; e++) {\n        elements[e].style.display = 'none'\n      }\n      element.name = 'undisplayed'\n    }\n  }\n\n  function displayTask(module_id, taskgroup_id, task_id) {\n    var task = getTask(module_id, taskgroup_id, task_id)\n    console.log(task)\n    setCurrentTask(task)\n    setNumFiles(1)\n    files = []\n    taskgroup_list = []\n\n    var element = document.getElementById('hint')\n    element.innerHTML = 'Show Hint'\n    element.name = 'hintHide'\n    element.style.width = '80px'\n\n    var label = document.getElementById('0')\n    if (label != null) {\n        label.innerHTML = 'Choose File'\n    }\n  }\n\n  function showHint() {\n    var element = document.getElementById('hint')\n    element.innerHTML = '<h4>Hint</h4>' + converter.makeHtml(currentTask.hint).replace(/(?:\\r\\n|\\r|\\n)/g, '<br>')\n    element.name = 'hintShow'\n    element.style.width = '100%'\n    element.className = 'hintShow'\n  }\n\n  function setFile(event) {\n    files.push(event.target.files[0])\n    document.getElementById(event.target.id.replace('submission', '')).innerHTML = event.target.files[0].name\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault()\n\n    if (files.length == 0) {\n      console.log('No files chosen')\n      return\n    }\n\n    var form = new FormData()\n    form.append('token', token)\n\n    var taskgroup_submit_list = []\n    for (var i = 0; i < taskgroup_list.length; i++) {\n        console.log(event.target[i].name)\n        if (event.target[i].value) {\n            taskgroup_submit_list.push(taskgroup_list[i][0])\n        }\n    }\n\n    console.log(taskgroup_submit_list, files)\n    form.append('tasks', taskgroup_submit_list)\n\n    /*\n    for (var i = 0; i < numFiles; i++) {\n        form.append('file' + i, files[i])\n    }\n\n    console.log(files)\n\n\n    axios.post('/tasks/submit', form, { headers: { 'content-type': 'multipart/form-data' }})\n      .then((response) => {\n        const data = response.data\n        console.log(data)\n        window.location.reload()\n      })\n      .catch((err) => {})*/\n  }\n\n  function taskSubmissions() {\n    var subs = []\n    for (var sb = 0; sb < submissions.length; sb++) {\n      if (submissions[sb].task == currentTask.task_id) {\n        subs.push(submissions[sb])\n      }\n    }\n    return subs\n  }\n\n  function taskSubmissionState(task_id) {\n    var subs = []\n    for (var sb = 0; sb < submissions.length; sb++) {\n      if (submissions[sb].task == task_id) {\n        subs.push(submissions[sb])\n      }\n    }\n    console.log('subs', subs)\n    if (subs.length > 0) {\n      return subs[subs.length - 1].status\n    } else {\n      return ''\n    }\n\n  }\n\n  function addFile() {\n      setNumFiles(numFiles + 1)\n      document.getElementById('0').innerHTML = 'Choose File'\n  }\n\n  function removeFile(index) {\n      if (numFiles == 1) return;\n      setNumFiles(numFiles - 1)\n      document.getElementById('0').innerHTML = 'Choose File'\n  }\n\n  const step1 = useStep(fetchCourseData, [], 2)\n  const step2 = useStep(fetchSubmissionData, [], 2)\n\n  var converter = new Converter({extensions: [showdownHighlight]})\n\n  var hint;\n  if (currentTask.hint) {\n    hint = (\n      <div className='teacherButton' id='hint' name='hintHide' onClick={() => showHint()}>Show Hint</div>\n    )\n  } else {\n    hint = <div className='teacherButton' id='hint' style={{display: 'none'}}></div>\n  }\n\n  var submissionBlock;\n  if (user_type == 'student' && currentTask.task_id != 0) {\n\n    const taskSubs = taskSubmissions()\n    console.log(taskSubs)\n    var existingSubmissions;\n\n    if (taskSubs.length > 0) {\n\n        existingSubmissions = (\n        <>\n          <h4>Submissions</h4>\n          {taskSubs.map(({ time, currentTime, status, comment, files }, index) => (\n            <div className='submissionDisplay' name={status}>{comment}<br/>\n              <strong> {status}</strong><br/>\n              {files.map(({ cover_name, url }, index) => (\n                  <><a href={url}>{cover_name}</a><br/></>\n              ))}\n              <span>{getTimeDifference(time, currentTime)}</span>\n            </div>\n          ))}\n        </>\n        )\n    } else {\n      existingSubmissions = <></>\n    }\n\n    var fileboxes = []\n    for (var i = 0; i < numFiles; i++) {\n        if (i != 0) {\n            fileboxes.push(<div className='filebox'>\n                            <input type='file' name={'submission' + i} id={'submission' + i} onChange={setFile} /><br/>\n                            <label for={'submission' + i} id={i}>Choose File</label>\n                            <div className='redTeacherButton' id='removeFileButton' onClick={() => removeFile(i)}>Remove File</div>\n                           </div>)\n        } else {\n            fileboxes.push(<div className='filebox'>\n                            <input type='file' name={'submission' + i} id={'submission' + i} onChange={setFile} /><br/>\n                            <label for={'submission' + i} id={i}>Choose File</label>\n                           </div>)\n        }\n    }\n\n    var multipleSubmit;\n    var taskgroup_list = []\n\n    if (currentTask.submit_multiple) {\n        for (var tg = 0; tg < currentTopic.taskgroups.length; tg++) {\n            console.log(tg)\n            if (currentTopic.taskgroups[tg].taskgroup_id == currentTask.taskgroup_id) {\n                for (var tk = 0; tk < currentTopic.taskgroups[tg].tasks.length; tk++) {\n                    taskgroup_list.push([currentTopic.taskgroups[tg].tasks[tk].task_id, currentTopic.taskgroups[tg].tasks[tk].name])\n                }\n                break;\n            }\n        }\n\n        multipleSubmit = (\n            <>\n                <h4>Submit for Multiple Tasks</h4>\n                {taskgroup_list.map((element, index) => (<>\n                    <input type=\"checkbox\" name={'task' + element[0]} />   {element[1]} <br/>\n                </>))}\n            </>\n        )\n    } else {\n        taskgroup_list.push([currentTask.task_id, currentTask.name])\n        multipleSubmit = <input style='display: none' type='checkbox' name={'task' + currentTask.task_id} checked/>\n    }\n\n    console.log(taskgroup_list)\n\n    submissionBlock = (\n      <div className='submissionBox'>\n        <h4>Submit Your Solution</h4>\n        <hr/>\n        {multipleSubmit}\n        <p>Files</p>\n        <form name='submit_task_form' onSubmit={handleSubmit}>\n          {fileboxes.map((element, index) => (\n              <>{element}<br/></>\n          ))}\n          <br/><br/>\n          <div className='greenTeacherButton' id='addFileButton' onClick={addFile}>Add File</div><br/><br/>\n          <input type='submit' value='Submit'/>\n        </form>\n      </div>\n\n    )\n  } else {\n    submissionBlock = <></>\n  }\n\n  return (\n    <>\n      <div>\n          <h1 id='courseName'>{course.name}</h1>\n      </div>\n\n      <hr/>\n\n      <table id='topicProgress'>\n        <tr>\n        {course.modules.map(({ module_name }, index) => (\n          <td>{module_name}</td>\n        ))}\n        </tr>\n        <tr id='progressDashRow'>\n        {progress.map(({ unmarked, correct, incorrect, progress }, index) => (\n          <td>\n            <div className='progressDash'>\n              <div className='unmarkedDash' style={{width: progress.unmarked + '%'}}></div>\n              <div className='correctDash' style={{width: progress.correct + '%'}}></div>\n              <div className='incorrectDash' style={{width: progress.incorrect + '%'}}></div>\n            </div>\n          </td>\n        ))}\n        </tr>\n\n      </table>\n\n      <div id='topicTabs'>\n      {course.modules.map(({ module_id, module_name, topic_id }, index) => (\n        <div class='topicTab' id={\"md\" + module_id} onClick={() => showTopic(module_id)}>\n          {module_name}\n        </div>\n      ))}\n      </div>\n\n      <div id=\"taskGroupBox\">\n          <div id='taskgroupList'>\n          {currentTopic.taskgroups.map(({ taskgroup_id, name, tasks }, index) => (\n            <span className='taskGroupList' name='undisplayed' id={\"tg\" + taskgroup_id}>\n              <span className='taskGroupName' onClick={() => displayTaskgroup(taskgroup_id)}>\n              {name}\n              </span>\n              {tasks.map(({ task_id, name, difficulty }, index) => (\n                <>\n                  <span style={{display: 'none'}} id={\"tk\" + task_id} onClick={() => displayTask(currentTopic.module_id, taskgroup_id, task_id)}\n                  className={difficulty} name={taskSubmissionState(task_id)}>{name}</span>\n                </>\n              ))}\n            </span>\n          ))}\n          </div>\n\n          <div id='taskBox'>\n          {\n            <>\n              <h1 id='taskName'>{currentTask.name}</h1>\n              <span id='description'>{ReactHTMLParser(converter.makeHtml(currentTask.description).replace(/(?:\\r\\n|\\r|\\n)/g, '<br>'))}</span>\n            </>\n          }\n          {hint}\n          <br/>\n          <br/>\n          {submissionBlock}\n          {existingSubmissions}\n          </div>\n      </div>\n    </>\n  )\n\n}\n\nexport default ViewCourse\n"]},"metadata":{},"sourceType":"module"}