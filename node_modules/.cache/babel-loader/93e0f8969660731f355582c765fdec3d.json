{"ast":null,"code":"var _jsxFileName = \"/Users/nicholaspatrikeos/Sites/Gallifrey4.0/gallifrey-frontend/src/components/ViewCourse.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\nimport AuthContext from '../AuthContext';\nimport { useStep } from '../utils/update';\nimport { Converter } from 'showdown';\nimport ReactHTMLParser from 'react-html-parser';\nimport { getTimeDifference } from '../utils/helperFunctions';\n\nfunction ViewCourse({\n  course_id,\n  user_type\n}, ...props) {\n  const [course, setCourse] = React.useState({\n    course_id: 0,\n    name: \"\",\n    modules: []\n  });\n  const [currentTopic, setCurrentTopic] = React.useState({\n    topic_id: 0,\n    module_id: 0,\n    module_name: '',\n    taskgroups: []\n  });\n  const [currentTask, setCurrentTask] = React.useState({\n    task_id: 0,\n    taskgroup_name: \"\",\n    taskgroup_id: 0,\n    name: \"\",\n    difficulty: \"\",\n    description: \"\",\n    hint: \"\",\n    solution: \"\",\n    attachments: [],\n    submit_multiple: false,\n    answer_type: \"\",\n    choices: []\n  });\n  const [submissions, setSubmissions] = React.useState([]);\n  const [progress, setProgress] = React.useState([]); // var [submissionsFetched, setSubmissionsFetched] = React.useState(false)\n\n  const [numFiles, setNumFiles] = React.useState();\n\n  const showdownHighlight = require('showdown-highlight');\n\n  const token = React.useContext(AuthContext);\n  var files = [];\n\n  const fetchCourseData = () => {\n    const getCourse = axios.get('/courses/details', {\n      params: {\n        token,\n        course_id\n      }\n    }).then(courseResponse => {\n      const courseData = courseResponse.data.course;\n      console.log(courseData);\n      setCourse(courseData);\n    }).catch(err => {});\n  };\n\n  const fetchSubmissionData = () => {\n    const task_id = currentTask.task_id;\n    const getSubmissions = axios.get('/courses/submissions', {\n      params: {\n        token,\n        course_id\n      }\n    }).then(submissionsResponse => {\n      const submissionData = submissionsResponse.data.submissions;\n      const progressData = submissionsResponse.data.progress;\n      console.log(submissionData);\n      console.log(progressData);\n      setSubmissions(submissionData);\n      setProgress(progressData);\n    }).catch(err => {});\n  };\n\n  function getTopic(module_id) {\n    for (var t = 0; t < course.modules.length; t++) {\n      if (course.modules[t].module_id == module_id) {\n        return course.modules[t];\n      }\n    }\n  }\n\n  function getTask(module_id, taskgroup_id, task_id) {\n    for (var t = 0; t < course.modules.length; t++) {\n      if (course.modules[t].module_id == module_id) {\n        for (var tg = 0; tg < course.modules[t].taskgroups.length; tg++) {\n          if (course.modules[t].taskgroups[tg].taskgroup_id == taskgroup_id) {\n            for (var tk = 0; tk < course.modules[t].taskgroups[tg].tasks.length; tk++) {\n              if (course.modules[t].taskgroups[tg].tasks[tk].task_id == task_id) {\n                return course.modules[t].taskgroups[tg].tasks[tk];\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function showTopic(module_id) {\n    var elements = document.getElementById('topicTabs').childNodes;\n\n    for (var e = 0; e < elements.length; e++) {\n      if (elements[e].id == 'md' + module_id) {\n        elements[e].style.borderTop = '1px solid lightgray';\n        elements[e].style.borderLeft = '1px solid lightgray';\n        elements[e].style.borderRight = '1px solid lightgray';\n      } else {\n        elements[e].style.border = '0px';\n      }\n    }\n\n    var topic = getTopic(module_id);\n    setCurrentTopic(topic);\n  }\n\n  function displayTaskgroup(taskgroup_id) {\n    var element = document.getElementById('tg' + taskgroup_id);\n    var elements = element.childNodes;\n    console.log(element.name);\n\n    if (element.name == 'undisplayed' || element.name == undefined) {\n      for (var e = 1; e < elements.length; e++) {\n        elements[e].style.display = 'block';\n        console.log(elements[e].style.display);\n      }\n\n      element.name = 'displayed';\n    } else if (element.name == 'displayed') {\n      for (var e = 1; e < elements.length; e++) {\n        elements[e].style.display = 'none';\n      }\n\n      element.name = 'undisplayed';\n    }\n  }\n\n  function displayTask(module_id, taskgroup_id, task_id) {\n    var task = getTask(module_id, taskgroup_id, task_id);\n    console.log(task);\n    setCurrentTask(task);\n    setNumFiles(1);\n    files = [];\n    taskgroup_list = [];\n    var element = document.getElementById('hint');\n    element.innerHTML = 'Show Hint';\n    element.name = 'hintHide';\n    element.style.width = '80px';\n    var label = document.getElementById('0');\n\n    if (label != null) {\n      label.innerHTML = 'Choose File';\n    }\n  }\n\n  function showHint() {\n    var element = document.getElementById('hint');\n    element.innerHTML = '<h4>Hint</h4>' + converter.makeHtml(currentTask.hint).replace(/(?:\\r\\n|\\r|\\n)/g, '<br>');\n    element.name = 'hintShow';\n    element.style.width = '100%';\n    element.className = 'hintShow';\n  }\n\n  function setFile(event) {\n    files.push(event.target.files[0]);\n    document.getElementById(event.target.id.replace('submission', '')).innerHTML = event.target.files[0].name;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    var form = new FormData();\n    form.append('token', token);\n\n    if (currentTask.answer_type == 'standard') {\n      if (files.length == 0) {\n        console.log('No files chosen');\n        return;\n      }\n\n      var taskgroup_submit_list = [];\n\n      for (var i = 0; i < taskgroup_list.length; i++) {\n        console.log(event.target[i].name);\n\n        if (event.target[i].checked) {\n          taskgroup_submit_list.push(taskgroup_list[i][0]);\n        }\n      }\n\n      console.log(taskgroup_submit_list, files);\n      form.append('tasks', taskgroup_submit_list);\n\n      for (var i = 0; i < numFiles; i++) {\n        form.append('file' + i, files[i]);\n      }\n    } else if (currentTask.answer_type == 'multiple-choice-single') {\n      for (var c = 0; c < currentTask.choices.length; c++) {\n        if (document.getElementById('answer' + (c + 1)).checked) {\n          form.append('selected_answer', c);\n          break;\n        }\n      }\n\n      form.append('tasks', [currentTask.task_id]);\n    }\n\n    console.log(files);\n    axios.post('/tasks/submit', form, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(response => {\n      const data = response.data;\n      console.log(data);\n      window.location.reload();\n    }).catch(err => {});\n  }\n\n  function taskSubmissions() {\n    var subs = [];\n\n    for (var sb = 0; sb < submissions.length; sb++) {\n      if (submissions[sb].task == currentTask.task_id) {\n        subs.push(submissions[sb]);\n      }\n    }\n\n    return subs;\n  }\n\n  function taskSubmissionState(task_id) {\n    var subs = [];\n\n    for (var sb = 0; sb < submissions.length; sb++) {\n      if (submissions[sb].tasks.includes(task_id)) {\n        subs.push(submissions[sb]);\n      }\n    }\n\n    console.log('subs', subs);\n\n    if (subs.length > 0) {\n      return subs[subs.length - 1].status;\n    } else {\n      return '';\n    }\n  }\n\n  function addFile() {\n    setNumFiles(numFiles + 1);\n    document.getElementById('0').innerHTML = 'Choose File';\n  }\n\n  function removeFile(index) {\n    if (numFiles == 1) return;\n    setNumFiles(numFiles - 1);\n    document.getElementById('0').innerHTML = 'Choose File';\n  }\n\n  const step1 = useStep(fetchCourseData, [], 2);\n  const step2 = useStep(fetchSubmissionData, [], 2);\n  var converter = new Converter({\n    extensions: [showdownHighlight]\n  });\n  var hint;\n\n  if (currentTask.hint) {\n    hint = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"teacherButton\",\n      id: \"hint\",\n      name: \"hintHide\",\n      onClick: () => showHint(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 7\n      }\n    }, \"Show Hint\");\n  } else {\n    hint = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"teacherButton\",\n      id: \"hint\",\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 12\n      }\n    });\n  }\n\n  var submissionBlock;\n  const taskSubs = taskSubmissions();\n\n  if (user_type == 'student' && currentTask.task_id != 0) {\n    if (currentTask.answer_type == 'multiple-choice-single') {\n      if (taskSubs.length > 0) {\n        var choice = taskSubs[taskSubs.length - 1].selected_answer;\n        submissionBlock = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"submissionBox\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"form\", {\n          name: \"submit_task_form\",\n          onSubmit: handleSubmit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }\n        }, currentTask.choices.map((element, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"radio\",\n          name: \"correctAnswer\",\n          id: 'answer' + (index + 1),\n          checked: index == choice,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          for: 'answer' + (index + 1),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 29\n          }\n        }, element), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 82\n          }\n        }))), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"submit\",\n          value: \"Submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 19\n          }\n        })));\n      } else {\n        submissionBlock = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"submissionBox\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"form\", {\n          name: \"submit_task_form\",\n          onSubmit: handleSubmit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }\n        }, currentTask.choices.map((element, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"radio\",\n          name: \"correctAnswer\",\n          id: 'answer' + (index + 1),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          for: 'answer' + (index + 1),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 29\n          }\n        }, element), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 82\n          }\n        }))), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"submit\",\n          value: \"Submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 19\n          }\n        })));\n      }\n    } else if (currentTask.answer_type == 'standard') {\n      console.log(taskSubs);\n      var existingSubmissions;\n\n      if (taskSubs.length > 0) {\n        existingSubmissions = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }\n        }, \"Submissions\"), taskSubs.map(({\n          time,\n          currentTime,\n          status,\n          comment,\n          files\n        }, index) => /*#__PURE__*/React.createElement(\"div\", {\n          className: \"submissionDisplay\",\n          name: status,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }\n        }, comment, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 75\n          }\n        }), /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 19\n          }\n        }, \" \", status), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 45\n          }\n        }), files.map(({\n          cover_name,\n          url\n        }, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n          href: url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }\n        }, cover_name), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 55\n          }\n        }))), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 19\n          }\n        }, getTimeDifference(time, currentTime)))));\n      } else {\n        existingSubmissions = /*#__PURE__*/React.createElement(React.Fragment, null);\n      }\n\n      var fileboxes = [];\n\n      for (var i = 0; i < numFiles; i++) {\n        if (i != 0) {\n          fileboxes.push( /*#__PURE__*/React.createElement(\"div\", {\n            className: \"filebox\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 32\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"file\",\n            name: 'submission' + i,\n            id: 'submission' + i,\n            onChange: setFile,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 33\n            }\n          }), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 119\n            }\n          }), /*#__PURE__*/React.createElement(\"label\", {\n            for: 'submission' + i,\n            id: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 33\n            }\n          }, \"Choose File\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"redTeacherButton\",\n            id: \"removeFileButton\",\n            onClick: () => removeFile(i),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 33\n            }\n          }, \"Remove File\")));\n        } else {\n          fileboxes.push( /*#__PURE__*/React.createElement(\"div\", {\n            className: \"filebox\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 32\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"file\",\n            name: 'submission' + i,\n            id: 'submission' + i,\n            onChange: setFile,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 33\n            }\n          }), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 119\n            }\n          }), /*#__PURE__*/React.createElement(\"label\", {\n            for: 'submission' + i,\n            id: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 33\n            }\n          }, \"Choose File\")));\n        }\n      }\n\n      var multipleSubmit;\n      var taskgroup_list = [];\n\n      if (currentTask.submit_multiple) {\n        for (var tg = 0; tg < currentTopic.taskgroups.length; tg++) {\n          console.log(tg);\n\n          if (currentTopic.taskgroups[tg].taskgroup_id == currentTask.taskgroup_id) {\n            for (var tk = 0; tk < currentTopic.taskgroups[tg].tasks.length; tk++) {\n              taskgroup_list.push([currentTopic.taskgroups[tg].tasks[tk].task_id, currentTopic.taskgroups[tg].tasks[tk].name]);\n            }\n\n            break;\n          }\n        }\n\n        multipleSubmit = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 21\n          }\n        }, \"Submit for Multiple Tasks\"), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 55\n          }\n        }), taskgroup_list.map((element, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          name: 'task' + element[0],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 25\n          }\n        }), \"   \", element[1], \" \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 93\n          }\n        }))));\n      } else {\n        taskgroup_list.push([currentTask.task_id, currentTask.name]);\n        multipleSubmit = /*#__PURE__*/React.createElement(\"input\", {\n          id: \"singleSubmit\",\n          type: \"checkbox\",\n          name: 'task' + currentTask.task_id,\n          checked: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 31\n          }\n        });\n      }\n\n      console.log(taskgroup_list);\n      submissionBlock = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"submissionBox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }\n      }, \"Submit Your Solution\"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"form\", {\n        name: \"submit_task_form\",\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }\n      }, multipleSubmit, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 15\n        }\n      }, \"Files\"), fileboxes.map((element, index) => /*#__PURE__*/React.createElement(React.Fragment, null, element, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 30\n        }\n      }))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 20\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"greenTeacherButton\",\n        id: \"addFileButton\",\n        onClick: addFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 15\n        }\n      }, \"Add File\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 102\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 107\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 15\n        }\n      })));\n    }\n  } else {\n    submissionBlock = /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"courseName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 11\n    }\n  }, course.name)), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    id: \"topicProgress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 9\n    }\n  }, course.modules.map(({\n    module_name\n  }, index) => /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 11\n    }\n  }, module_name))), /*#__PURE__*/React.createElement(\"tr\", {\n    id: \"progressDashRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }\n  }, progress.map(({\n    unmarked,\n    correct,\n    incorrect,\n    progress\n  }, index) => /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progressDash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"unmarkedDash\",\n    style: {\n      width: progress.unmarked + '%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"correctDash\",\n    style: {\n      width: progress.correct + '%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"incorrectDash\",\n    style: {\n      width: progress.incorrect + '%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 15\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"topicTabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }\n  }, course.modules.map(({\n    module_id,\n    module_name,\n    topic_id\n  }, index) => /*#__PURE__*/React.createElement(\"div\", {\n    class: \"topicTab\",\n    id: \"md\" + module_id,\n    onClick: () => showTopic(module_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 9\n    }\n  }, module_name))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"taskGroupBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"taskgroupList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 11\n    }\n  }, currentTopic.taskgroups.map(({\n    taskgroup_id,\n    name,\n    tasks\n  }, index) => /*#__PURE__*/React.createElement(\"span\", {\n    className: \"taskGroupList\",\n    name: \"undisplayed\",\n    id: \"tg\" + taskgroup_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"taskGroupName\",\n    onClick: () => displayTaskgroup(taskgroup_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 15\n    }\n  }, name), tasks.map(({\n    task_id,\n    name,\n    difficulty\n  }, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'none'\n    },\n    id: \"tk\" + task_id,\n    onClick: () => displayTask(currentTopic.module_id, taskgroup_id, task_id),\n    className: difficulty,\n    name: taskSubmissionState(task_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 19\n    }\n  }, name)))))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"taskBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"taskName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 15\n    }\n  }, currentTask.name), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 15\n    }\n  }, ReactHTMLParser(converter.makeHtml(currentTask.description).replace(/(?:\\r\\n|\\r|\\n)/g, '<br>')))), hint, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 11\n    }\n  }), submissionBlock, existingSubmissions)));\n}\n\nexport default ViewCourse;","map":{"version":3,"sources":["/Users/nicholaspatrikeos/Sites/Gallifrey4.0/gallifrey-frontend/src/components/ViewCourse.js"],"names":["React","axios","Link","AuthContext","useStep","Converter","ReactHTMLParser","getTimeDifference","ViewCourse","course_id","user_type","props","course","setCourse","useState","name","modules","currentTopic","setCurrentTopic","topic_id","module_id","module_name","taskgroups","currentTask","setCurrentTask","task_id","taskgroup_name","taskgroup_id","difficulty","description","hint","solution","attachments","submit_multiple","answer_type","choices","submissions","setSubmissions","progress","setProgress","numFiles","setNumFiles","showdownHighlight","require","token","useContext","files","fetchCourseData","getCourse","get","params","then","courseResponse","courseData","data","console","log","catch","err","fetchSubmissionData","getSubmissions","submissionsResponse","submissionData","progressData","getTopic","t","length","getTask","tg","tk","tasks","showTopic","elements","document","getElementById","childNodes","e","id","style","borderTop","borderLeft","borderRight","border","topic","displayTaskgroup","element","undefined","display","displayTask","task","taskgroup_list","innerHTML","width","label","showHint","converter","makeHtml","replace","className","setFile","event","push","target","handleSubmit","preventDefault","form","FormData","append","taskgroup_submit_list","i","checked","c","post","headers","response","window","location","reload","taskSubmissions","subs","sb","taskSubmissionState","includes","status","addFile","removeFile","index","step1","step2","extensions","submissionBlock","taskSubs","choice","selected_answer","map","existingSubmissions","time","currentTime","comment","cover_name","url","fileboxes","multipleSubmit","unmarked","correct","incorrect"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport '../App.css'\nimport AuthContext from '../AuthContext'\nimport { useStep } from '../utils/update'\nimport { Converter } from 'showdown'\nimport ReactHTMLParser from 'react-html-parser'\nimport { getTimeDifference } from '../utils/helperFunctions'\n\nfunction ViewCourse({ course_id, user_type }, ...props) {\n\n  const [course, setCourse] = React.useState({\n    course_id: 0,\n    name: \"\",\n    modules: []\n  })\n  const [currentTopic, setCurrentTopic] = React.useState({\n    topic_id: 0,\n    module_id: 0,\n    module_name: '',\n    taskgroups: [],\n  })\n  const [currentTask, setCurrentTask] = React.useState({\n    task_id: 0,\n    taskgroup_name: \"\",\n    taskgroup_id: 0,\n    name: \"\",\n    difficulty: \"\",\n    description: \"\",\n    hint: \"\",\n    solution: \"\",\n    attachments: [],\n    submit_multiple: false,\n    answer_type: \"\",\n    choices: [],\n  })\n  const [submissions, setSubmissions] = React.useState([])\n  const [progress, setProgress] = React.useState([])\n  // var [submissionsFetched, setSubmissionsFetched] = React.useState(false)\n  const [numFiles, setNumFiles] = React.useState();\n  const showdownHighlight = require('showdown-highlight')\n\n  const token = React.useContext(AuthContext)\n  var files = [];\n\n  const fetchCourseData = () => {\n    const getCourse = axios.get('/courses/details', {params: { token, course_id }})\n      .then((courseResponse) => {\n        const courseData = courseResponse.data.course\n        console.log(courseData)\n        setCourse(courseData)\n      })\n      .catch((err) => {})\n  }\n\n  const fetchSubmissionData = () => {\n    const task_id = currentTask.task_id\n    const getSubmissions = axios.get('/courses/submissions', {params: { token, course_id }})\n      .then((submissionsResponse) => {\n        const submissionData = submissionsResponse.data.submissions\n        const progressData = submissionsResponse.data.progress\n        console.log(submissionData)\n        console.log(progressData)\n        setSubmissions(submissionData)\n        setProgress(progressData)\n      })\n      .catch((err) => {})\n  }\n\n  function getTopic(module_id) {\n    for (var t = 0; t < course.modules.length; t++) {\n      if (course.modules[t].module_id == module_id) {\n        return course.modules[t]\n      }\n    }\n  }\n\n  function getTask(module_id, taskgroup_id, task_id) {\n    for (var t = 0; t < course.modules.length; t++) {\n      if (course.modules[t].module_id == module_id) {\n        for (var tg = 0; tg < course.modules[t].taskgroups.length; tg++) {\n          if (course.modules[t].taskgroups[tg].taskgroup_id == taskgroup_id) {\n            for (var tk = 0; tk < course.modules[t].taskgroups[tg].tasks.length; tk++) {\n              if (course.modules[t].taskgroups[tg].tasks[tk].task_id == task_id) {\n                return course.modules[t].taskgroups[tg].tasks[tk]\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function showTopic(module_id) {\n    var elements = document.getElementById('topicTabs').childNodes\n    for (var e = 0; e < elements.length; e++) {\n      if (elements[e].id == 'md' + module_id) {\n        elements[e].style.borderTop = '1px solid lightgray'\n        elements[e].style.borderLeft = '1px solid lightgray'\n        elements[e].style.borderRight = '1px solid lightgray'\n      } else {\n        elements[e].style.border = '0px'\n      }\n    }\n\n    var topic = getTopic(module_id)\n\n    setCurrentTopic(topic)\n  }\n\n  function displayTaskgroup(taskgroup_id) {\n    var element = document.getElementById('tg' + taskgroup_id)\n    var elements = element.childNodes\n\n    console.log(element.name)\n\n    if (element.name == 'undisplayed' || element.name == undefined) {\n      for (var e = 1; e < elements.length; e++) {\n        elements[e].style.display = 'block'\n        console.log(elements[e].style.display)\n      }\n      element.name = 'displayed'\n\n    } else if (element.name == 'displayed') {\n      for (var e = 1; e < elements.length; e++) {\n        elements[e].style.display = 'none'\n      }\n      element.name = 'undisplayed'\n    }\n  }\n\n  function displayTask(module_id, taskgroup_id, task_id) {\n    var task = getTask(module_id, taskgroup_id, task_id)\n    console.log(task)\n    setCurrentTask(task)\n    setNumFiles(1)\n    files = []\n    taskgroup_list = []\n\n    var element = document.getElementById('hint')\n    element.innerHTML = 'Show Hint'\n    element.name = 'hintHide'\n    element.style.width = '80px'\n\n    var label = document.getElementById('0')\n    if (label != null) {\n        label.innerHTML = 'Choose File'\n    }\n  }\n\n  function showHint() {\n    var element = document.getElementById('hint')\n    element.innerHTML = '<h4>Hint</h4>' + converter.makeHtml(currentTask.hint).replace(/(?:\\r\\n|\\r|\\n)/g, '<br>')\n    element.name = 'hintShow'\n    element.style.width = '100%'\n    element.className = 'hintShow'\n  }\n\n  function setFile(event) {\n    files.push(event.target.files[0])\n    document.getElementById(event.target.id.replace('submission', '')).innerHTML = event.target.files[0].name\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault()\n\n    var form = new FormData()\n    form.append('token', token)\n\n    if (currentTask.answer_type == 'standard') {\n\n        if (files.length == 0) {\n          console.log('No files chosen')\n          return\n        }\n\n        var taskgroup_submit_list = []\n        for (var i = 0; i < taskgroup_list.length; i++) {\n            console.log(event.target[i].name)\n            if (event.target[i].checked) {\n                taskgroup_submit_list.push(taskgroup_list[i][0])\n            }\n        }\n\n        console.log(taskgroup_submit_list, files)\n        form.append('tasks', taskgroup_submit_list)\n\n\n        for (var i = 0; i < numFiles; i++) {\n            form.append('file' + i, files[i])\n        }\n    } else if (currentTask.answer_type == 'multiple-choice-single') {\n        for (var c = 0; c < currentTask.choices.length; c++) {\n            if (document.getElementById('answer' + (c + 1)).checked) {\n                form.append('selected_answer', c)\n                break\n            }\n        }\n        form.append('tasks', [currentTask.task_id])\n    }\n\n    console.log(files)\n\n\n    axios.post('/tasks/submit', form, { headers: { 'content-type': 'multipart/form-data' }})\n      .then((response) => {\n        const data = response.data\n        console.log(data)\n        window.location.reload()\n      })\n      .catch((err) => {})\n  }\n\n  function taskSubmissions() {\n    var subs = []\n    for (var sb = 0; sb < submissions.length; sb++) {\n      if (submissions[sb].task == currentTask.task_id) {\n        subs.push(submissions[sb])\n      }\n    }\n    return subs\n  }\n\n  function taskSubmissionState(task_id) {\n    var subs = []\n    for (var sb = 0; sb < submissions.length; sb++) {\n      if (submissions[sb].tasks.includes(task_id)) {\n        subs.push(submissions[sb])\n      }\n    }\n    console.log('subs', subs)\n    if (subs.length > 0) {\n      return subs[subs.length - 1].status\n    } else {\n      return ''\n    }\n\n  }\n\n  function addFile() {\n      setNumFiles(numFiles + 1)\n      document.getElementById('0').innerHTML = 'Choose File'\n  }\n\n  function removeFile(index) {\n      if (numFiles == 1) return;\n      setNumFiles(numFiles - 1)\n      document.getElementById('0').innerHTML = 'Choose File'\n  }\n\n  const step1 = useStep(fetchCourseData, [], 2)\n  const step2 = useStep(fetchSubmissionData, [], 2)\n\n  var converter = new Converter({extensions: [showdownHighlight]})\n\n  var hint;\n  if (currentTask.hint) {\n    hint = (\n      <div className='teacherButton' id='hint' name='hintHide' onClick={() => showHint()}>Show Hint</div>\n    )\n  } else {\n    hint = <div className='teacherButton' id='hint' style={{display: 'none'}}></div>\n  }\n\n  var submissionBlock;\n  const taskSubs = taskSubmissions()\n\n  if (user_type == 'student' && currentTask.task_id != 0) {\n    if (currentTask.answer_type == 'multiple-choice-single') {\n\n      if (taskSubs.length > 0) {\n          var choice = taskSubs[taskSubs.length - 1].selected_answer\n          submissionBlock = (\n              <div className='submissionBox'>\n                <hr/>\n                <form name='submit_task_form' onSubmit={handleSubmit}>\n                    {currentTask.choices.map((element, index) => (\n                        <>\n                            <input type='radio' name='correctAnswer' id={'answer' + (index + 1)} checked={index == choice} />\n                            <label for={'answer' + (index + 1)}>{element}</label><br/>\n                        </>\n                    ))}\n                  <input type='submit' value='Submit'/>\n                </form>\n              </div>\n\n          )\n      } else {\n          submissionBlock = (\n              <div className='submissionBox'>\n                <hr/>\n                <form name='submit_task_form' onSubmit={handleSubmit}>\n                    {currentTask.choices.map((element, index) => (\n                        <>\n                            <input type='radio' name='correctAnswer' id={'answer' + (index + 1)} />\n                            <label for={'answer' + (index + 1)}>{element}</label><br/>\n                        </>\n                    ))}\n                  <input type='submit' value='Submit'/>\n                </form>\n              </div>\n\n          )\n      }\n\n    } else if (currentTask.answer_type == 'standard') {\n\n        console.log(taskSubs)\n        var existingSubmissions;\n\n        if (taskSubs.length > 0) {\n\n            existingSubmissions = (\n            <>\n              <h4>Submissions</h4>\n              {taskSubs.map(({ time, currentTime, status, comment, files }, index) => (\n                <div className='submissionDisplay' name={status}>{comment}<br/>\n                  <strong> {status}</strong><br/>\n                  {files.map(({ cover_name, url }, index) => (\n                      <><a href={url}>{cover_name}</a><br/></>\n                  ))}\n                  <span>{getTimeDifference(time, currentTime)}</span>\n                </div>\n              ))}\n            </>\n            )\n        } else {\n          existingSubmissions = <></>\n        }\n\n        var fileboxes = []\n        for (var i = 0; i < numFiles; i++) {\n            if (i != 0) {\n                fileboxes.push(<div className='filebox'>\n                                <input type='file' name={'submission' + i} id={'submission' + i} onChange={setFile} /><br/>\n                                <label for={'submission' + i} id={i}>Choose File</label>\n                                <div className='redTeacherButton' id='removeFileButton' onClick={() => removeFile(i)}>Remove File</div>\n                               </div>)\n            } else {\n                fileboxes.push(<div className='filebox'>\n                                <input type='file' name={'submission' + i} id={'submission' + i} onChange={setFile} /><br/>\n                                <label for={'submission' + i} id={i}>Choose File</label>\n                               </div>)\n            }\n        }\n\n        var multipleSubmit;\n        var taskgroup_list = []\n\n        if (currentTask.submit_multiple) {\n            for (var tg = 0; tg < currentTopic.taskgroups.length; tg++) {\n                console.log(tg)\n                if (currentTopic.taskgroups[tg].taskgroup_id == currentTask.taskgroup_id) {\n                    for (var tk = 0; tk < currentTopic.taskgroups[tg].tasks.length; tk++) {\n                        taskgroup_list.push([currentTopic.taskgroups[tg].tasks[tk].task_id, currentTopic.taskgroups[tg].tasks[tk].name])\n                    }\n                    break;\n                }\n            }\n\n            multipleSubmit = (\n                <>\n                    <h4>Submit for Multiple Tasks</h4><br/>\n                    {taskgroup_list.map((element, index) => (<>\n                        <input type=\"checkbox\" name={'task' + element[0]} />   {element[1]} <br/>\n                    </>))}\n                </>\n            )\n        } else {\n            taskgroup_list.push([currentTask.task_id, currentTask.name])\n            multipleSubmit = (<input id='singleSubmit' type='checkbox' name={'task' + currentTask.task_id} checked/>)\n        }\n\n        console.log(taskgroup_list)\n\n        submissionBlock = (\n          <div className='submissionBox'>\n            <h4>Submit Your Solution</h4>\n            <hr/>\n            <form name='submit_task_form' onSubmit={handleSubmit}>\n              {multipleSubmit}\n              <p>Files</p>\n              {fileboxes.map((element, index) => (\n                  <>{element}<br/></>\n              ))}\n              <br/><br/>\n              <div className='greenTeacherButton' id='addFileButton' onClick={addFile}>Add File</div><br/><br/>\n              <input type='submit' value='Submit'/>\n            </form>\n          </div>\n\n        )\n    }\n  } else {\n    submissionBlock = <></>\n  }\n\n  return (\n    <>\n      <div>\n          <h1 id='courseName'>{course.name}</h1>\n      </div>\n\n      <hr/>\n\n      <table id='topicProgress'>\n        <tr>\n        {course.modules.map(({ module_name }, index) => (\n          <td>{module_name}</td>\n        ))}\n        </tr>\n        <tr id='progressDashRow'>\n        {progress.map(({ unmarked, correct, incorrect, progress }, index) => (\n          <td>\n            <div className='progressDash'>\n              <div className='unmarkedDash' style={{width: progress.unmarked + '%'}}></div>\n              <div className='correctDash' style={{width: progress.correct + '%'}}></div>\n              <div className='incorrectDash' style={{width: progress.incorrect + '%'}}></div>\n            </div>\n          </td>\n        ))}\n        </tr>\n\n      </table>\n\n      <div id='topicTabs'>\n      {course.modules.map(({ module_id, module_name, topic_id }, index) => (\n        <div class='topicTab' id={\"md\" + module_id} onClick={() => showTopic(module_id)}>\n          {module_name}\n        </div>\n      ))}\n      </div>\n\n      <div id=\"taskGroupBox\">\n          <div id='taskgroupList'>\n          {currentTopic.taskgroups.map(({ taskgroup_id, name, tasks }, index) => (\n            <span className='taskGroupList' name='undisplayed' id={\"tg\" + taskgroup_id}>\n              <span className='taskGroupName' onClick={() => displayTaskgroup(taskgroup_id)}>\n              {name}\n              </span>\n              {tasks.map(({ task_id, name, difficulty }, index) => (\n                <>\n                  <span style={{display: 'none'}} id={\"tk\" + task_id} onClick={() => displayTask(currentTopic.module_id, taskgroup_id, task_id)}\n                  className={difficulty} name={taskSubmissionState(task_id)}>{name}</span>\n                </>\n              ))}\n            </span>\n          ))}\n          </div>\n\n          <div id='taskBox'>\n          {\n            <>\n              <h1 id='taskName'>{currentTask.name}</h1>\n              <span id='description'>{ReactHTMLParser(converter.makeHtml(currentTask.description).replace(/(?:\\r\\n|\\r|\\n)/g, '<br>'))}</span>\n            </>\n          }\n          {hint}\n          <br/>\n          <br/>\n          {submissionBlock}\n          {existingSubmissions}\n          </div>\n      </div>\n    </>\n  )\n\n}\n\nexport default ViewCourse\n"]},"metadata":{},"sourceType":"module"}