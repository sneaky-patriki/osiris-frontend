{"ast":null,"code":"var _jsxFileName = \"/Users/nicholaspatrikeos/Sites/Gallifrey4.0/gallifrey-frontend/src/pages/TasksEditPage.js\";\nimport React from 'react';\nimport Layout from '../components/Layout';\nimport '../App.css';\nimport AuthContext from '../AuthContext';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useStep } from '../utils/update';\n\nfunction TasksEditPage(props) {\n  const [task, setTask] = React.useState({\n    task_id: 0,\n    taskgroup: \"\",\n    name: \"\",\n    difficulty: \"\",\n    description: \"\",\n    hint: \"\",\n    solution: \"\",\n    answer_type: \"\",\n    choices: []\n  });\n  const [numChoices, setNumChoices] = React.useState();\n  const token = React.useContext(AuthContext);\n  var task_id;\n\n  if (props.location.task_id != undefined) {\n    localStorage.setItem('currentTask', props.location.task_id);\n    task_id = props.location.task_id;\n  } else {\n    task_id = localStorage.getItem('currentTask');\n  }\n\n  const fetchTaskData = () => {\n    const getTask = axios.get('/tasks/details', {\n      params: {\n        token,\n        task_id\n      }\n    }).then(taskResponse => {\n      const taskData = taskResponse.data.task;\n      console.log(taskData);\n      setTask(taskData);\n      setNumChoices(taskData.choices.length);\n    });\n  };\n\n  const step = useStep(fetchTaskData, [], 2);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(event.target);\n    const name = event.target[0].value;\n    const difficulty = event.target[1].value;\n    const description = event.target[2].value;\n    const hint = event.target[3].value;\n    var choices = [];\n    var correct_answer;\n\n    for (var c = 0; c < numChoices; c++) {\n      choices.push(document.getElementById('choice' + (c + 1)).value);\n\n      if (document.getElementById('answer' + (c + 1)).checked) {\n        correct_answer = c;\n      }\n    }\n\n    console.log(event.target[4].value, choices, correct_answer);\n    /*\n    const solution = event.target[4].value\n     axios.put('/tasks/edit', { token, task_id, name, difficulty, description, hint, solution })\n      .then((response) => {\n        const data = response.data\n        console.log(data)\n        props.history.push('/topics/manage')\n      })\n      .catch((err) => {})*/\n  }\n\n  function setChoices() {\n    var n = document.getElementById('numChoices').value;\n\n    if (n >= 0) {\n      setNumChoices(n);\n    } else {\n      console.log('Invalid number of choices');\n    }\n  }\n\n  var answerBox;\n\n  if (task.answer_type == 'multiple-choice-single') {\n    if (numChoices == task.choices.length) {\n      answerBox = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, \"Choices\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, \"Choose the correct answer.\"), task.choices.map((element, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"correctAnswer\",\n        id: 'choice' + index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        for: 'choice' + index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }\n      }, element))), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, \"Number of Choices\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"numChoices\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"button\",\n        onClick: setChoices,\n        value: \"Reset Choices\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }));\n    } else {\n      var nums = [];\n\n      for (var i = 0; i < numChoices; i++) {\n        nums.push(i);\n      }\n\n      answerBox = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }, \"Choices\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, \"Choose the correct answer.\"), nums.map((element, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"correctAnswer\",\n        id: 'answer' + (index + 1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: 'choice' + (index + 1),\n        placeholder: 'Choice ' + (index + 1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 108\n        }\n      }))), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, \"Number of Choices\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"numChoices\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"button\",\n        onClick: setChoices,\n        value: \"Reset Choices\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }));\n    }\n  }\n\n  console.log(answerBox);\n  return /*#__PURE__*/React.createElement(Layout, {\n    navtype: \"teacher\",\n    body: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"headerSection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \"Tasks\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \"Topic: \", props.location.topic_name), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, \"Task Group: \", task.taskgroup)), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      name: \"addTask\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"*Title\",\n      name: \"name\",\n      defaultValue: task.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 89\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 94\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, \"*Difficulty\"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"difficulty\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Bronze\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, \"Bronze\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Silver\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, \"Silver\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Gold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, \"Gold\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Platinum\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, \"Platinum\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Kryptonite\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, \"Kryptonite\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"description\",\n      placeholder: \"Description\",\n      defaultValue: task.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 109\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 114\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"hint\",\n      placeholder: \"Hint\",\n      defaultValue: task.hint,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 88\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 93\n      }\n    }), answerBox, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"solution\",\n      placeholder: \"Solution\",\n      defaultValue: task.solution,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 100\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 105\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Update Task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/topics/manage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, \"Cancel\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default TasksEditPage;","map":{"version":3,"sources":["/Users/nicholaspatrikeos/Sites/Gallifrey4.0/gallifrey-frontend/src/pages/TasksEditPage.js"],"names":["React","Layout","AuthContext","Link","axios","useStep","TasksEditPage","props","task","setTask","useState","task_id","taskgroup","name","difficulty","description","hint","solution","answer_type","choices","numChoices","setNumChoices","token","useContext","location","undefined","localStorage","setItem","getItem","fetchTaskData","getTask","get","params","then","taskResponse","taskData","data","console","log","length","step","handleSubmit","event","preventDefault","target","value","correct_answer","c","push","document","getElementById","checked","setChoices","n","answerBox","map","element","index","nums","i","topic_name"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Layout from '../components/Layout'\nimport '../App.css'\nimport AuthContext from '../AuthContext'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { useStep } from '../utils/update'\n\nfunction TasksEditPage(props) {\n\n  const [task, setTask] = React.useState({\n    task_id: 0,\n    taskgroup: \"\",\n    name: \"\",\n    difficulty: \"\",\n    description: \"\",\n    hint: \"\",\n    solution: \"\",\n    answer_type: \"\",\n    choices: []\n  })\n  const [numChoices, setNumChoices] = React.useState()\n  const token = React.useContext(AuthContext)\n\n  var task_id;\n  if (props.location.task_id != undefined) {\n    localStorage.setItem('currentTask', props.location.task_id)\n    task_id = props.location.task_id\n  } else {\n    task_id = localStorage.getItem('currentTask')\n  }\n\n  const fetchTaskData = () => {\n    const getTask = axios.get('/tasks/details', {params: { token, task_id }})\n      .then((taskResponse) => {\n        const taskData = taskResponse.data.task\n        console.log(taskData)\n        setTask(taskData)\n        setNumChoices(taskData.choices.length)\n      })\n  }\n\n  const step = useStep(fetchTaskData, [], 2)\n\n  function handleSubmit(event) {\n    event.preventDefault()\n    console.log(event.target)\n    const name = event.target[0].value\n    const difficulty = event.target[1].value\n    const description = event.target[2].value\n    const hint = event.target[3].value\n\n    var choices = []\n    var correct_answer;\n    for (var c = 0; c < numChoices; c++) {\n        choices.push(document.getElementById('choice' + (c + 1)).value)\n        if (document.getElementById('answer' + (c + 1)).checked) {\n            correct_answer = c\n        }\n    }\n\n    console.log(event.target[4].value, choices, correct_answer)\n    /*\n    const solution = event.target[4].value\n\n    axios.put('/tasks/edit', { token, task_id, name, difficulty, description, hint, solution })\n      .then((response) => {\n        const data = response.data\n        console.log(data)\n        props.history.push('/topics/manage')\n      })\n      .catch((err) => {})*/\n  }\n\n  function setChoices() {\n      var n = document.getElementById('numChoices').value\n      if (n >= 0) {\n          setNumChoices(n)\n      } else {\n          console.log('Invalid number of choices')\n      }\n  }\n\n  var answerBox\n  if (task.answer_type == 'multiple-choice-single') {\n      if (numChoices == task.choices.length) {\n          answerBox = (\n              <>\n                <h4>Choices</h4><br/>\n                <p>Choose the correct answer.</p>\n                {task.choices.map((element, index) => (\n                    <>\n                        <input type='radio' name='correctAnswer' id={'choice' + index} />\n                        <label for={'choice' + index}>{element}</label>\n                    </>\n                ))}\n                <h4>Number of Choices</h4>\n                <input type='text' id='numChoices'/><br/>\n                <input type='button' onClick={setChoices} value='Reset Choices' />\n              </>\n          )\n      } else {\n          var nums = []\n          for (var i = 0; i < numChoices; i++) {\n              nums.push(i)\n          }\n          answerBox = (\n              <>\n                <h4>Choices</h4><br/>\n                <p>Choose the correct answer.</p>\n                {nums.map((element, index) => (\n                    <><input type='radio' name='correctAnswer' id={'answer' + (index + 1)} />\n                    <input type='text' id={'choice' + (index + 1)} placeholder={'Choice ' + (index + 1)} /><br/></>\n                ))}\n                <h4>Number of Choices</h4>\n                <input type='text' id='numChoices'/><br/>\n                <input type='button' onClick={setChoices} value='Reset Choices' />\n              </>\n          )\n      }\n  }\n\n  console.log(answerBox)\n\n  return (\n    <Layout navtype='teacher' body={\n      <>\n        <div class='headerSection'>\n            <h1>Tasks</h1>\n            <h2>Topic: {props.location.topic_name}</h2>\n            <h2>Task Group: {task.taskgroup}</h2>\n        </div>\n        <hr/>\n\n        <form name='addTask' onSubmit={handleSubmit}>\n          <input type='text' placeholder='*Title' name='name' defaultValue={task.name}/><br/><br/>\n          <h4>*Difficulty</h4>\n\n          <select id=\"difficulty\">\n              <option value=\"Bronze\">Bronze</option>\n              <option value=\"Silver\">Silver</option>\n              <option value=\"Gold\">Gold</option>\n              <option value='Platinum'>Platinum</option>\n              <option value='Kryptonite'>Kryptonite</option>\n          </select><br/><br/>\n\n          <textarea name='description' placeholder=\"Description\" defaultValue={task.description}></textarea><br/><br/>\n\n          <textarea name='hint' placeholder=\"Hint\" defaultValue={task.hint}></textarea><br/><br/>\n\n          {answerBox}<br/><br/>\n\n          <textarea name='solution' placeholder=\"Solution\" defaultValue={task.solution}></textarea><br/><br/>\n\n\n          <input type='submit' value='Update Task' />\n          <Link to='/topics/manage'>Cancel</Link>\n        </form>\n      </>\n    }/>\n  )\n}\n\nexport default TasksEditPage;\n"]},"metadata":{},"sourceType":"module"}